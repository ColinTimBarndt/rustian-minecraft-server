// This file was automatically generated
#![allow(unused)]
use std::collections::HashSet;
use crate::server::universe::world::chunk::ChunkPosition;

pub const MAX_RENDER_DISTANCE: u8 = 16;

const OFFSETS_D0_0: [(i8,i8); 1] = [(0,0)];
const OFFSETS_D1_0: [(i8,i8); 8] = [(-1,0),(0,-1),(0,1),(1,0),(-1,-1),(-1,1),(1,-1),(1,1)];
const OFFSETS_D2_0: [(i8,i8); 16] = [(-2,0),(0,-2),(0,2),(2,0),(-2,-1),(-2,1),(-1,-2),(-1,2),(1,-2),(1,2),(2,-1),(2,1),(-2,-2),(-2,2),(2,-2),(2,2)];
const OFFSETS_D3_0: [(i8,i8); 20] = [(-3,0),(0,-3),(0,3),(3,0),(-3,-1),(-3,1),(-1,-3),(-1,3),(1,-3),(1,3),(3,-1),(3,1),(-3,-2),(-3,2),(-2,-3),(-2,3),(2,-3),(2,3),(3,-2),(3,2)];
const OFFSETS_D4_0: [(i8,i8); 12] = [(-4,0),(0,-4),(0,4),(4,0),(-4,-1),(-4,1),(-1,-4),(-1,4),(1,-4),(1,4),(4,-1),(4,1)];
const OFFSETS_D3_1: [(i8,i8); 4] = [(-3,-3),(-3,3),(3,-3),(3,3)];
const OFFSETS_D4_1: [(i8,i8); 8] = [(-4,-2),(-4,2),(-2,-4),(-2,4),(2,-4),(2,4),(4,-2),(4,2)];
const OFFSETS_D5_0: [(i8,i8); 1] = [(-5,0)];
const OFFSETS_D4_2: [(i8,i8); 4] = [(-4,-3),(-4,3),(-3,-4),(-3,4)];
const OFFSETS_D5_1: [(i8,i8); 2] = [(0,-5),(0,5)];
const OFFSETS_D4_3: [(i8,i8); 4] = [(3,-4),(3,4),(4,-3),(4,3)];
const OFFSETS_D5_2: [(i8,i8); 17] = [(5,0),(-5,-1),(-5,1),(-1,-5),(-1,5),(1,-5),(1,5),(5,-1),(5,1),(-5,-2),(-5,2),(-2,-5),(-2,5),(2,-5),(2,5),(5,-2),(5,2)];
const OFFSETS_D4_4: [(i8,i8); 4] = [(-4,-4),(-4,4),(4,-4),(4,4)];
const OFFSETS_D5_3: [(i8,i8); 8] = [(-5,-3),(-5,3),(-3,-5),(-3,5),(3,-5),(3,5),(5,-3),(5,3)];
const OFFSETS_D6_0: [(i8,i8); 20] = [(-6,0),(0,-6),(0,6),(6,0),(-6,-1),(-6,1),(-1,-6),(-1,6),(1,-6),(1,6),(6,-1),(6,1),(-6,-2),(-6,2),(-2,-6),(-2,6),(2,-6),(2,6),(6,-2),(6,2)];
const OFFSETS_D5_4: [(i8,i8); 8] = [(-5,-4),(-5,4),(-4,-5),(-4,5),(4,-5),(4,5),(5,-4),(5,4)];
const OFFSETS_D6_1: [(i8,i8); 8] = [(-6,-3),(-6,3),(-3,-6),(-3,6),(3,-6),(3,6),(6,-3),(6,3)];
const OFFSETS_D7_0: [(i8,i8); 6] = [(-7,0),(0,-7),(0,7),(7,0),(-7,-1),(-7,1)];
const OFFSETS_D5_5: [(i8,i8); 2] = [(-5,-5),(-5,5)];
const OFFSETS_D7_1: [(i8,i8); 4] = [(-1,-7),(-1,7),(1,-7),(1,7)];
const OFFSETS_D5_6: [(i8,i8); 2] = [(5,-5),(5,5)];
const OFFSETS_D7_2: [(i8,i8); 2] = [(7,-1),(7,1)];
const OFFSETS_D6_2: [(i8,i8); 8] = [(-6,-4),(-6,4),(-4,-6),(-4,6),(4,-6),(4,6),(6,-4),(6,4)];
const OFFSETS_D7_3: [(i8,i8); 16] = [(-7,-2),(-7,2),(-2,-7),(-2,7),(2,-7),(2,7),(7,-2),(7,2),(-7,-3),(-7,3),(-3,-7),(-3,7),(3,-7),(3,7),(7,-3),(7,3)];
const OFFSETS_D6_3: [(i8,i8); 8] = [(-6,-5),(-6,5),(-5,-6),(-5,6),(5,-6),(5,6),(6,-5),(6,5)];
const OFFSETS_D8_0: [(i8,i8); 6] = [(-8,0),(0,-8),(0,8),(8,0),(-8,-1),(-8,1)];
const OFFSETS_D7_4: [(i8,i8); 4] = [(-7,-4),(-7,4),(-4,-7),(-4,7)];
const OFFSETS_D8_1: [(i8,i8); 4] = [(-1,-8),(-1,8),(1,-8),(1,8)];
const OFFSETS_D7_5: [(i8,i8); 4] = [(4,-7),(4,7),(7,-4),(7,4)];
const OFFSETS_D8_2: [(i8,i8); 10] = [(8,-1),(8,1),(-8,-2),(-8,2),(-2,-8),(-2,8),(2,-8),(2,8),(8,-2),(8,2)];
const OFFSETS_D6_4: [(i8,i8); 4] = [(-6,-6),(-6,6),(6,-6),(6,6)];
const OFFSETS_D8_3: [(i8,i8); 8] = [(-8,-3),(-8,3),(-3,-8),(-3,8),(3,-8),(3,8),(8,-3),(8,3)];
const OFFSETS_D7_6: [(i8,i8); 8] = [(-7,-5),(-7,5),(-5,-7),(-5,7),(5,-7),(5,7),(7,-5),(7,5)];
const OFFSETS_D8_4: [(i8,i8); 8] = [(-8,-4),(-8,4),(-4,-8),(-4,8),(4,-8),(4,8),(8,-4),(8,4)];
const OFFSETS_D9_0: [(i8,i8); 14] = [(-9,0),(0,-9),(0,9),(9,0),(-9,-1),(-9,1),(-1,-9),(-1,9),(1,-9),(1,9),(9,-1),(9,1),(-9,-2),(-9,2)];
const OFFSETS_D7_7: [(i8,i8); 4] = [(-7,-6),(-7,6),(-6,-7),(-6,7)];
const OFFSETS_D9_1: [(i8,i8); 4] = [(-2,-9),(-2,9),(2,-9),(2,9)];
const OFFSETS_D7_8: [(i8,i8); 4] = [(6,-7),(6,7),(7,-6),(7,6)];
const OFFSETS_D9_2: [(i8,i8); 2] = [(9,-2),(9,2)];
const OFFSETS_D8_5: [(i8,i8); 8] = [(-8,-5),(-8,5),(-5,-8),(-5,8),(5,-8),(5,8),(8,-5),(8,5)];
const OFFSETS_D9_3: [(i8,i8); 16] = [(-9,-3),(-9,3),(-3,-9),(-3,9),(3,-9),(3,9),(9,-3),(9,3),(-9,-4),(-9,4),(-4,-9),(-4,9),(4,-9),(4,9),(9,-4),(9,4)];
const OFFSETS_D7_9: [(i8,i8); 4] = [(-7,-7),(-7,7),(7,-7),(7,7)];
const OFFSETS_D10_0: [(i8,i8); 1] = [(-10,0)];
const OFFSETS_D8_6: [(i8,i8); 4] = [(-8,-6),(-8,6),(-6,-8),(-6,8)];
const OFFSETS_D10_1: [(i8,i8); 2] = [(0,-10),(0,10)];
const OFFSETS_D8_7: [(i8,i8); 4] = [(6,-8),(6,8),(8,-6),(8,6)];
const OFFSETS_D10_2: [(i8,i8); 17] = [(10,0),(-10,-1),(-10,1),(-1,-10),(-1,10),(1,-10),(1,10),(10,-1),(10,1),(-10,-2),(-10,2),(-2,-10),(-2,10),(2,-10),(2,10),(10,-2),(10,2)];
const OFFSETS_D9_4: [(i8,i8); 8] = [(-9,-5),(-9,5),(-5,-9),(-5,9),(5,-9),(5,9),(9,-5),(9,5)];
const OFFSETS_D10_3: [(i8,i8); 8] = [(-10,-3),(-10,3),(-3,-10),(-3,10),(3,-10),(3,10),(10,-3),(10,3)];
const OFFSETS_D8_8: [(i8,i8); 8] = [(-8,-7),(-8,7),(-7,-8),(-7,8),(7,-8),(7,8),(8,-7),(8,7)];
const OFFSETS_D10_4: [(i8,i8); 8] = [(-10,-4),(-10,4),(-4,-10),(-4,10),(4,-10),(4,10),(10,-4),(10,4)];
const OFFSETS_D9_5: [(i8,i8); 8] = [(-9,-6),(-9,6),(-6,-9),(-6,9),(6,-9),(6,9),(9,-6),(9,6)];
const OFFSETS_D11_0: [(i8,i8); 14] = [(-11,0),(0,-11),(0,11),(11,0),(-11,-1),(-11,1),(-1,-11),(-1,11),(1,-11),(1,11),(11,-1),(11,1),(-11,-2),(-11,2)];
const OFFSETS_D10_5: [(i8,i8); 4] = [(-10,-5),(-10,5),(-5,-10),(-5,10)];
const OFFSETS_D11_1: [(i8,i8); 4] = [(-2,-11),(-2,11),(2,-11),(2,11)];
const OFFSETS_D10_6: [(i8,i8); 4] = [(5,-10),(5,10),(10,-5),(10,5)];
const OFFSETS_D11_2: [(i8,i8); 2] = [(11,-2),(11,2)];
const OFFSETS_D8_9: [(i8,i8); 4] = [(-8,-8),(-8,8),(8,-8),(8,8)];
const OFFSETS_D11_3: [(i8,i8); 2] = [(-11,-3),(-11,3)];
const OFFSETS_D9_6: [(i8,i8); 4] = [(-9,-7),(-9,7),(-7,-9),(-7,9)];
const OFFSETS_D11_4: [(i8,i8); 4] = [(-3,-11),(-3,11),(3,-11),(3,11)];
const OFFSETS_D9_7: [(i8,i8); 4] = [(7,-9),(7,9),(9,-7),(9,7)];
const OFFSETS_D11_5: [(i8,i8); 2] = [(11,-3),(11,3)];
const OFFSETS_D10_7: [(i8,i8); 8] = [(-10,-6),(-10,6),(-6,-10),(-6,10),(6,-10),(6,10),(10,-6),(10,6)];
const OFFSETS_D11_6: [(i8,i8); 8] = [(-11,-4),(-11,4),(-4,-11),(-4,11),(4,-11),(4,11),(11,-4),(11,4)];
const OFFSETS_D12_0: [(i8,i8); 6] = [(-12,0),(0,-12),(0,12),(12,0),(-12,-1),(-12,1)];
const OFFSETS_D9_8: [(i8,i8); 4] = [(-9,-8),(-9,8),(-8,-9),(-8,9)];
const OFFSETS_D12_1: [(i8,i8); 4] = [(-1,-12),(-1,12),(1,-12),(1,12)];
const OFFSETS_D9_9: [(i8,i8); 4] = [(8,-9),(8,9),(9,-8),(9,8)];
const OFFSETS_D12_2: [(i8,i8); 2] = [(12,-1),(12,1)];
const OFFSETS_D11_7: [(i8,i8); 8] = [(-11,-5),(-11,5),(-5,-11),(-5,11),(5,-11),(5,11),(11,-5),(11,5)];
const OFFSETS_D12_3: [(i8,i8); 8] = [(-12,-2),(-12,2),(-2,-12),(-2,12),(2,-12),(2,12),(12,-2),(12,2)];
const OFFSETS_D10_8: [(i8,i8); 8] = [(-10,-7),(-10,7),(-7,-10),(-7,10),(7,-10),(7,10),(10,-7),(10,7)];
const OFFSETS_D12_4: [(i8,i8); 8] = [(-12,-3),(-12,3),(-3,-12),(-3,12),(3,-12),(3,12),(12,-3),(12,3)];
const OFFSETS_D11_8: [(i8,i8); 8] = [(-11,-6),(-11,6),(-6,-11),(-6,11),(6,-11),(6,11),(11,-6),(11,6)];
const OFFSETS_D12_5: [(i8,i8); 8] = [(-12,-4),(-12,4),(-4,-12),(-4,12),(4,-12),(4,12),(12,-4),(12,4)];
const OFFSETS_D9_10: [(i8,i8); 4] = [(-9,-9),(-9,9),(9,-9),(9,9)];
const OFFSETS_D10_9: [(i8,i8); 8] = [(-10,-8),(-10,8),(-8,-10),(-8,10),(8,-10),(8,10),(10,-8),(10,8)];
const OFFSETS_D13_0: [(i8,i8); 1] = [(-13,0)];
const OFFSETS_D12_6: [(i8,i8); 4] = [(-12,-5),(-12,5),(-5,-12),(-5,12)];
const OFFSETS_D13_1: [(i8,i8); 2] = [(0,-13),(0,13)];
const OFFSETS_D12_7: [(i8,i8); 4] = [(5,-12),(5,12),(12,-5),(12,5)];
const OFFSETS_D13_2: [(i8,i8); 3] = [(13,0),(-13,-1),(-13,1)];
const OFFSETS_D11_9: [(i8,i8); 4] = [(-11,-7),(-11,7),(-7,-11),(-7,11)];
const OFFSETS_D13_3: [(i8,i8); 4] = [(-1,-13),(-1,13),(1,-13),(1,13)];
const OFFSETS_D11_10: [(i8,i8); 4] = [(7,-11),(7,11),(11,-7),(11,7)];
const OFFSETS_D13_4: [(i8,i8); 18] = [(13,-1),(13,1),(-13,-2),(-13,2),(-2,-13),(-2,13),(2,-13),(2,13),(13,-2),(13,2),(-13,-3),(-13,3),(-3,-13),(-3,13),(3,-13),(3,13),(13,-3),(13,3)];
const OFFSETS_D12_8: [(i8,i8); 8] = [(-12,-6),(-12,6),(-6,-12),(-6,12),(6,-12),(6,12),(12,-6),(12,6)];
const OFFSETS_D10_10: [(i8,i8); 8] = [(-10,-9),(-10,9),(-9,-10),(-9,10),(9,-10),(9,10),(10,-9),(10,9)];
const OFFSETS_D13_5: [(i8,i8); 2] = [(-13,-4),(-13,4)];
const OFFSETS_D11_11: [(i8,i8); 4] = [(-11,-8),(-11,8),(-8,-11),(-8,11)];
const OFFSETS_D13_6: [(i8,i8); 4] = [(-4,-13),(-4,13),(4,-13),(4,13)];
const OFFSETS_D11_12: [(i8,i8); 4] = [(8,-11),(8,11),(11,-8),(11,8)];
const OFFSETS_D13_7: [(i8,i8); 2] = [(13,-4),(13,4)];
const OFFSETS_D12_9: [(i8,i8); 8] = [(-12,-7),(-12,7),(-7,-12),(-7,12),(7,-12),(7,12),(12,-7),(12,7)];
const OFFSETS_D13_8: [(i8,i8); 8] = [(-13,-5),(-13,5),(-5,-13),(-5,13),(5,-13),(5,13),(13,-5),(13,5)];
const OFFSETS_D14_0: [(i8,i8); 14] = [(-14,0),(0,-14),(0,14),(14,0),(-14,-1),(-14,1),(-1,-14),(-1,14),(1,-14),(1,14),(14,-1),(14,1),(-14,-2),(-14,2)];
const OFFSETS_D10_11: [(i8,i8); 2] = [(-10,-10),(-10,10)];
const OFFSETS_D14_1: [(i8,i8); 4] = [(-2,-14),(-2,14),(2,-14),(2,14)];
const OFFSETS_D10_12: [(i8,i8); 2] = [(10,-10),(10,10)];
const OFFSETS_D14_2: [(i8,i8); 2] = [(14,-2),(14,2)];
const OFFSETS_D11_13: [(i8,i8); 8] = [(-11,-9),(-11,9),(-9,-11),(-9,11),(9,-11),(9,11),(11,-9),(11,9)];
const OFFSETS_D14_3: [(i8,i8); 2] = [(-14,-3),(-14,3)];
const OFFSETS_D13_9: [(i8,i8); 4] = [(-13,-6),(-13,6),(-6,-13),(-6,13)];
const OFFSETS_D14_4: [(i8,i8); 4] = [(-3,-14),(-3,14),(3,-14),(3,14)];
const OFFSETS_D13_10: [(i8,i8); 4] = [(6,-13),(6,13),(13,-6),(13,6)];
const OFFSETS_D14_5: [(i8,i8); 2] = [(14,-3),(14,3)];
const OFFSETS_D12_10: [(i8,i8); 8] = [(-12,-8),(-12,8),(-8,-12),(-8,12),(8,-12),(8,12),(12,-8),(12,8)];
const OFFSETS_D14_6: [(i8,i8); 8] = [(-14,-4),(-14,4),(-4,-14),(-4,14),(4,-14),(4,14),(14,-4),(14,4)];
const OFFSETS_D13_11: [(i8,i8); 8] = [(-13,-7),(-13,7),(-7,-13),(-7,13),(7,-13),(7,13),(13,-7),(13,7)];
const OFFSETS_D14_7: [(i8,i8); 2] = [(-14,-5),(-14,5)];
const OFFSETS_D11_14: [(i8,i8); 4] = [(-11,-10),(-11,10),(-10,-11),(-10,11)];
const OFFSETS_D14_8: [(i8,i8); 4] = [(-5,-14),(-5,14),(5,-14),(5,14)];
const OFFSETS_D11_15: [(i8,i8); 4] = [(10,-11),(10,11),(11,-10),(11,10)];
const OFFSETS_D14_9: [(i8,i8); 2] = [(14,-5),(14,5)];
const OFFSETS_D15_0: [(i8,i8); 1] = [(-15,0)];
const OFFSETS_D12_11: [(i8,i8); 4] = [(-12,-9),(-12,9),(-9,-12),(-9,12)];
const OFFSETS_D15_1: [(i8,i8); 2] = [(0,-15),(0,15)];
const OFFSETS_D12_12: [(i8,i8); 4] = [(9,-12),(9,12),(12,-9),(12,9)];
const OFFSETS_D15_2: [(i8,i8); 17] = [(15,0),(-15,-1),(-15,1),(-1,-15),(-1,15),(1,-15),(1,15),(15,-1),(15,1),(-15,-2),(-15,2),(-2,-15),(-2,15),(2,-15),(2,15),(15,-2),(15,2)];
const OFFSETS_D14_10: [(i8,i8); 8] = [(-14,-6),(-14,6),(-6,-14),(-6,14),(6,-14),(6,14),(14,-6),(14,6)];
const OFFSETS_D13_12: [(i8,i8); 8] = [(-13,-8),(-13,8),(-8,-13),(-8,13),(8,-13),(8,13),(13,-8),(13,8)];
const OFFSETS_D15_3: [(i8,i8); 16] = [(-15,-3),(-15,3),(-3,-15),(-3,15),(3,-15),(3,15),(15,-3),(15,3),(-15,-4),(-15,4),(-4,-15),(-4,15),(4,-15),(4,15),(15,-4),(15,4)];
const OFFSETS_D11_16: [(i8,i8); 4] = [(-11,-11),(-11,11),(11,-11),(11,11)];
const OFFSETS_D12_13: [(i8,i8); 8] = [(-12,-10),(-12,10),(-10,-12),(-10,12),(10,-12),(10,12),(12,-10),(12,10)];
const OFFSETS_D14_11: [(i8,i8); 8] = [(-14,-7),(-14,7),(-7,-14),(-7,14),(7,-14),(7,14),(14,-7),(14,7)];
const OFFSETS_D15_4: [(i8,i8); 2] = [(-15,-5),(-15,5)];
const OFFSETS_D13_13: [(i8,i8); 4] = [(-13,-9),(-13,9),(-9,-13),(-9,13)];
const OFFSETS_D15_5: [(i8,i8); 4] = [(-5,-15),(-5,15),(5,-15),(5,15)];
const OFFSETS_D13_14: [(i8,i8); 4] = [(9,-13),(9,13),(13,-9),(13,9)];
const OFFSETS_D15_6: [(i8,i8); 2] = [(15,-5),(15,5)];
const OFFSETS_D16_0: [(i8,i8); 14] = [(-16,0),(0,-16),(0,16),(16,0),(-16,-1),(-16,1),(-1,-16),(-1,16),(1,-16),(1,16),(16,-1),(16,1),(-16,-2),(-16,2)];
const OFFSETS_D14_12: [(i8,i8); 4] = [(-14,-8),(-14,8),(-8,-14),(-8,14)];
const OFFSETS_D16_1: [(i8,i8); 4] = [(-2,-16),(-2,16),(2,-16),(2,16)];
const OFFSETS_D14_13: [(i8,i8); 4] = [(8,-14),(8,14),(14,-8),(14,8)];
const OFFSETS_D16_2: [(i8,i8); 2] = [(16,-2),(16,2)];
const OFFSETS_D15_7: [(i8,i8); 8] = [(-15,-6),(-15,6),(-6,-15),(-6,15),(6,-15),(6,15),(15,-6),(15,6)];
const OFFSETS_D16_3: [(i8,i8); 2] = [(-16,-3),(-16,3)];
const OFFSETS_D12_14: [(i8,i8); 4] = [(-12,-11),(-12,11),(-11,-12),(-11,12)];
const OFFSETS_D16_4: [(i8,i8); 4] = [(-3,-16),(-3,16),(3,-16),(3,16)];
const OFFSETS_D12_15: [(i8,i8); 4] = [(11,-12),(11,12),(12,-11),(12,11)];
const OFFSETS_D16_5: [(i8,i8); 2] = [(16,-3),(16,3)];
const OFFSETS_D13_15: [(i8,i8); 8] = [(-13,-10),(-13,10),(-10,-13),(-10,13),(10,-13),(10,13),(13,-10),(13,10)];
const OFFSETS_D16_6: [(i8,i8); 8] = [(-16,-4),(-16,4),(-4,-16),(-4,16),(4,-16),(4,16),(16,-4),(16,4)];
const OFFSETS_D15_8: [(i8,i8); 8] = [(-15,-7),(-15,7),(-7,-15),(-7,15),(7,-15),(7,15),(15,-7),(15,7)];
const OFFSETS_D14_14: [(i8,i8); 8] = [(-14,-9),(-14,9),(-9,-14),(-9,14),(9,-14),(9,14),(14,-9),(14,9)];
const OFFSETS_D16_7: [(i8,i8); 8] = [(-16,-5),(-16,5),(-5,-16),(-5,16),(5,-16),(5,16),(16,-5),(16,5)];
const OFFSETS_D12_16: [(i8,i8); 4] = [(-12,-12),(-12,12),(12,-12),(12,12)];
const OFFSETS_D15_9: [(i8,i8); 8] = [(-15,-8),(-15,8),(-8,-15),(-8,15),(8,-15),(8,15),(15,-8),(15,8)];
const OFFSETS_D13_16: [(i8,i8); 8] = [(-13,-11),(-13,11),(-11,-13),(-11,13),(11,-13),(11,13),(13,-11),(13,11)];
const OFFSETS_D16_8: [(i8,i8); 8] = [(-16,-6),(-16,6),(-6,-16),(-6,16),(6,-16),(6,16),(16,-6),(16,6)];
const OFFSETS_D14_15: [(i8,i8); 8] = [(-14,-10),(-14,10),(-10,-14),(-10,14),(10,-14),(10,14),(14,-10),(14,10)];
const OFFSETS_D16_9: [(i8,i8); 8] = [(-16,-7),(-16,7),(-7,-16),(-7,16),(7,-16),(7,16),(16,-7),(16,7)];
const OFFSETS_D15_10: [(i8,i8); 8] = [(-15,-9),(-15,9),(-9,-15),(-9,15),(9,-15),(9,15),(15,-9),(15,9)];
const OFFSETS_D13_17: [(i8,i8); 8] = [(-13,-12),(-13,12),(-12,-13),(-12,13),(12,-13),(12,13),(13,-12),(13,12)];
const OFFSETS_D14_16: [(i8,i8); 8] = [(-14,-11),(-14,11),(-11,-14),(-11,14),(11,-14),(11,14),(14,-11),(14,11)];
const OFFSETS_D16_10: [(i8,i8); 8] = [(-16,-8),(-16,8),(-8,-16),(-8,16),(8,-16),(8,16),(16,-8),(16,8)];
const OFFSETS_D15_11: [(i8,i8); 8] = [(-15,-10),(-15,10),(-10,-15),(-10,15),(10,-15),(10,15),(15,-10),(15,10)];
const OFFSETS_D16_11: [(i8,i8); 8] = [(-16,-9),(-16,9),(-9,-16),(-9,16),(9,-16),(9,16),(16,-9),(16,9)];
const OFFSETS_D13_18: [(i8,i8); 4] = [(-13,-13),(-13,13),(13,-13),(13,13)];
const OFFSETS_D14_17: [(i8,i8); 8] = [(-14,-12),(-14,12),(-12,-14),(-12,14),(12,-14),(12,14),(14,-12),(14,12)];
const OFFSETS_D15_12: [(i8,i8); 8] = [(-15,-11),(-15,11),(-11,-15),(-11,15),(11,-15),(11,15),(15,-11),(15,11)];
const OFFSETS_D16_12: [(i8,i8); 8] = [(-16,-10),(-16,10),(-10,-16),(-10,16),(10,-16),(10,16),(16,-10),(16,10)];
const OFFSETS_D14_18: [(i8,i8); 8] = [(-14,-13),(-14,13),(-13,-14),(-13,14),(13,-14),(13,14),(14,-13),(14,13)];
const OFFSETS_D15_13: [(i8,i8); 8] = [(-15,-12),(-15,12),(-12,-15),(-12,15),(12,-15),(12,15),(15,-12),(15,12)];
const OFFSETS_D16_13: [(i8,i8); 8] = [(-16,-11),(-16,11),(-11,-16),(-11,16),(11,-16),(11,16),(16,-11),(16,11)];
const OFFSETS_D14_19: [(i8,i8); 4] = [(-14,-14),(-14,14),(14,-14),(14,14)];
const OFFSETS_D15_14: [(i8,i8); 8] = [(-15,-13),(-15,13),(-13,-15),(-13,15),(13,-15),(13,15),(15,-13),(15,13)];
const OFFSETS_D16_14: [(i8,i8); 8] = [(-16,-12),(-16,12),(-12,-16),(-12,16),(12,-16),(12,16),(16,-12),(16,12)];
const OFFSETS_D15_15: [(i8,i8); 8] = [(-15,-14),(-15,14),(-14,-15),(-14,15),(14,-15),(14,15),(15,-14),(15,14)];
const OFFSETS_D16_15: [(i8,i8); 8] = [(-16,-13),(-16,13),(-13,-16),(-13,16),(13,-16),(13,16),(16,-13),(16,13)];
const OFFSETS_D15_16: [(i8,i8); 4] = [(-15,-15),(-15,15),(15,-15),(15,15)];
const OFFSETS_D16_16: [(i8,i8); 20] = [(-16,-14),(-16,14),(-14,-16),(-14,16),(14,-16),(14,16),(16,-14),(16,14),(-16,-15),(-16,15),(-15,-16),(-15,16),(15,-16),(15,16),(16,-15),(16,15),(-16,-16),(-16,16),(16,-16),(16,16)];

const OFFSETS: [(u8, &'static [(i8,i8)]); 173] = [
  (0, &OFFSETS_D0_0), (1, &OFFSETS_D1_0), (2, &OFFSETS_D2_0), (3, &OFFSETS_D3_0), (4, &OFFSETS_D4_0), 
  (3, &OFFSETS_D3_1), (4, &OFFSETS_D4_1), (5, &OFFSETS_D5_0), (4, &OFFSETS_D4_2), (5, &OFFSETS_D5_1), 
  (4, &OFFSETS_D4_3), (5, &OFFSETS_D5_2), (4, &OFFSETS_D4_4), (5, &OFFSETS_D5_3), (6, &OFFSETS_D6_0), 
  (5, &OFFSETS_D5_4), (6, &OFFSETS_D6_1), (7, &OFFSETS_D7_0), (5, &OFFSETS_D5_5), (7, &OFFSETS_D7_1), 
  (5, &OFFSETS_D5_6), (7, &OFFSETS_D7_2), (6, &OFFSETS_D6_2), (7, &OFFSETS_D7_3), (6, &OFFSETS_D6_3), 
  (8, &OFFSETS_D8_0), (7, &OFFSETS_D7_4), (8, &OFFSETS_D8_1), (7, &OFFSETS_D7_5), (8, &OFFSETS_D8_2), 
  (6, &OFFSETS_D6_4), (8, &OFFSETS_D8_3), (7, &OFFSETS_D7_6), (8, &OFFSETS_D8_4), (9, &OFFSETS_D9_0), 
  (7, &OFFSETS_D7_7), (9, &OFFSETS_D9_1), (7, &OFFSETS_D7_8), (9, &OFFSETS_D9_2), (8, &OFFSETS_D8_5), 
  (9, &OFFSETS_D9_3), (7, &OFFSETS_D7_9), (10, &OFFSETS_D10_0), (8, &OFFSETS_D8_6), (10, &OFFSETS_D10_1), 
  (8, &OFFSETS_D8_7), (10, &OFFSETS_D10_2), (9, &OFFSETS_D9_4), (10, &OFFSETS_D10_3), (8, &OFFSETS_D8_8), 
  (10, &OFFSETS_D10_4), (9, &OFFSETS_D9_5), (11, &OFFSETS_D11_0), (10, &OFFSETS_D10_5), (11, &OFFSETS_D11_1), 
  (10, &OFFSETS_D10_6), (11, &OFFSETS_D11_2), (8, &OFFSETS_D8_9), (11, &OFFSETS_D11_3), (9, &OFFSETS_D9_6), 
  (11, &OFFSETS_D11_4), (9, &OFFSETS_D9_7), (11, &OFFSETS_D11_5), (10, &OFFSETS_D10_7), (11, &OFFSETS_D11_6), 
  (12, &OFFSETS_D12_0), (9, &OFFSETS_D9_8), (12, &OFFSETS_D12_1), (9, &OFFSETS_D9_9), (12, &OFFSETS_D12_2), 
  (11, &OFFSETS_D11_7), (12, &OFFSETS_D12_3), (10, &OFFSETS_D10_8), (12, &OFFSETS_D12_4), (11, &OFFSETS_D11_8), 
  (12, &OFFSETS_D12_5), (9, &OFFSETS_D9_10), (10, &OFFSETS_D10_9), (13, &OFFSETS_D13_0), (12, &OFFSETS_D12_6), 
  (13, &OFFSETS_D13_1), (12, &OFFSETS_D12_7), (13, &OFFSETS_D13_2), (11, &OFFSETS_D11_9), (13, &OFFSETS_D13_3), 
  (11, &OFFSETS_D11_10), (13, &OFFSETS_D13_4), (12, &OFFSETS_D12_8), (10, &OFFSETS_D10_10), (13, &OFFSETS_D13_5), 
  (11, &OFFSETS_D11_11), (13, &OFFSETS_D13_6), (11, &OFFSETS_D11_12), (13, &OFFSETS_D13_7), (12, &OFFSETS_D12_9), 
  (13, &OFFSETS_D13_8), (14, &OFFSETS_D14_0), (10, &OFFSETS_D10_11), (14, &OFFSETS_D14_1), (10, &OFFSETS_D10_12), 
  (14, &OFFSETS_D14_2), (11, &OFFSETS_D11_13), (14, &OFFSETS_D14_3), (13, &OFFSETS_D13_9), (14, &OFFSETS_D14_4), 
  (13, &OFFSETS_D13_10), (14, &OFFSETS_D14_5), (12, &OFFSETS_D12_10), (14, &OFFSETS_D14_6), (13, &OFFSETS_D13_11), 
  (14, &OFFSETS_D14_7), (11, &OFFSETS_D11_14), (14, &OFFSETS_D14_8), (11, &OFFSETS_D11_15), (14, &OFFSETS_D14_9), 
  (15, &OFFSETS_D15_0), (12, &OFFSETS_D12_11), (15, &OFFSETS_D15_1), (12, &OFFSETS_D12_12), (15, &OFFSETS_D15_2), 
  (14, &OFFSETS_D14_10), (13, &OFFSETS_D13_12), (15, &OFFSETS_D15_3), (11, &OFFSETS_D11_16), (12, &OFFSETS_D12_13), 
  (14, &OFFSETS_D14_11), (15, &OFFSETS_D15_4), (13, &OFFSETS_D13_13), (15, &OFFSETS_D15_5), (13, &OFFSETS_D13_14), 
  (15, &OFFSETS_D15_6), (16, &OFFSETS_D16_0), (14, &OFFSETS_D14_12), (16, &OFFSETS_D16_1), (14, &OFFSETS_D14_13), 
  (16, &OFFSETS_D16_2), (15, &OFFSETS_D15_7), (16, &OFFSETS_D16_3), (12, &OFFSETS_D12_14), (16, &OFFSETS_D16_4), 
  (12, &OFFSETS_D12_15), (16, &OFFSETS_D16_5), (13, &OFFSETS_D13_15), (16, &OFFSETS_D16_6), (15, &OFFSETS_D15_8), 
  (14, &OFFSETS_D14_14), (16, &OFFSETS_D16_7), (12, &OFFSETS_D12_16), (15, &OFFSETS_D15_9), (13, &OFFSETS_D13_16), 
  (16, &OFFSETS_D16_8), (14, &OFFSETS_D14_15), (16, &OFFSETS_D16_9), (15, &OFFSETS_D15_10), (13, &OFFSETS_D13_17), 
  (14, &OFFSETS_D14_16), (16, &OFFSETS_D16_10), (15, &OFFSETS_D15_11), (16, &OFFSETS_D16_11), (13, &OFFSETS_D13_18), 
  (14, &OFFSETS_D14_17), (15, &OFFSETS_D15_12), (16, &OFFSETS_D16_12), (14, &OFFSETS_D14_18), (15, &OFFSETS_D15_13), 
  (16, &OFFSETS_D16_13), (14, &OFFSETS_D14_19), (15, &OFFSETS_D15_14), (16, &OFFSETS_D16_14), (15, &OFFSETS_D15_15), 
  (16, &OFFSETS_D16_15), (15, &OFFSETS_D15_16), (16, &OFFSETS_D16_16), 
];

const GROUPS: [u8; 17] = [1, 1, 1, 2, 5, 7, 5, 10, 10, 11, 13, 17, 17, 19, 20, 17, 17];

/// Returns a `Vec` containing the positions of all chunks that
/// have to be loaded, sorted by their distance to the given offset.
pub fn get_chunks_to_load(render_distance: u8, offset: ChunkPosition, loaded: impl Fn(&ChunkPosition) -> bool) -> Vec<ChunkPosition> {
  assert!(
    render_distance <= MAX_RENDER_DISTANCE,
    "Given render distance is greater than the supported distance ({} > {})",
    render_distance, MAX_RENDER_DISTANCE
  );
  let mut chunks: Vec<ChunkPosition> = Vec::new();
  // Counts down the highest distance group
  // to have a possible short circuit
  let mut counter: u8 = GROUPS[render_distance as usize];
  for (d, off) in OFFSETS.iter() {
    if *d <= render_distance {
      if *d == render_distance {
        counter -= 1;
      }
      for (x, z) in *off {
        let chunk = ChunkPosition::new(offset.x + (*x as i32), offset.z + (*z as i32));
        if !loaded(&chunk) {
          chunks.push(chunk)
        }
      }
    }
    if counter == 0 {
      break;
    }
  }
  chunks
}
