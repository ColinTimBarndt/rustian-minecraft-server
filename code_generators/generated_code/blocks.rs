// This file was automatically generated based on
// data generated by the original Java game
#![ignore = "unused"]
use crate::helpers::{NamespacedKey, Registry};
/// Internal base block ids of all blocks (not including states)
const BLOCK_ID_BASES: [usize; 680] = [
  0,1,2,3,4,5,6,7,8,10,11,12,14,15,16,17,18,19,20,21,23,25,27,29,31,33,34,50,66,67,
  68,69,70,71,72,75,78,81,84,87,90,93,96,99,102,105,108,111,114,117,120,123,126,129,
  132,135,138,141,144,158,172,186,200,214,228,229,230,231,232,233,245,246,247,248,1048,
  1064,1080,1096,1112,1128,1144,1160,1176,1192,1208,1224,1240,1256,1272,1288,1304,1316,
  1328,1340,1341,1342,1343,1344,1345,1347,1359,1383,1384,1385,1386,1387,1388,1389,1390,
  1391,1392,1393,1394,1395,1396,1397,1398,1399,1411,1412,1413,1414,1415,1416,1417,1418,
  1419,1420,1421,1422,1423,1424,1425,1426,1427,1428,1429,1431,1432,1433,1434,1435,1439,
  1951,1952,2032,2056,3352,3353,3354,3355,3363,3371,3379,3411,3443,3475,3507,3539,3571,
  3635,3643,3653,3733,3741,3749,3757,3765,3773,3781,3805,3807,3871,3873,3875,3877,3879,
  3881,3883,3885,3887,3895,3919,3927,3928,3929,3945,3946,3962,3964,3996,3997,3998,3999,
  4000,4002,4006,4010,4017,4081,4082,4083,4084,4085,4086,4087,4088,4089,4090,4091,4092,
  4093,4094,4095,4096,4097,4161,4225,4289,4353,4417,4481,4482,4483,4484,4485,4486,4487,
  4488,4489,4490,4491,4555,4619,4683,4715,4747,4748,4752,4756,4764,4772,4804,4836,4916,
  4996,4998,4999,5000,5032,5112,5116,5117,5125,5129,5130,5138,5139,5140,5142,5154,5234,
  5235,5243,5259,5387,5388,5468,5548,5628,5640,5641,5705,5769,5770,5771,5772,5773,5774,
  5775,5776,5777,5778,5779,5780,5781,5782,5783,5784,5785,5786,5787,5788,5789,5790,5791,
  5792,5793,5794,5802,5810,5834,5858,5882,5906,5930,5954,5970,5974,5990,5994,6010,6014,
  6030,6034,6050,6054,6070,6074,6078,6082,6086,6110,6126,6142,6158,6190,6191,6192,6202,
  6203,6204,6207,6287,6299,6311,6312,6313,6314,6315,6316,6317,6318,6319,6320,6321,6322,
  6323,6324,6325,6326,6327,6359,6391,6423,6455,6487,6519,6551,6583,6615,6647,6679,6711,
  6743,6775,6807,6839,6919,6999,7000,7001,7065,7066,7067,7068,7148,7228,7308,7314,7320,
  7326,7327,7330,7331,7332,7333,7334,7335,7336,7337,7338,7339,7340,7341,7342,7343,7344,
  7345,7346,7347,7348,7349,7351,7353,7355,7357,7359,7361,7377,7393,7409,7425,7441,7457,
  7473,7489,7505,7521,7537,7553,7569,7585,7601,7617,7621,7625,7629,7633,7637,7641,7645,
  7649,7653,7657,7661,7665,7669,7673,7677,7681,7682,7683,7684,7764,7770,7776,7782,7788,
  7794,7800,7806,7812,7818,7824,7830,7836,7842,7848,7854,7860,7866,7872,7878,7879,7880,
  7881,7882,7914,7946,7978,8010,8042,8074,8106,8138,8170,8202,8266,8330,8394,8458,8522,
  8528,8592,8598,8599,8602,8682,8683,8687,8688,8689,8701,8713,8717,8718,8719,8720,8723,
  8724,8736,8742,8748,8754,8760,8766,8772,8778,8784,8790,8796,8802,8808,8814,8820,8826,
  8832,8838,8842,8846,8850,8854,8858,8862,8866,8870,8874,8878,8882,8886,8890,8894,8898,
  8902,8903,8904,8905,8906,8907,8908,8909,8910,8911,8912,8913,8914,8915,8916,8917,8918,
  8919,8920,8921,8922,8923,8924,8925,8926,8927,8928,8929,8930,8931,8932,8933,8934,8960,
  8961,8962,8974,8975,8976,8977,8978,8979,8980,8981,8982,8983,8984,8986,8988,8990,8992,
  8994,8996,8998,9000,9002,9004,9006,9008,9010,9012,9014,9016,9018,9020,9022,9024,9032,
  9040,9048,9056,9064,9072,9080,9088,9096,9104,9112,9113,9115,9116,9128,9129,9130,9131,
  9133,9213,9293,9373,9453,9533,9613,9693,9773,9853,9933,10013,10093,10173,10253,10259,
  10265,10271,10277,10283,10289,10295,10301,10307,10313,10319,10325,10331,10395,10459,
  10523,10587,10651,10715,10779,10843,10907,10971,11035,11099,11131,11135,11147,11155,
  11163,11164,11165,11177,11193,11194,11198,11230,11232,11264,11268,11272,11278,11287,
  11311,11335,11336,
];

/// Bits needed to represent all block states
pub const USED_PALETTE_BITS: u8 = 14;

#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]
pub enum Block {
  Air,
  Stone,
  Granite,
  PolishedGranite,
  Diorite,
  PolishedDiorite,
  Andesite,
  PolishedAndesite,
  GrassBlock(GrassBlockData),
  Dirt,
  CoarseDirt,
  Podzol(PodzolData),
  Cobblestone,
  OakPlanks,
  SprucePlanks,
  BirchPlanks,
  JunglePlanks,
  AcaciaPlanks,
  DarkOakPlanks,
  OakSapling(TreeSaplingData),
  SpruceSapling(TreeSaplingData),
  BirchSapling(TreeSaplingData),
  JungleSapling(TreeSaplingData),
  AcaciaSapling(TreeSaplingData),
  DarkOakSapling(TreeSaplingData),
  Bedrock,
  Water(FluidData),
  Lava(FluidData),
  Sand,
  RedSand,
  Gravel,
  GoldOre,
  IronOre,
  CoalOre,
  OakLog(AxisData),
  SpruceLog(AxisData),
  BirchLog(AxisData),
  JungleLog(AxisData),
  AcaciaLog(AxisData),
  DarkOakLog(AxisData),
  StrippedSpruceLog(AxisData),
  StrippedBirchLog(AxisData),
  StrippedJungleLog(AxisData),
  StrippedAcaciaLog(AxisData),
  StrippedDarkOakLog(AxisData),
  StrippedOakLog(AxisData),
  OakWood(AxisData),
  SpruceWood(AxisData),
  BirchWood(AxisData),
  JungleWood(AxisData),
  AcaciaWood(AxisData),
  DarkOakWood(AxisData),
  StrippedOakWood(AxisData),
  StrippedSpruceWood(AxisData),
  StrippedBirchWood(AxisData),
  StrippedJungleWood(AxisData),
  StrippedAcaciaWood(AxisData),
  StrippedDarkOakWood(AxisData),
  OakLeaves(LeavesData),
  SpruceLeaves(LeavesData),
  BirchLeaves(LeavesData),
  JungleLeaves(LeavesData),
  AcaciaLeaves(LeavesData),
  DarkOakLeaves(LeavesData),
  Sponge,
  WetSponge,
  Glass,
  LapisOre,
  LapisBlock,
  Dispenser(DispenserData),
  Sandstone,
  ChiseledSandstone,
  CutSandstone,
  NoteBlock(NoteBlockData),
  WhiteBed(BedData),
  OrangeBed(BedData),
  MagentaBed(BedData),
  LightBlueBed(BedData),
  YellowBed(BedData),
  LimeBed(BedData),
  PinkBed(BedData),
  GrayBed(BedData),
  LightGrayBed(BedData),
  CyanBed(BedData),
  PurpleBed(BedData),
  BlueBed(BedData),
  BrownBed(BedData),
  GreenBed(BedData),
  RedBed(BedData),
  BlackBed(BedData),
  PoweredRail(PoweredRailData),
  DetectorRail(DetectorRailData),
  StickyPiston(PistonData),
  Cobweb,
  Grass,
  Fern,
  DeadBush,
  Seagrass,
  TallSeagrass(TallSeagrassData),
  Piston(PistonData),
  PistonHead(PistonHeadData),
  WhiteWool,
  OrangeWool,
  MagentaWool,
  LightBlueWool,
  YellowWool,
  LimeWool,
  PinkWool,
  GrayWool,
  LightGrayWool,
  CyanWool,
  PurpleWool,
  BlueWool,
  BrownWool,
  GreenWool,
  RedWool,
  BlackWool,
  MovingPiston(PistonData),
  Dandelion,
  Poppy,
  BlueOrchid,
  Allium,
  AzureBluet,
  RedTulip,
  OrangeTulip,
  WhiteTulip,
  PinkTulip,
  OxeyeDaisy,
  Cornflower,
  WitherRose,
  LilyOfTheValley,
  BrownMushroom,
  RedMushroom,
  GoldBlock,
  IronBlock,
  Bricks,
  Tnt(TntData),
  Bookshelf,
  MossyCobblestone,
  Obsidian,
  Torch,
  WallTorch(CardinalData),
  Fire(FireData),
  Spawner,
  OakStairs(StairsData),
  Chest(ChestData),
  RedstoneWire(RedstoneWireData),
  DiamondOre,
  DiamondBlock,
  CraftingTable,
  Wheat(WheatData),
  Farmland(FarmlandData),
  Furnace(CardinalLightableData),
  OakSign(SignData),
  SpruceSign(SignData),
  BirchSign(SignData),
  AcaciaSign(SignData),
  JungleSign(SignData),
  DarkOakSign(SignData),
  OakDoor(DoorData),
  Ladder(LadderData),
  Rail(RailData),
  CobblestoneStairs(StairsData),
  OakWallSign(WallSignData),
  SpruceWallSign(WallSignData),
  BirchWallSign(WallSignData),
  AcaciaWallSign(WallSignData),
  JungleWallSign(WallSignData),
  DarkOakWallSign(WallSignData),
  Lever(LeverData),
  StonePressurePlate(PressurePlateData),
  IronDoor(IronDoorData),
  OakPressurePlate(PressurePlateData),
  SprucePressurePlate(PressurePlateData),
  BirchPressurePlate(PressurePlateData),
  JunglePressurePlate(PressurePlateData),
  AcaciaPressurePlate(PressurePlateData),
  DarkOakPressurePlate(PressurePlateData),
  RedstoneOre(RedstoneOreData),
  RedstoneTorch(RedstoneTorchData),
  RedstoneWallTorch(CardinalLightableData),
  StoneButton(ButtonData),
  Snow(SnowData),
  Ice,
  SnowBlock,
  Cactus(CactusData),
  Clay,
  SugarCane(SugarCaneData),
  Jukebox(JukeboxData),
  OakFence(FenceData),
  Pumpkin,
  Netherrack,
  SoulSand,
  Glowstone,
  NetherPortal(NetherPortalData),
  CarvedPumpkin(CardinalData),
  JackOLantern(CardinalData),
  Cake(CakeData),
  Repeater(RepeaterData),
  WhiteStainedGlass,
  OrangeStainedGlass,
  MagentaStainedGlass,
  LightBlueStainedGlass,
  YellowStainedGlass,
  LimeStainedGlass,
  PinkStainedGlass,
  GrayStainedGlass,
  LightGrayStainedGlass,
  CyanStainedGlass,
  PurpleStainedGlass,
  BlueStainedGlass,
  BrownStainedGlass,
  GreenStainedGlass,
  RedStainedGlass,
  BlackStainedGlass,
  OakTrapdoor(TrapdoorData),
  SpruceTrapdoor(TrapdoorData),
  BirchTrapdoor(TrapdoorData),
  JungleTrapdoor(TrapdoorData),
  AcaciaTrapdoor(TrapdoorData),
  DarkOakTrapdoor(TrapdoorData),
  StoneBricks,
  MossyStoneBricks,
  CrackedStoneBricks,
  ChiseledStoneBricks,
  InfestedStone,
  InfestedCobblestone,
  InfestedStoneBricks,
  InfestedMossyStoneBricks,
  InfestedCrackedStoneBricks,
  InfestedChiseledStoneBricks,
  BrownMushroomBlock(MushroomBlockData),
  RedMushroomBlock(MushroomBlockData),
  MushroomStem(MushroomStemData),
  IronBars(IronBarsData),
  GlassPane(GlassPaneData),
  Melon,
  AttachedPumpkinStem(CardinalData),
  AttachedMelonStem(CardinalData),
  PumpkinStem(CropStemData),
  MelonStem(CropStemData),
  Vine(VineData),
  OakFenceGate(FenceGateData),
  BrickStairs(StairsData),
  StoneBrickStairs(StairsData),
  Mycelium(MyceliumData),
  LilyPad,
  NetherBricks,
  NetherBrickFence(FenceData),
  NetherBrickStairs(StairsData),
  NetherWart(NetherWartData),
  EnchantingTable,
  BrewingStand(BrewingStandData),
  Cauldron(CauldronData),
  EndPortal,
  EndPortalFrame(EndPortalFrameData),
  EndStone,
  DragonEgg,
  RedstoneLamp(RedstoneLampData),
  Cocoa(CocoaData),
  SandstoneStairs(StairsData),
  EmeraldOre,
  EnderChest(EnderChestData),
  TripwireHook(TripwireHookData),
  Tripwire(TripwireData),
  EmeraldBlock,
  SpruceStairs(StairsData),
  BirchStairs(StairsData),
  JungleStairs(StairsData),
  CommandBlock(CommandBlockData),
  Beacon,
  CobblestoneWall(WallData),
  MossyCobblestoneWall(WallData),
  FlowerPot,
  PottedOakSapling,
  PottedSpruceSapling,
  PottedBirchSapling,
  PottedJungleSapling,
  PottedAcaciaSapling,
  PottedDarkOakSapling,
  PottedFern,
  PottedDandelion,
  PottedPoppy,
  PottedBlueOrchid,
  PottedAllium,
  PottedAzureBluet,
  PottedRedTulip,
  PottedOrangeTulip,
  PottedWhiteTulip,
  PottedPinkTulip,
  PottedOxeyeDaisy,
  PottedCornflower,
  PottedLilyOfTheValley,
  PottedWitherRose,
  PottedRedMushroom,
  PottedBrownMushroom,
  PottedDeadBush,
  PottedCactus,
  Carrots(CarrotsData),
  Potatoes(PotatoesData),
  OakButton(ButtonData),
  SpruceButton(ButtonData),
  BirchButton(ButtonData),
  JungleButton(ButtonData),
  AcaciaButton(ButtonData),
  DarkOakButton(ButtonData),
  SkeletonSkull(SkeletonSkullData),
  SkeletonWallSkull(CardinalData),
  WitherSkeletonSkull(WitherSkeletonSkullData),
  WitherSkeletonWallSkull(CardinalData),
  ZombieHead(ZombieHeadData),
  ZombieWallHead(CardinalData),
  PlayerHead(PlayerHeadData),
  PlayerWallHead(CardinalData),
  CreeperHead(CreeperHeadData),
  CreeperWallHead(CardinalData),
  DragonHead(DragonHeadData),
  DragonWallHead(CardinalData),
  Anvil(CardinalData),
  ChippedAnvil(CardinalData),
  DamagedAnvil(CardinalData),
  TrappedChest(TrappedChestData),
  LightWeightedPressurePlate(LightWeightedPressurePlateData),
  HeavyWeightedPressurePlate(HeavyWeightedPressurePlateData),
  Comparator(ComparatorData),
  DaylightDetector(DaylightDetectorData),
  RedstoneBlock,
  NetherQuartzOre,
  Hopper(HopperData),
  QuartzBlock,
  ChiseledQuartzBlock,
  QuartzPillar(AxisData),
  QuartzStairs(StairsData),
  ActivatorRail(ActivatorRailData),
  Dropper(DropperData),
  WhiteTerracotta,
  OrangeTerracotta,
  MagentaTerracotta,
  LightBlueTerracotta,
  YellowTerracotta,
  LimeTerracotta,
  PinkTerracotta,
  GrayTerracotta,
  LightGrayTerracotta,
  CyanTerracotta,
  PurpleTerracotta,
  BlueTerracotta,
  BrownTerracotta,
  GreenTerracotta,
  RedTerracotta,
  BlackTerracotta,
  WhiteStainedGlassPane(GlassPaneData),
  OrangeStainedGlassPane(GlassPaneData),
  MagentaStainedGlassPane(GlassPaneData),
  LightBlueStainedGlassPane(GlassPaneData),
  YellowStainedGlassPane(GlassPaneData),
  LimeStainedGlassPane(GlassPaneData),
  PinkStainedGlassPane(GlassPaneData),
  GrayStainedGlassPane(GlassPaneData),
  LightGrayStainedGlassPane(GlassPaneData),
  CyanStainedGlassPane(GlassPaneData),
  PurpleStainedGlassPane(GlassPaneData),
  BlueStainedGlassPane(GlassPaneData),
  BrownStainedGlassPane(GlassPaneData),
  GreenStainedGlassPane(GlassPaneData),
  RedStainedGlassPane(GlassPaneData),
  BlackStainedGlassPane(GlassPaneData),
  AcaciaStairs(StairsData),
  DarkOakStairs(StairsData),
  SlimeBlock,
  Barrier,
  IronTrapdoor(IronTrapdoorData),
  Prismarine,
  PrismarineBricks,
  DarkPrismarine,
  PrismarineStairs(StairsData),
  PrismarineBrickStairs(StairsData),
  DarkPrismarineStairs(StairsData),
  PrismarineSlab(SlabData),
  PrismarineBrickSlab(SlabData),
  DarkPrismarineSlab(SlabData),
  SeaLantern,
  HayBlock(AxisData),
  WhiteCarpet,
  OrangeCarpet,
  MagentaCarpet,
  LightBlueCarpet,
  YellowCarpet,
  LimeCarpet,
  PinkCarpet,
  GrayCarpet,
  LightGrayCarpet,
  CyanCarpet,
  PurpleCarpet,
  BlueCarpet,
  BrownCarpet,
  GreenCarpet,
  RedCarpet,
  BlackCarpet,
  Terracotta,
  CoalBlock,
  PackedIce,
  Sunflower(SunflowerData),
  Lilac(LilacData),
  RoseBush(RoseBushData),
  Peony(PeonyData),
  TallGrass(TallGrassData),
  LargeFern(LargeFernData),
  WhiteBanner(BannerData),
  OrangeBanner(BannerData),
  MagentaBanner(BannerData),
  LightBlueBanner(BannerData),
  YellowBanner(BannerData),
  LimeBanner(BannerData),
  PinkBanner(BannerData),
  GrayBanner(BannerData),
  LightGrayBanner(BannerData),
  CyanBanner(BannerData),
  PurpleBanner(BannerData),
  BlueBanner(BannerData),
  BrownBanner(BannerData),
  GreenBanner(BannerData),
  RedBanner(BannerData),
  BlackBanner(BannerData),
  WhiteWallBanner(CardinalData),
  OrangeWallBanner(CardinalData),
  MagentaWallBanner(CardinalData),
  LightBlueWallBanner(CardinalData),
  YellowWallBanner(CardinalData),
  LimeWallBanner(CardinalData),
  PinkWallBanner(CardinalData),
  GrayWallBanner(CardinalData),
  LightGrayWallBanner(CardinalData),
  CyanWallBanner(CardinalData),
  PurpleWallBanner(CardinalData),
  BlueWallBanner(CardinalData),
  BrownWallBanner(CardinalData),
  GreenWallBanner(CardinalData),
  RedWallBanner(CardinalData),
  BlackWallBanner(CardinalData),
  RedSandstone,
  ChiseledRedSandstone,
  CutRedSandstone,
  RedSandstoneStairs(StairsData),
  OakSlab(SlabData),
  SpruceSlab(SlabData),
  BirchSlab(SlabData),
  JungleSlab(SlabData),
  AcaciaSlab(SlabData),
  DarkOakSlab(SlabData),
  StoneSlab(SlabData),
  SmoothStoneSlab(SlabData),
  SandstoneSlab(SlabData),
  CutSandstoneSlab(SlabData),
  PetrifiedOakSlab(SlabData),
  CobblestoneSlab(SlabData),
  BrickSlab(SlabData),
  StoneBrickSlab(SlabData),
  NetherBrickSlab(SlabData),
  QuartzSlab(SlabData),
  RedSandstoneSlab(SlabData),
  CutRedSandstoneSlab(SlabData),
  PurpurSlab(SlabData),
  SmoothStone,
  SmoothSandstone,
  SmoothQuartz,
  SmoothRedSandstone,
  SpruceFenceGate(FenceGateData),
  BirchFenceGate(FenceGateData),
  JungleFenceGate(FenceGateData),
  AcaciaFenceGate(FenceGateData),
  DarkOakFenceGate(FenceGateData),
  SpruceFence(FenceData),
  BirchFence(FenceData),
  JungleFence(FenceData),
  AcaciaFence(FenceData),
  DarkOakFence(FenceData),
  SpruceDoor(DoorData),
  BirchDoor(DoorData),
  JungleDoor(DoorData),
  AcaciaDoor(DoorData),
  DarkOakDoor(DoorData),
  EndRod(BlockFaceData),
  ChorusPlant(ChorusPlantData),
  ChorusFlower(ChorusFlowerData),
  PurpurBlock,
  PurpurPillar(AxisData),
  PurpurStairs(StairsData),
  EndStoneBricks,
  Beetroots(BeetrootsData),
  GrassPath,
  EndGateway,
  RepeatingCommandBlock(CommandBlockData),
  ChainCommandBlock(CommandBlockData),
  FrostedIce(FrostedIceData),
  MagmaBlock,
  NetherWartBlock,
  RedNetherBricks,
  BoneBlock(AxisData),
  StructureVoid,
  Observer(ObserverData),
  ShulkerBox(BlockFaceData),
  WhiteShulkerBox(BlockFaceData),
  OrangeShulkerBox(BlockFaceData),
  MagentaShulkerBox(BlockFaceData),
  LightBlueShulkerBox(BlockFaceData),
  YellowShulkerBox(BlockFaceData),
  LimeShulkerBox(BlockFaceData),
  PinkShulkerBox(BlockFaceData),
  GrayShulkerBox(BlockFaceData),
  LightGrayShulkerBox(BlockFaceData),
  CyanShulkerBox(BlockFaceData),
  PurpleShulkerBox(BlockFaceData),
  BlueShulkerBox(BlockFaceData),
  BrownShulkerBox(BlockFaceData),
  GreenShulkerBox(BlockFaceData),
  RedShulkerBox(BlockFaceData),
  BlackShulkerBox(BlockFaceData),
  WhiteGlazedTerracotta(CardinalData),
  OrangeGlazedTerracotta(CardinalData),
  MagentaGlazedTerracotta(CardinalData),
  LightBlueGlazedTerracotta(CardinalData),
  YellowGlazedTerracotta(CardinalData),
  LimeGlazedTerracotta(CardinalData),
  PinkGlazedTerracotta(CardinalData),
  GrayGlazedTerracotta(CardinalData),
  LightGrayGlazedTerracotta(CardinalData),
  CyanGlazedTerracotta(CardinalData),
  PurpleGlazedTerracotta(CardinalData),
  BlueGlazedTerracotta(CardinalData),
  BrownGlazedTerracotta(CardinalData),
  GreenGlazedTerracotta(CardinalData),
  RedGlazedTerracotta(CardinalData),
  BlackGlazedTerracotta(CardinalData),
  WhiteConcrete,
  OrangeConcrete,
  MagentaConcrete,
  LightBlueConcrete,
  YellowConcrete,
  LimeConcrete,
  PinkConcrete,
  GrayConcrete,
  LightGrayConcrete,
  CyanConcrete,
  PurpleConcrete,
  BlueConcrete,
  BrownConcrete,
  GreenConcrete,
  RedConcrete,
  BlackConcrete,
  WhiteConcretePowder,
  OrangeConcretePowder,
  MagentaConcretePowder,
  LightBlueConcretePowder,
  YellowConcretePowder,
  LimeConcretePowder,
  PinkConcretePowder,
  GrayConcretePowder,
  LightGrayConcretePowder,
  CyanConcretePowder,
  PurpleConcretePowder,
  BlueConcretePowder,
  BrownConcretePowder,
  GreenConcretePowder,
  RedConcretePowder,
  BlackConcretePowder,
  Kelp(KelpData),
  KelpPlant,
  DriedKelpBlock,
  TurtleEgg(TurtleEggData),
  DeadTubeCoralBlock,
  DeadBrainCoralBlock,
  DeadBubbleCoralBlock,
  DeadFireCoralBlock,
  DeadHornCoralBlock,
  TubeCoralBlock,
  BrainCoralBlock,
  BubbleCoralBlock,
  FireCoralBlock,
  HornCoralBlock,
  DeadTubeCoral(WaterloggedData),
  DeadBrainCoral(WaterloggedData),
  DeadBubbleCoral(WaterloggedData),
  DeadFireCoral(WaterloggedData),
  DeadHornCoral(WaterloggedData),
  TubeCoral(WaterloggedData),
  BrainCoral(WaterloggedData),
  BubbleCoral(WaterloggedData),
  FireCoral(WaterloggedData),
  HornCoral(WaterloggedData),
  DeadTubeCoralFan(WaterloggedData),
  DeadBrainCoralFan(WaterloggedData),
  DeadBubbleCoralFan(WaterloggedData),
  DeadFireCoralFan(WaterloggedData),
  DeadHornCoralFan(WaterloggedData),
  TubeCoralFan(WaterloggedData),
  BrainCoralFan(WaterloggedData),
  BubbleCoralFan(WaterloggedData),
  FireCoralFan(WaterloggedData),
  HornCoralFan(WaterloggedData),
  DeadTubeCoralWallFan(CoralWallFanData),
  DeadBrainCoralWallFan(CoralWallFanData),
  DeadBubbleCoralWallFan(CoralWallFanData),
  DeadFireCoralWallFan(CoralWallFanData),
  DeadHornCoralWallFan(CoralWallFanData),
  TubeCoralWallFan(CoralWallFanData),
  BrainCoralWallFan(CoralWallFanData),
  BubbleCoralWallFan(CoralWallFanData),
  FireCoralWallFan(CoralWallFanData),
  HornCoralWallFan(CoralWallFanData),
  SeaPickle(SeaPickleData),
  BlueIce,
  Conduit(WaterloggedData),
  BambooSapling,
  Bamboo(BambooData),
  PottedBamboo,
  VoidAir,
  CaveAir,
  BubbleColumn(BubbleColumnData),
  PolishedGraniteStairs(StairsData),
  SmoothRedSandstoneStairs(StairsData),
  MossyStoneBrickStairs(StairsData),
  PolishedDioriteStairs(StairsData),
  MossyCobblestoneStairs(StairsData),
  EndStoneBrickStairs(StairsData),
  StoneStairs(StairsData),
  SmoothSandstoneStairs(StairsData),
  SmoothQuartzStairs(StairsData),
  GraniteStairs(StairsData),
  AndesiteStairs(StairsData),
  RedNetherBrickStairs(StairsData),
  PolishedAndesiteStairs(StairsData),
  DioriteStairs(StairsData),
  PolishedGraniteSlab(SlabData),
  SmoothRedSandstoneSlab(SlabData),
  MossyStoneBrickSlab(SlabData),
  PolishedDioriteSlab(SlabData),
  MossyCobblestoneSlab(SlabData),
  EndStoneBrickSlab(SlabData),
  SmoothSandstoneSlab(SlabData),
  SmoothQuartzSlab(SlabData),
  GraniteSlab(SlabData),
  AndesiteSlab(SlabData),
  RedNetherBrickSlab(SlabData),
  PolishedAndesiteSlab(SlabData),
  DioriteSlab(SlabData),
  BrickWall(WallData),
  PrismarineWall(WallData),
  RedSandstoneWall(WallData),
  MossyStoneBrickWall(WallData),
  GraniteWall(WallData),
  StoneBrickWall(WallData),
  NetherBrickWall(WallData),
  AndesiteWall(WallData),
  RedNetherBrickWall(WallData),
  SandstoneWall(WallData),
  EndStoneBrickWall(WallData),
  DioriteWall(WallData),
  Scaffolding(ScaffoldingData),
  Loom(CardinalData),
  Barrel(BarrelData),
  Smoker(CardinalLightableData),
  BlastFurnace(CardinalLightableData),
  CartographyTable,
  FletchingTable,
  Grindstone(GrindstoneData),
  Lectern(LecternData),
  SmithingTable,
  Stonecutter(CardinalData),
  Bell(BellData),
  Lantern(LanternData),
  Campfire(CampfireData),
  SweetBerryBush(SweetBerryBushData),
  StructureBlock(StructureBlockData),
  Jigsaw(BlockFaceData),
  Composter(ComposterData),
  BeeNest(BeeNestData),
  Beehive(BeehiveData),
  HoneyBlock,
  HoneycombBlock,
}

impl Block {
  /// Attempts to create a Block structure from the given block state id
  pub fn from_state(state: usize) -> Option<Self> {
    // Get the base id of the block (block id without the offset)
    let base = BLOCK_ID_BASES[BLOCK_ID_BASES.binary_search(&state).unwrap_or_else(|x| x-1)];
    match base {
      0 => Some(Self::Air),
      1 => Some(Self::Stone),
      2 => Some(Self::Granite),
      3 => Some(Self::PolishedGranite),
      4 => Some(Self::Diorite),
      5 => Some(Self::PolishedDiorite),
      6 => Some(Self::Andesite),
      7 => Some(Self::PolishedAndesite),
      8 => GrassBlockData::from_offset(state - base).map(|state| Self::GrassBlock(state)),
      10 => Some(Self::Dirt),
      11 => Some(Self::CoarseDirt),
      12 => PodzolData::from_offset(state - base).map(|state| Self::Podzol(state)),
      14 => Some(Self::Cobblestone),
      15 => Some(Self::OakPlanks),
      16 => Some(Self::SprucePlanks),
      17 => Some(Self::BirchPlanks),
      18 => Some(Self::JunglePlanks),
      19 => Some(Self::AcaciaPlanks),
      20 => Some(Self::DarkOakPlanks),
      21 => TreeSaplingData::from_offset(state - base).map(|state| Self::OakSapling(state)),
      23 => TreeSaplingData::from_offset(state - base).map(|state| Self::SpruceSapling(state)),
      25 => TreeSaplingData::from_offset(state - base).map(|state| Self::BirchSapling(state)),
      27 => TreeSaplingData::from_offset(state - base).map(|state| Self::JungleSapling(state)),
      29 => TreeSaplingData::from_offset(state - base).map(|state| Self::AcaciaSapling(state)),
      31 => TreeSaplingData::from_offset(state - base).map(|state| Self::DarkOakSapling(state)),
      33 => Some(Self::Bedrock),
      34 => FluidData::from_offset(state - base).map(|state| Self::Water(state)),
      50 => FluidData::from_offset(state - base).map(|state| Self::Lava(state)),
      66 => Some(Self::Sand),
      67 => Some(Self::RedSand),
      68 => Some(Self::Gravel),
      69 => Some(Self::GoldOre),
      70 => Some(Self::IronOre),
      71 => Some(Self::CoalOre),
      72 => AxisData::from_offset(state - base).map(|state| Self::OakLog(state)),
      75 => AxisData::from_offset(state - base).map(|state| Self::SpruceLog(state)),
      78 => AxisData::from_offset(state - base).map(|state| Self::BirchLog(state)),
      81 => AxisData::from_offset(state - base).map(|state| Self::JungleLog(state)),
      84 => AxisData::from_offset(state - base).map(|state| Self::AcaciaLog(state)),
      87 => AxisData::from_offset(state - base).map(|state| Self::DarkOakLog(state)),
      90 => AxisData::from_offset(state - base).map(|state| Self::StrippedSpruceLog(state)),
      93 => AxisData::from_offset(state - base).map(|state| Self::StrippedBirchLog(state)),
      96 => AxisData::from_offset(state - base).map(|state| Self::StrippedJungleLog(state)),
      99 => AxisData::from_offset(state - base).map(|state| Self::StrippedAcaciaLog(state)),
      102 => AxisData::from_offset(state - base).map(|state| Self::StrippedDarkOakLog(state)),
      105 => AxisData::from_offset(state - base).map(|state| Self::StrippedOakLog(state)),
      108 => AxisData::from_offset(state - base).map(|state| Self::OakWood(state)),
      111 => AxisData::from_offset(state - base).map(|state| Self::SpruceWood(state)),
      114 => AxisData::from_offset(state - base).map(|state| Self::BirchWood(state)),
      117 => AxisData::from_offset(state - base).map(|state| Self::JungleWood(state)),
      120 => AxisData::from_offset(state - base).map(|state| Self::AcaciaWood(state)),
      123 => AxisData::from_offset(state - base).map(|state| Self::DarkOakWood(state)),
      126 => AxisData::from_offset(state - base).map(|state| Self::StrippedOakWood(state)),
      129 => AxisData::from_offset(state - base).map(|state| Self::StrippedSpruceWood(state)),
      132 => AxisData::from_offset(state - base).map(|state| Self::StrippedBirchWood(state)),
      135 => AxisData::from_offset(state - base).map(|state| Self::StrippedJungleWood(state)),
      138 => AxisData::from_offset(state - base).map(|state| Self::StrippedAcaciaWood(state)),
      141 => AxisData::from_offset(state - base).map(|state| Self::StrippedDarkOakWood(state)),
      144 => LeavesData::from_offset(state - base).map(|state| Self::OakLeaves(state)),
      158 => LeavesData::from_offset(state - base).map(|state| Self::SpruceLeaves(state)),
      172 => LeavesData::from_offset(state - base).map(|state| Self::BirchLeaves(state)),
      186 => LeavesData::from_offset(state - base).map(|state| Self::JungleLeaves(state)),
      200 => LeavesData::from_offset(state - base).map(|state| Self::AcaciaLeaves(state)),
      214 => LeavesData::from_offset(state - base).map(|state| Self::DarkOakLeaves(state)),
      228 => Some(Self::Sponge),
      229 => Some(Self::WetSponge),
      230 => Some(Self::Glass),
      231 => Some(Self::LapisOre),
      232 => Some(Self::LapisBlock),
      233 => DispenserData::from_offset(state - base).map(|state| Self::Dispenser(state)),
      245 => Some(Self::Sandstone),
      246 => Some(Self::ChiseledSandstone),
      247 => Some(Self::CutSandstone),
      248 => NoteBlockData::from_offset(state - base).map(|state| Self::NoteBlock(state)),
      1048 => BedData::from_offset(state - base).map(|state| Self::WhiteBed(state)),
      1064 => BedData::from_offset(state - base).map(|state| Self::OrangeBed(state)),
      1080 => BedData::from_offset(state - base).map(|state| Self::MagentaBed(state)),
      1096 => BedData::from_offset(state - base).map(|state| Self::LightBlueBed(state)),
      1112 => BedData::from_offset(state - base).map(|state| Self::YellowBed(state)),
      1128 => BedData::from_offset(state - base).map(|state| Self::LimeBed(state)),
      1144 => BedData::from_offset(state - base).map(|state| Self::PinkBed(state)),
      1160 => BedData::from_offset(state - base).map(|state| Self::GrayBed(state)),
      1176 => BedData::from_offset(state - base).map(|state| Self::LightGrayBed(state)),
      1192 => BedData::from_offset(state - base).map(|state| Self::CyanBed(state)),
      1208 => BedData::from_offset(state - base).map(|state| Self::PurpleBed(state)),
      1224 => BedData::from_offset(state - base).map(|state| Self::BlueBed(state)),
      1240 => BedData::from_offset(state - base).map(|state| Self::BrownBed(state)),
      1256 => BedData::from_offset(state - base).map(|state| Self::GreenBed(state)),
      1272 => BedData::from_offset(state - base).map(|state| Self::RedBed(state)),
      1288 => BedData::from_offset(state - base).map(|state| Self::BlackBed(state)),
      1304 => PoweredRailData::from_offset(state - base).map(|state| Self::PoweredRail(state)),
      1316 => DetectorRailData::from_offset(state - base).map(|state| Self::DetectorRail(state)),
      1328 => PistonData::from_offset(state - base).map(|state| Self::StickyPiston(state)),
      1340 => Some(Self::Cobweb),
      1341 => Some(Self::Grass),
      1342 => Some(Self::Fern),
      1343 => Some(Self::DeadBush),
      1344 => Some(Self::Seagrass),
      1345 => TallSeagrassData::from_offset(state - base).map(|state| Self::TallSeagrass(state)),
      1347 => PistonData::from_offset(state - base).map(|state| Self::Piston(state)),
      1359 => PistonHeadData::from_offset(state - base).map(|state| Self::PistonHead(state)),
      1383 => Some(Self::WhiteWool),
      1384 => Some(Self::OrangeWool),
      1385 => Some(Self::MagentaWool),
      1386 => Some(Self::LightBlueWool),
      1387 => Some(Self::YellowWool),
      1388 => Some(Self::LimeWool),
      1389 => Some(Self::PinkWool),
      1390 => Some(Self::GrayWool),
      1391 => Some(Self::LightGrayWool),
      1392 => Some(Self::CyanWool),
      1393 => Some(Self::PurpleWool),
      1394 => Some(Self::BlueWool),
      1395 => Some(Self::BrownWool),
      1396 => Some(Self::GreenWool),
      1397 => Some(Self::RedWool),
      1398 => Some(Self::BlackWool),
      1399 => PistonData::from_offset(state - base).map(|state| Self::MovingPiston(state)),
      1411 => Some(Self::Dandelion),
      1412 => Some(Self::Poppy),
      1413 => Some(Self::BlueOrchid),
      1414 => Some(Self::Allium),
      1415 => Some(Self::AzureBluet),
      1416 => Some(Self::RedTulip),
      1417 => Some(Self::OrangeTulip),
      1418 => Some(Self::WhiteTulip),
      1419 => Some(Self::PinkTulip),
      1420 => Some(Self::OxeyeDaisy),
      1421 => Some(Self::Cornflower),
      1422 => Some(Self::WitherRose),
      1423 => Some(Self::LilyOfTheValley),
      1424 => Some(Self::BrownMushroom),
      1425 => Some(Self::RedMushroom),
      1426 => Some(Self::GoldBlock),
      1427 => Some(Self::IronBlock),
      1428 => Some(Self::Bricks),
      1429 => TntData::from_offset(state - base).map(|state| Self::Tnt(state)),
      1431 => Some(Self::Bookshelf),
      1432 => Some(Self::MossyCobblestone),
      1433 => Some(Self::Obsidian),
      1434 => Some(Self::Torch),
      1435 => CardinalData::from_offset(state - base).map(|state| Self::WallTorch(state)),
      1439 => FireData::from_offset(state - base).map(|state| Self::Fire(state)),
      1951 => Some(Self::Spawner),
      1952 => StairsData::from_offset(state - base).map(|state| Self::OakStairs(state)),
      2032 => ChestData::from_offset(state - base).map(|state| Self::Chest(state)),
      2056 => RedstoneWireData::from_offset(state - base).map(|state| Self::RedstoneWire(state)),
      3352 => Some(Self::DiamondOre),
      3353 => Some(Self::DiamondBlock),
      3354 => Some(Self::CraftingTable),
      3355 => WheatData::from_offset(state - base).map(|state| Self::Wheat(state)),
      3363 => FarmlandData::from_offset(state - base).map(|state| Self::Farmland(state)),
      3371 => CardinalLightableData::from_offset(state - base).map(|state| Self::Furnace(state)),
      3379 => SignData::from_offset(state - base).map(|state| Self::OakSign(state)),
      3411 => SignData::from_offset(state - base).map(|state| Self::SpruceSign(state)),
      3443 => SignData::from_offset(state - base).map(|state| Self::BirchSign(state)),
      3475 => SignData::from_offset(state - base).map(|state| Self::AcaciaSign(state)),
      3507 => SignData::from_offset(state - base).map(|state| Self::JungleSign(state)),
      3539 => SignData::from_offset(state - base).map(|state| Self::DarkOakSign(state)),
      3571 => DoorData::from_offset(state - base).map(|state| Self::OakDoor(state)),
      3635 => LadderData::from_offset(state - base).map(|state| Self::Ladder(state)),
      3643 => RailData::from_offset(state - base).map(|state| Self::Rail(state)),
      3653 => StairsData::from_offset(state - base).map(|state| Self::CobblestoneStairs(state)),
      3733 => WallSignData::from_offset(state - base).map(|state| Self::OakWallSign(state)),
      3741 => WallSignData::from_offset(state - base).map(|state| Self::SpruceWallSign(state)),
      3749 => WallSignData::from_offset(state - base).map(|state| Self::BirchWallSign(state)),
      3757 => WallSignData::from_offset(state - base).map(|state| Self::AcaciaWallSign(state)),
      3765 => WallSignData::from_offset(state - base).map(|state| Self::JungleWallSign(state)),
      3773 => WallSignData::from_offset(state - base).map(|state| Self::DarkOakWallSign(state)),
      3781 => LeverData::from_offset(state - base).map(|state| Self::Lever(state)),
      3805 => PressurePlateData::from_offset(state - base).map(|state| Self::StonePressurePlate(state)),
      3807 => IronDoorData::from_offset(state - base).map(|state| Self::IronDoor(state)),
      3871 => PressurePlateData::from_offset(state - base).map(|state| Self::OakPressurePlate(state)),
      3873 => PressurePlateData::from_offset(state - base).map(|state| Self::SprucePressurePlate(state)),
      3875 => PressurePlateData::from_offset(state - base).map(|state| Self::BirchPressurePlate(state)),
      3877 => PressurePlateData::from_offset(state - base).map(|state| Self::JunglePressurePlate(state)),
      3879 => PressurePlateData::from_offset(state - base).map(|state| Self::AcaciaPressurePlate(state)),
      3881 => PressurePlateData::from_offset(state - base).map(|state| Self::DarkOakPressurePlate(state)),
      3883 => RedstoneOreData::from_offset(state - base).map(|state| Self::RedstoneOre(state)),
      3885 => RedstoneTorchData::from_offset(state - base).map(|state| Self::RedstoneTorch(state)),
      3887 => CardinalLightableData::from_offset(state - base).map(|state| Self::RedstoneWallTorch(state)),
      3895 => ButtonData::from_offset(state - base).map(|state| Self::StoneButton(state)),
      3919 => SnowData::from_offset(state - base).map(|state| Self::Snow(state)),
      3927 => Some(Self::Ice),
      3928 => Some(Self::SnowBlock),
      3929 => CactusData::from_offset(state - base).map(|state| Self::Cactus(state)),
      3945 => Some(Self::Clay),
      3946 => SugarCaneData::from_offset(state - base).map(|state| Self::SugarCane(state)),
      3962 => JukeboxData::from_offset(state - base).map(|state| Self::Jukebox(state)),
      3964 => FenceData::from_offset(state - base).map(|state| Self::OakFence(state)),
      3996 => Some(Self::Pumpkin),
      3997 => Some(Self::Netherrack),
      3998 => Some(Self::SoulSand),
      3999 => Some(Self::Glowstone),
      4000 => NetherPortalData::from_offset(state - base).map(|state| Self::NetherPortal(state)),
      4002 => CardinalData::from_offset(state - base).map(|state| Self::CarvedPumpkin(state)),
      4006 => CardinalData::from_offset(state - base).map(|state| Self::JackOLantern(state)),
      4010 => CakeData::from_offset(state - base).map(|state| Self::Cake(state)),
      4017 => RepeaterData::from_offset(state - base).map(|state| Self::Repeater(state)),
      4081 => Some(Self::WhiteStainedGlass),
      4082 => Some(Self::OrangeStainedGlass),
      4083 => Some(Self::MagentaStainedGlass),
      4084 => Some(Self::LightBlueStainedGlass),
      4085 => Some(Self::YellowStainedGlass),
      4086 => Some(Self::LimeStainedGlass),
      4087 => Some(Self::PinkStainedGlass),
      4088 => Some(Self::GrayStainedGlass),
      4089 => Some(Self::LightGrayStainedGlass),
      4090 => Some(Self::CyanStainedGlass),
      4091 => Some(Self::PurpleStainedGlass),
      4092 => Some(Self::BlueStainedGlass),
      4093 => Some(Self::BrownStainedGlass),
      4094 => Some(Self::GreenStainedGlass),
      4095 => Some(Self::RedStainedGlass),
      4096 => Some(Self::BlackStainedGlass),
      4097 => TrapdoorData::from_offset(state - base).map(|state| Self::OakTrapdoor(state)),
      4161 => TrapdoorData::from_offset(state - base).map(|state| Self::SpruceTrapdoor(state)),
      4225 => TrapdoorData::from_offset(state - base).map(|state| Self::BirchTrapdoor(state)),
      4289 => TrapdoorData::from_offset(state - base).map(|state| Self::JungleTrapdoor(state)),
      4353 => TrapdoorData::from_offset(state - base).map(|state| Self::AcaciaTrapdoor(state)),
      4417 => TrapdoorData::from_offset(state - base).map(|state| Self::DarkOakTrapdoor(state)),
      4481 => Some(Self::StoneBricks),
      4482 => Some(Self::MossyStoneBricks),
      4483 => Some(Self::CrackedStoneBricks),
      4484 => Some(Self::ChiseledStoneBricks),
      4485 => Some(Self::InfestedStone),
      4486 => Some(Self::InfestedCobblestone),
      4487 => Some(Self::InfestedStoneBricks),
      4488 => Some(Self::InfestedMossyStoneBricks),
      4489 => Some(Self::InfestedCrackedStoneBricks),
      4490 => Some(Self::InfestedChiseledStoneBricks),
      4491 => MushroomBlockData::from_offset(state - base).map(|state| Self::BrownMushroomBlock(state)),
      4555 => MushroomBlockData::from_offset(state - base).map(|state| Self::RedMushroomBlock(state)),
      4619 => MushroomStemData::from_offset(state - base).map(|state| Self::MushroomStem(state)),
      4683 => IronBarsData::from_offset(state - base).map(|state| Self::IronBars(state)),
      4715 => GlassPaneData::from_offset(state - base).map(|state| Self::GlassPane(state)),
      4747 => Some(Self::Melon),
      4748 => CardinalData::from_offset(state - base).map(|state| Self::AttachedPumpkinStem(state)),
      4752 => CardinalData::from_offset(state - base).map(|state| Self::AttachedMelonStem(state)),
      4756 => CropStemData::from_offset(state - base).map(|state| Self::PumpkinStem(state)),
      4764 => CropStemData::from_offset(state - base).map(|state| Self::MelonStem(state)),
      4772 => VineData::from_offset(state - base).map(|state| Self::Vine(state)),
      4804 => FenceGateData::from_offset(state - base).map(|state| Self::OakFenceGate(state)),
      4836 => StairsData::from_offset(state - base).map(|state| Self::BrickStairs(state)),
      4916 => StairsData::from_offset(state - base).map(|state| Self::StoneBrickStairs(state)),
      4996 => MyceliumData::from_offset(state - base).map(|state| Self::Mycelium(state)),
      4998 => Some(Self::LilyPad),
      4999 => Some(Self::NetherBricks),
      5000 => FenceData::from_offset(state - base).map(|state| Self::NetherBrickFence(state)),
      5032 => StairsData::from_offset(state - base).map(|state| Self::NetherBrickStairs(state)),
      5112 => NetherWartData::from_offset(state - base).map(|state| Self::NetherWart(state)),
      5116 => Some(Self::EnchantingTable),
      5117 => BrewingStandData::from_offset(state - base).map(|state| Self::BrewingStand(state)),
      5125 => CauldronData::from_offset(state - base).map(|state| Self::Cauldron(state)),
      5129 => Some(Self::EndPortal),
      5130 => EndPortalFrameData::from_offset(state - base).map(|state| Self::EndPortalFrame(state)),
      5138 => Some(Self::EndStone),
      5139 => Some(Self::DragonEgg),
      5140 => RedstoneLampData::from_offset(state - base).map(|state| Self::RedstoneLamp(state)),
      5142 => CocoaData::from_offset(state - base).map(|state| Self::Cocoa(state)),
      5154 => StairsData::from_offset(state - base).map(|state| Self::SandstoneStairs(state)),
      5234 => Some(Self::EmeraldOre),
      5235 => EnderChestData::from_offset(state - base).map(|state| Self::EnderChest(state)),
      5243 => TripwireHookData::from_offset(state - base).map(|state| Self::TripwireHook(state)),
      5259 => TripwireData::from_offset(state - base).map(|state| Self::Tripwire(state)),
      5387 => Some(Self::EmeraldBlock),
      5388 => StairsData::from_offset(state - base).map(|state| Self::SpruceStairs(state)),
      5468 => StairsData::from_offset(state - base).map(|state| Self::BirchStairs(state)),
      5548 => StairsData::from_offset(state - base).map(|state| Self::JungleStairs(state)),
      5628 => CommandBlockData::from_offset(state - base).map(|state| Self::CommandBlock(state)),
      5640 => Some(Self::Beacon),
      5641 => WallData::from_offset(state - base).map(|state| Self::CobblestoneWall(state)),
      5705 => WallData::from_offset(state - base).map(|state| Self::MossyCobblestoneWall(state)),
      5769 => Some(Self::FlowerPot),
      5770 => Some(Self::PottedOakSapling),
      5771 => Some(Self::PottedSpruceSapling),
      5772 => Some(Self::PottedBirchSapling),
      5773 => Some(Self::PottedJungleSapling),
      5774 => Some(Self::PottedAcaciaSapling),
      5775 => Some(Self::PottedDarkOakSapling),
      5776 => Some(Self::PottedFern),
      5777 => Some(Self::PottedDandelion),
      5778 => Some(Self::PottedPoppy),
      5779 => Some(Self::PottedBlueOrchid),
      5780 => Some(Self::PottedAllium),
      5781 => Some(Self::PottedAzureBluet),
      5782 => Some(Self::PottedRedTulip),
      5783 => Some(Self::PottedOrangeTulip),
      5784 => Some(Self::PottedWhiteTulip),
      5785 => Some(Self::PottedPinkTulip),
      5786 => Some(Self::PottedOxeyeDaisy),
      5787 => Some(Self::PottedCornflower),
      5788 => Some(Self::PottedLilyOfTheValley),
      5789 => Some(Self::PottedWitherRose),
      5790 => Some(Self::PottedRedMushroom),
      5791 => Some(Self::PottedBrownMushroom),
      5792 => Some(Self::PottedDeadBush),
      5793 => Some(Self::PottedCactus),
      5794 => CarrotsData::from_offset(state - base).map(|state| Self::Carrots(state)),
      5802 => PotatoesData::from_offset(state - base).map(|state| Self::Potatoes(state)),
      5810 => ButtonData::from_offset(state - base).map(|state| Self::OakButton(state)),
      5834 => ButtonData::from_offset(state - base).map(|state| Self::SpruceButton(state)),
      5858 => ButtonData::from_offset(state - base).map(|state| Self::BirchButton(state)),
      5882 => ButtonData::from_offset(state - base).map(|state| Self::JungleButton(state)),
      5906 => ButtonData::from_offset(state - base).map(|state| Self::AcaciaButton(state)),
      5930 => ButtonData::from_offset(state - base).map(|state| Self::DarkOakButton(state)),
      5954 => SkeletonSkullData::from_offset(state - base).map(|state| Self::SkeletonSkull(state)),
      5970 => CardinalData::from_offset(state - base).map(|state| Self::SkeletonWallSkull(state)),
      5974 => WitherSkeletonSkullData::from_offset(state - base).map(|state| Self::WitherSkeletonSkull(state)),
      5990 => CardinalData::from_offset(state - base).map(|state| Self::WitherSkeletonWallSkull(state)),
      5994 => ZombieHeadData::from_offset(state - base).map(|state| Self::ZombieHead(state)),
      6010 => CardinalData::from_offset(state - base).map(|state| Self::ZombieWallHead(state)),
      6014 => PlayerHeadData::from_offset(state - base).map(|state| Self::PlayerHead(state)),
      6030 => CardinalData::from_offset(state - base).map(|state| Self::PlayerWallHead(state)),
      6034 => CreeperHeadData::from_offset(state - base).map(|state| Self::CreeperHead(state)),
      6050 => CardinalData::from_offset(state - base).map(|state| Self::CreeperWallHead(state)),
      6054 => DragonHeadData::from_offset(state - base).map(|state| Self::DragonHead(state)),
      6070 => CardinalData::from_offset(state - base).map(|state| Self::DragonWallHead(state)),
      6074 => CardinalData::from_offset(state - base).map(|state| Self::Anvil(state)),
      6078 => CardinalData::from_offset(state - base).map(|state| Self::ChippedAnvil(state)),
      6082 => CardinalData::from_offset(state - base).map(|state| Self::DamagedAnvil(state)),
      6086 => TrappedChestData::from_offset(state - base).map(|state| Self::TrappedChest(state)),
      6110 => LightWeightedPressurePlateData::from_offset(state - base).map(|state| Self::LightWeightedPressurePlate(state)),
      6126 => HeavyWeightedPressurePlateData::from_offset(state - base).map(|state| Self::HeavyWeightedPressurePlate(state)),
      6142 => ComparatorData::from_offset(state - base).map(|state| Self::Comparator(state)),
      6158 => DaylightDetectorData::from_offset(state - base).map(|state| Self::DaylightDetector(state)),
      6190 => Some(Self::RedstoneBlock),
      6191 => Some(Self::NetherQuartzOre),
      6192 => HopperData::from_offset(state - base).map(|state| Self::Hopper(state)),
      6202 => Some(Self::QuartzBlock),
      6203 => Some(Self::ChiseledQuartzBlock),
      6204 => AxisData::from_offset(state - base).map(|state| Self::QuartzPillar(state)),
      6207 => StairsData::from_offset(state - base).map(|state| Self::QuartzStairs(state)),
      6287 => ActivatorRailData::from_offset(state - base).map(|state| Self::ActivatorRail(state)),
      6299 => DropperData::from_offset(state - base).map(|state| Self::Dropper(state)),
      6311 => Some(Self::WhiteTerracotta),
      6312 => Some(Self::OrangeTerracotta),
      6313 => Some(Self::MagentaTerracotta),
      6314 => Some(Self::LightBlueTerracotta),
      6315 => Some(Self::YellowTerracotta),
      6316 => Some(Self::LimeTerracotta),
      6317 => Some(Self::PinkTerracotta),
      6318 => Some(Self::GrayTerracotta),
      6319 => Some(Self::LightGrayTerracotta),
      6320 => Some(Self::CyanTerracotta),
      6321 => Some(Self::PurpleTerracotta),
      6322 => Some(Self::BlueTerracotta),
      6323 => Some(Self::BrownTerracotta),
      6324 => Some(Self::GreenTerracotta),
      6325 => Some(Self::RedTerracotta),
      6326 => Some(Self::BlackTerracotta),
      6327 => GlassPaneData::from_offset(state - base).map(|state| Self::WhiteStainedGlassPane(state)),
      6359 => GlassPaneData::from_offset(state - base).map(|state| Self::OrangeStainedGlassPane(state)),
      6391 => GlassPaneData::from_offset(state - base).map(|state| Self::MagentaStainedGlassPane(state)),
      6423 => GlassPaneData::from_offset(state - base).map(|state| Self::LightBlueStainedGlassPane(state)),
      6455 => GlassPaneData::from_offset(state - base).map(|state| Self::YellowStainedGlassPane(state)),
      6487 => GlassPaneData::from_offset(state - base).map(|state| Self::LimeStainedGlassPane(state)),
      6519 => GlassPaneData::from_offset(state - base).map(|state| Self::PinkStainedGlassPane(state)),
      6551 => GlassPaneData::from_offset(state - base).map(|state| Self::GrayStainedGlassPane(state)),
      6583 => GlassPaneData::from_offset(state - base).map(|state| Self::LightGrayStainedGlassPane(state)),
      6615 => GlassPaneData::from_offset(state - base).map(|state| Self::CyanStainedGlassPane(state)),
      6647 => GlassPaneData::from_offset(state - base).map(|state| Self::PurpleStainedGlassPane(state)),
      6679 => GlassPaneData::from_offset(state - base).map(|state| Self::BlueStainedGlassPane(state)),
      6711 => GlassPaneData::from_offset(state - base).map(|state| Self::BrownStainedGlassPane(state)),
      6743 => GlassPaneData::from_offset(state - base).map(|state| Self::GreenStainedGlassPane(state)),
      6775 => GlassPaneData::from_offset(state - base).map(|state| Self::RedStainedGlassPane(state)),
      6807 => GlassPaneData::from_offset(state - base).map(|state| Self::BlackStainedGlassPane(state)),
      6839 => StairsData::from_offset(state - base).map(|state| Self::AcaciaStairs(state)),
      6919 => StairsData::from_offset(state - base).map(|state| Self::DarkOakStairs(state)),
      6999 => Some(Self::SlimeBlock),
      7000 => Some(Self::Barrier),
      7001 => IronTrapdoorData::from_offset(state - base).map(|state| Self::IronTrapdoor(state)),
      7065 => Some(Self::Prismarine),
      7066 => Some(Self::PrismarineBricks),
      7067 => Some(Self::DarkPrismarine),
      7068 => StairsData::from_offset(state - base).map(|state| Self::PrismarineStairs(state)),
      7148 => StairsData::from_offset(state - base).map(|state| Self::PrismarineBrickStairs(state)),
      7228 => StairsData::from_offset(state - base).map(|state| Self::DarkPrismarineStairs(state)),
      7308 => SlabData::from_offset(state - base).map(|state| Self::PrismarineSlab(state)),
      7314 => SlabData::from_offset(state - base).map(|state| Self::PrismarineBrickSlab(state)),
      7320 => SlabData::from_offset(state - base).map(|state| Self::DarkPrismarineSlab(state)),
      7326 => Some(Self::SeaLantern),
      7327 => AxisData::from_offset(state - base).map(|state| Self::HayBlock(state)),
      7330 => Some(Self::WhiteCarpet),
      7331 => Some(Self::OrangeCarpet),
      7332 => Some(Self::MagentaCarpet),
      7333 => Some(Self::LightBlueCarpet),
      7334 => Some(Self::YellowCarpet),
      7335 => Some(Self::LimeCarpet),
      7336 => Some(Self::PinkCarpet),
      7337 => Some(Self::GrayCarpet),
      7338 => Some(Self::LightGrayCarpet),
      7339 => Some(Self::CyanCarpet),
      7340 => Some(Self::PurpleCarpet),
      7341 => Some(Self::BlueCarpet),
      7342 => Some(Self::BrownCarpet),
      7343 => Some(Self::GreenCarpet),
      7344 => Some(Self::RedCarpet),
      7345 => Some(Self::BlackCarpet),
      7346 => Some(Self::Terracotta),
      7347 => Some(Self::CoalBlock),
      7348 => Some(Self::PackedIce),
      7349 => SunflowerData::from_offset(state - base).map(|state| Self::Sunflower(state)),
      7351 => LilacData::from_offset(state - base).map(|state| Self::Lilac(state)),
      7353 => RoseBushData::from_offset(state - base).map(|state| Self::RoseBush(state)),
      7355 => PeonyData::from_offset(state - base).map(|state| Self::Peony(state)),
      7357 => TallGrassData::from_offset(state - base).map(|state| Self::TallGrass(state)),
      7359 => LargeFernData::from_offset(state - base).map(|state| Self::LargeFern(state)),
      7361 => BannerData::from_offset(state - base).map(|state| Self::WhiteBanner(state)),
      7377 => BannerData::from_offset(state - base).map(|state| Self::OrangeBanner(state)),
      7393 => BannerData::from_offset(state - base).map(|state| Self::MagentaBanner(state)),
      7409 => BannerData::from_offset(state - base).map(|state| Self::LightBlueBanner(state)),
      7425 => BannerData::from_offset(state - base).map(|state| Self::YellowBanner(state)),
      7441 => BannerData::from_offset(state - base).map(|state| Self::LimeBanner(state)),
      7457 => BannerData::from_offset(state - base).map(|state| Self::PinkBanner(state)),
      7473 => BannerData::from_offset(state - base).map(|state| Self::GrayBanner(state)),
      7489 => BannerData::from_offset(state - base).map(|state| Self::LightGrayBanner(state)),
      7505 => BannerData::from_offset(state - base).map(|state| Self::CyanBanner(state)),
      7521 => BannerData::from_offset(state - base).map(|state| Self::PurpleBanner(state)),
      7537 => BannerData::from_offset(state - base).map(|state| Self::BlueBanner(state)),
      7553 => BannerData::from_offset(state - base).map(|state| Self::BrownBanner(state)),
      7569 => BannerData::from_offset(state - base).map(|state| Self::GreenBanner(state)),
      7585 => BannerData::from_offset(state - base).map(|state| Self::RedBanner(state)),
      7601 => BannerData::from_offset(state - base).map(|state| Self::BlackBanner(state)),
      7617 => CardinalData::from_offset(state - base).map(|state| Self::WhiteWallBanner(state)),
      7621 => CardinalData::from_offset(state - base).map(|state| Self::OrangeWallBanner(state)),
      7625 => CardinalData::from_offset(state - base).map(|state| Self::MagentaWallBanner(state)),
      7629 => CardinalData::from_offset(state - base).map(|state| Self::LightBlueWallBanner(state)),
      7633 => CardinalData::from_offset(state - base).map(|state| Self::YellowWallBanner(state)),
      7637 => CardinalData::from_offset(state - base).map(|state| Self::LimeWallBanner(state)),
      7641 => CardinalData::from_offset(state - base).map(|state| Self::PinkWallBanner(state)),
      7645 => CardinalData::from_offset(state - base).map(|state| Self::GrayWallBanner(state)),
      7649 => CardinalData::from_offset(state - base).map(|state| Self::LightGrayWallBanner(state)),
      7653 => CardinalData::from_offset(state - base).map(|state| Self::CyanWallBanner(state)),
      7657 => CardinalData::from_offset(state - base).map(|state| Self::PurpleWallBanner(state)),
      7661 => CardinalData::from_offset(state - base).map(|state| Self::BlueWallBanner(state)),
      7665 => CardinalData::from_offset(state - base).map(|state| Self::BrownWallBanner(state)),
      7669 => CardinalData::from_offset(state - base).map(|state| Self::GreenWallBanner(state)),
      7673 => CardinalData::from_offset(state - base).map(|state| Self::RedWallBanner(state)),
      7677 => CardinalData::from_offset(state - base).map(|state| Self::BlackWallBanner(state)),
      7681 => Some(Self::RedSandstone),
      7682 => Some(Self::ChiseledRedSandstone),
      7683 => Some(Self::CutRedSandstone),
      7684 => StairsData::from_offset(state - base).map(|state| Self::RedSandstoneStairs(state)),
      7764 => SlabData::from_offset(state - base).map(|state| Self::OakSlab(state)),
      7770 => SlabData::from_offset(state - base).map(|state| Self::SpruceSlab(state)),
      7776 => SlabData::from_offset(state - base).map(|state| Self::BirchSlab(state)),
      7782 => SlabData::from_offset(state - base).map(|state| Self::JungleSlab(state)),
      7788 => SlabData::from_offset(state - base).map(|state| Self::AcaciaSlab(state)),
      7794 => SlabData::from_offset(state - base).map(|state| Self::DarkOakSlab(state)),
      7800 => SlabData::from_offset(state - base).map(|state| Self::StoneSlab(state)),
      7806 => SlabData::from_offset(state - base).map(|state| Self::SmoothStoneSlab(state)),
      7812 => SlabData::from_offset(state - base).map(|state| Self::SandstoneSlab(state)),
      7818 => SlabData::from_offset(state - base).map(|state| Self::CutSandstoneSlab(state)),
      7824 => SlabData::from_offset(state - base).map(|state| Self::PetrifiedOakSlab(state)),
      7830 => SlabData::from_offset(state - base).map(|state| Self::CobblestoneSlab(state)),
      7836 => SlabData::from_offset(state - base).map(|state| Self::BrickSlab(state)),
      7842 => SlabData::from_offset(state - base).map(|state| Self::StoneBrickSlab(state)),
      7848 => SlabData::from_offset(state - base).map(|state| Self::NetherBrickSlab(state)),
      7854 => SlabData::from_offset(state - base).map(|state| Self::QuartzSlab(state)),
      7860 => SlabData::from_offset(state - base).map(|state| Self::RedSandstoneSlab(state)),
      7866 => SlabData::from_offset(state - base).map(|state| Self::CutRedSandstoneSlab(state)),
      7872 => SlabData::from_offset(state - base).map(|state| Self::PurpurSlab(state)),
      7878 => Some(Self::SmoothStone),
      7879 => Some(Self::SmoothSandstone),
      7880 => Some(Self::SmoothQuartz),
      7881 => Some(Self::SmoothRedSandstone),
      7882 => FenceGateData::from_offset(state - base).map(|state| Self::SpruceFenceGate(state)),
      7914 => FenceGateData::from_offset(state - base).map(|state| Self::BirchFenceGate(state)),
      7946 => FenceGateData::from_offset(state - base).map(|state| Self::JungleFenceGate(state)),
      7978 => FenceGateData::from_offset(state - base).map(|state| Self::AcaciaFenceGate(state)),
      8010 => FenceGateData::from_offset(state - base).map(|state| Self::DarkOakFenceGate(state)),
      8042 => FenceData::from_offset(state - base).map(|state| Self::SpruceFence(state)),
      8074 => FenceData::from_offset(state - base).map(|state| Self::BirchFence(state)),
      8106 => FenceData::from_offset(state - base).map(|state| Self::JungleFence(state)),
      8138 => FenceData::from_offset(state - base).map(|state| Self::AcaciaFence(state)),
      8170 => FenceData::from_offset(state - base).map(|state| Self::DarkOakFence(state)),
      8202 => DoorData::from_offset(state - base).map(|state| Self::SpruceDoor(state)),
      8266 => DoorData::from_offset(state - base).map(|state| Self::BirchDoor(state)),
      8330 => DoorData::from_offset(state - base).map(|state| Self::JungleDoor(state)),
      8394 => DoorData::from_offset(state - base).map(|state| Self::AcaciaDoor(state)),
      8458 => DoorData::from_offset(state - base).map(|state| Self::DarkOakDoor(state)),
      8522 => BlockFaceData::from_offset(state - base).map(|state| Self::EndRod(state)),
      8528 => ChorusPlantData::from_offset(state - base).map(|state| Self::ChorusPlant(state)),
      8592 => ChorusFlowerData::from_offset(state - base).map(|state| Self::ChorusFlower(state)),
      8598 => Some(Self::PurpurBlock),
      8599 => AxisData::from_offset(state - base).map(|state| Self::PurpurPillar(state)),
      8602 => StairsData::from_offset(state - base).map(|state| Self::PurpurStairs(state)),
      8682 => Some(Self::EndStoneBricks),
      8683 => BeetrootsData::from_offset(state - base).map(|state| Self::Beetroots(state)),
      8687 => Some(Self::GrassPath),
      8688 => Some(Self::EndGateway),
      8689 => CommandBlockData::from_offset(state - base).map(|state| Self::RepeatingCommandBlock(state)),
      8701 => CommandBlockData::from_offset(state - base).map(|state| Self::ChainCommandBlock(state)),
      8713 => FrostedIceData::from_offset(state - base).map(|state| Self::FrostedIce(state)),
      8717 => Some(Self::MagmaBlock),
      8718 => Some(Self::NetherWartBlock),
      8719 => Some(Self::RedNetherBricks),
      8720 => AxisData::from_offset(state - base).map(|state| Self::BoneBlock(state)),
      8723 => Some(Self::StructureVoid),
      8724 => ObserverData::from_offset(state - base).map(|state| Self::Observer(state)),
      8736 => BlockFaceData::from_offset(state - base).map(|state| Self::ShulkerBox(state)),
      8742 => BlockFaceData::from_offset(state - base).map(|state| Self::WhiteShulkerBox(state)),
      8748 => BlockFaceData::from_offset(state - base).map(|state| Self::OrangeShulkerBox(state)),
      8754 => BlockFaceData::from_offset(state - base).map(|state| Self::MagentaShulkerBox(state)),
      8760 => BlockFaceData::from_offset(state - base).map(|state| Self::LightBlueShulkerBox(state)),
      8766 => BlockFaceData::from_offset(state - base).map(|state| Self::YellowShulkerBox(state)),
      8772 => BlockFaceData::from_offset(state - base).map(|state| Self::LimeShulkerBox(state)),
      8778 => BlockFaceData::from_offset(state - base).map(|state| Self::PinkShulkerBox(state)),
      8784 => BlockFaceData::from_offset(state - base).map(|state| Self::GrayShulkerBox(state)),
      8790 => BlockFaceData::from_offset(state - base).map(|state| Self::LightGrayShulkerBox(state)),
      8796 => BlockFaceData::from_offset(state - base).map(|state| Self::CyanShulkerBox(state)),
      8802 => BlockFaceData::from_offset(state - base).map(|state| Self::PurpleShulkerBox(state)),
      8808 => BlockFaceData::from_offset(state - base).map(|state| Self::BlueShulkerBox(state)),
      8814 => BlockFaceData::from_offset(state - base).map(|state| Self::BrownShulkerBox(state)),
      8820 => BlockFaceData::from_offset(state - base).map(|state| Self::GreenShulkerBox(state)),
      8826 => BlockFaceData::from_offset(state - base).map(|state| Self::RedShulkerBox(state)),
      8832 => BlockFaceData::from_offset(state - base).map(|state| Self::BlackShulkerBox(state)),
      8838 => CardinalData::from_offset(state - base).map(|state| Self::WhiteGlazedTerracotta(state)),
      8842 => CardinalData::from_offset(state - base).map(|state| Self::OrangeGlazedTerracotta(state)),
      8846 => CardinalData::from_offset(state - base).map(|state| Self::MagentaGlazedTerracotta(state)),
      8850 => CardinalData::from_offset(state - base).map(|state| Self::LightBlueGlazedTerracotta(state)),
      8854 => CardinalData::from_offset(state - base).map(|state| Self::YellowGlazedTerracotta(state)),
      8858 => CardinalData::from_offset(state - base).map(|state| Self::LimeGlazedTerracotta(state)),
      8862 => CardinalData::from_offset(state - base).map(|state| Self::PinkGlazedTerracotta(state)),
      8866 => CardinalData::from_offset(state - base).map(|state| Self::GrayGlazedTerracotta(state)),
      8870 => CardinalData::from_offset(state - base).map(|state| Self::LightGrayGlazedTerracotta(state)),
      8874 => CardinalData::from_offset(state - base).map(|state| Self::CyanGlazedTerracotta(state)),
      8878 => CardinalData::from_offset(state - base).map(|state| Self::PurpleGlazedTerracotta(state)),
      8882 => CardinalData::from_offset(state - base).map(|state| Self::BlueGlazedTerracotta(state)),
      8886 => CardinalData::from_offset(state - base).map(|state| Self::BrownGlazedTerracotta(state)),
      8890 => CardinalData::from_offset(state - base).map(|state| Self::GreenGlazedTerracotta(state)),
      8894 => CardinalData::from_offset(state - base).map(|state| Self::RedGlazedTerracotta(state)),
      8898 => CardinalData::from_offset(state - base).map(|state| Self::BlackGlazedTerracotta(state)),
      8902 => Some(Self::WhiteConcrete),
      8903 => Some(Self::OrangeConcrete),
      8904 => Some(Self::MagentaConcrete),
      8905 => Some(Self::LightBlueConcrete),
      8906 => Some(Self::YellowConcrete),
      8907 => Some(Self::LimeConcrete),
      8908 => Some(Self::PinkConcrete),
      8909 => Some(Self::GrayConcrete),
      8910 => Some(Self::LightGrayConcrete),
      8911 => Some(Self::CyanConcrete),
      8912 => Some(Self::PurpleConcrete),
      8913 => Some(Self::BlueConcrete),
      8914 => Some(Self::BrownConcrete),
      8915 => Some(Self::GreenConcrete),
      8916 => Some(Self::RedConcrete),
      8917 => Some(Self::BlackConcrete),
      8918 => Some(Self::WhiteConcretePowder),
      8919 => Some(Self::OrangeConcretePowder),
      8920 => Some(Self::MagentaConcretePowder),
      8921 => Some(Self::LightBlueConcretePowder),
      8922 => Some(Self::YellowConcretePowder),
      8923 => Some(Self::LimeConcretePowder),
      8924 => Some(Self::PinkConcretePowder),
      8925 => Some(Self::GrayConcretePowder),
      8926 => Some(Self::LightGrayConcretePowder),
      8927 => Some(Self::CyanConcretePowder),
      8928 => Some(Self::PurpleConcretePowder),
      8929 => Some(Self::BlueConcretePowder),
      8930 => Some(Self::BrownConcretePowder),
      8931 => Some(Self::GreenConcretePowder),
      8932 => Some(Self::RedConcretePowder),
      8933 => Some(Self::BlackConcretePowder),
      8934 => KelpData::from_offset(state - base).map(|state| Self::Kelp(state)),
      8960 => Some(Self::KelpPlant),
      8961 => Some(Self::DriedKelpBlock),
      8962 => TurtleEggData::from_offset(state - base).map(|state| Self::TurtleEgg(state)),
      8974 => Some(Self::DeadTubeCoralBlock),
      8975 => Some(Self::DeadBrainCoralBlock),
      8976 => Some(Self::DeadBubbleCoralBlock),
      8977 => Some(Self::DeadFireCoralBlock),
      8978 => Some(Self::DeadHornCoralBlock),
      8979 => Some(Self::TubeCoralBlock),
      8980 => Some(Self::BrainCoralBlock),
      8981 => Some(Self::BubbleCoralBlock),
      8982 => Some(Self::FireCoralBlock),
      8983 => Some(Self::HornCoralBlock),
      8984 => WaterloggedData::from_offset(state - base).map(|state| Self::DeadTubeCoral(state)),
      8986 => WaterloggedData::from_offset(state - base).map(|state| Self::DeadBrainCoral(state)),
      8988 => WaterloggedData::from_offset(state - base).map(|state| Self::DeadBubbleCoral(state)),
      8990 => WaterloggedData::from_offset(state - base).map(|state| Self::DeadFireCoral(state)),
      8992 => WaterloggedData::from_offset(state - base).map(|state| Self::DeadHornCoral(state)),
      8994 => WaterloggedData::from_offset(state - base).map(|state| Self::TubeCoral(state)),
      8996 => WaterloggedData::from_offset(state - base).map(|state| Self::BrainCoral(state)),
      8998 => WaterloggedData::from_offset(state - base).map(|state| Self::BubbleCoral(state)),
      9000 => WaterloggedData::from_offset(state - base).map(|state| Self::FireCoral(state)),
      9002 => WaterloggedData::from_offset(state - base).map(|state| Self::HornCoral(state)),
      9004 => WaterloggedData::from_offset(state - base).map(|state| Self::DeadTubeCoralFan(state)),
      9006 => WaterloggedData::from_offset(state - base).map(|state| Self::DeadBrainCoralFan(state)),
      9008 => WaterloggedData::from_offset(state - base).map(|state| Self::DeadBubbleCoralFan(state)),
      9010 => WaterloggedData::from_offset(state - base).map(|state| Self::DeadFireCoralFan(state)),
      9012 => WaterloggedData::from_offset(state - base).map(|state| Self::DeadHornCoralFan(state)),
      9014 => WaterloggedData::from_offset(state - base).map(|state| Self::TubeCoralFan(state)),
      9016 => WaterloggedData::from_offset(state - base).map(|state| Self::BrainCoralFan(state)),
      9018 => WaterloggedData::from_offset(state - base).map(|state| Self::BubbleCoralFan(state)),
      9020 => WaterloggedData::from_offset(state - base).map(|state| Self::FireCoralFan(state)),
      9022 => WaterloggedData::from_offset(state - base).map(|state| Self::HornCoralFan(state)),
      9024 => CoralWallFanData::from_offset(state - base).map(|state| Self::DeadTubeCoralWallFan(state)),
      9032 => CoralWallFanData::from_offset(state - base).map(|state| Self::DeadBrainCoralWallFan(state)),
      9040 => CoralWallFanData::from_offset(state - base).map(|state| Self::DeadBubbleCoralWallFan(state)),
      9048 => CoralWallFanData::from_offset(state - base).map(|state| Self::DeadFireCoralWallFan(state)),
      9056 => CoralWallFanData::from_offset(state - base).map(|state| Self::DeadHornCoralWallFan(state)),
      9064 => CoralWallFanData::from_offset(state - base).map(|state| Self::TubeCoralWallFan(state)),
      9072 => CoralWallFanData::from_offset(state - base).map(|state| Self::BrainCoralWallFan(state)),
      9080 => CoralWallFanData::from_offset(state - base).map(|state| Self::BubbleCoralWallFan(state)),
      9088 => CoralWallFanData::from_offset(state - base).map(|state| Self::FireCoralWallFan(state)),
      9096 => CoralWallFanData::from_offset(state - base).map(|state| Self::HornCoralWallFan(state)),
      9104 => SeaPickleData::from_offset(state - base).map(|state| Self::SeaPickle(state)),
      9112 => Some(Self::BlueIce),
      9113 => WaterloggedData::from_offset(state - base).map(|state| Self::Conduit(state)),
      9115 => Some(Self::BambooSapling),
      9116 => BambooData::from_offset(state - base).map(|state| Self::Bamboo(state)),
      9128 => Some(Self::PottedBamboo),
      9129 => Some(Self::VoidAir),
      9130 => Some(Self::CaveAir),
      9131 => BubbleColumnData::from_offset(state - base).map(|state| Self::BubbleColumn(state)),
      9133 => StairsData::from_offset(state - base).map(|state| Self::PolishedGraniteStairs(state)),
      9213 => StairsData::from_offset(state - base).map(|state| Self::SmoothRedSandstoneStairs(state)),
      9293 => StairsData::from_offset(state - base).map(|state| Self::MossyStoneBrickStairs(state)),
      9373 => StairsData::from_offset(state - base).map(|state| Self::PolishedDioriteStairs(state)),
      9453 => StairsData::from_offset(state - base).map(|state| Self::MossyCobblestoneStairs(state)),
      9533 => StairsData::from_offset(state - base).map(|state| Self::EndStoneBrickStairs(state)),
      9613 => StairsData::from_offset(state - base).map(|state| Self::StoneStairs(state)),
      9693 => StairsData::from_offset(state - base).map(|state| Self::SmoothSandstoneStairs(state)),
      9773 => StairsData::from_offset(state - base).map(|state| Self::SmoothQuartzStairs(state)),
      9853 => StairsData::from_offset(state - base).map(|state| Self::GraniteStairs(state)),
      9933 => StairsData::from_offset(state - base).map(|state| Self::AndesiteStairs(state)),
      10013 => StairsData::from_offset(state - base).map(|state| Self::RedNetherBrickStairs(state)),
      10093 => StairsData::from_offset(state - base).map(|state| Self::PolishedAndesiteStairs(state)),
      10173 => StairsData::from_offset(state - base).map(|state| Self::DioriteStairs(state)),
      10253 => SlabData::from_offset(state - base).map(|state| Self::PolishedGraniteSlab(state)),
      10259 => SlabData::from_offset(state - base).map(|state| Self::SmoothRedSandstoneSlab(state)),
      10265 => SlabData::from_offset(state - base).map(|state| Self::MossyStoneBrickSlab(state)),
      10271 => SlabData::from_offset(state - base).map(|state| Self::PolishedDioriteSlab(state)),
      10277 => SlabData::from_offset(state - base).map(|state| Self::MossyCobblestoneSlab(state)),
      10283 => SlabData::from_offset(state - base).map(|state| Self::EndStoneBrickSlab(state)),
      10289 => SlabData::from_offset(state - base).map(|state| Self::SmoothSandstoneSlab(state)),
      10295 => SlabData::from_offset(state - base).map(|state| Self::SmoothQuartzSlab(state)),
      10301 => SlabData::from_offset(state - base).map(|state| Self::GraniteSlab(state)),
      10307 => SlabData::from_offset(state - base).map(|state| Self::AndesiteSlab(state)),
      10313 => SlabData::from_offset(state - base).map(|state| Self::RedNetherBrickSlab(state)),
      10319 => SlabData::from_offset(state - base).map(|state| Self::PolishedAndesiteSlab(state)),
      10325 => SlabData::from_offset(state - base).map(|state| Self::DioriteSlab(state)),
      10331 => WallData::from_offset(state - base).map(|state| Self::BrickWall(state)),
      10395 => WallData::from_offset(state - base).map(|state| Self::PrismarineWall(state)),
      10459 => WallData::from_offset(state - base).map(|state| Self::RedSandstoneWall(state)),
      10523 => WallData::from_offset(state - base).map(|state| Self::MossyStoneBrickWall(state)),
      10587 => WallData::from_offset(state - base).map(|state| Self::GraniteWall(state)),
      10651 => WallData::from_offset(state - base).map(|state| Self::StoneBrickWall(state)),
      10715 => WallData::from_offset(state - base).map(|state| Self::NetherBrickWall(state)),
      10779 => WallData::from_offset(state - base).map(|state| Self::AndesiteWall(state)),
      10843 => WallData::from_offset(state - base).map(|state| Self::RedNetherBrickWall(state)),
      10907 => WallData::from_offset(state - base).map(|state| Self::SandstoneWall(state)),
      10971 => WallData::from_offset(state - base).map(|state| Self::EndStoneBrickWall(state)),
      11035 => WallData::from_offset(state - base).map(|state| Self::DioriteWall(state)),
      11099 => ScaffoldingData::from_offset(state - base).map(|state| Self::Scaffolding(state)),
      11131 => CardinalData::from_offset(state - base).map(|state| Self::Loom(state)),
      11135 => BarrelData::from_offset(state - base).map(|state| Self::Barrel(state)),
      11147 => CardinalLightableData::from_offset(state - base).map(|state| Self::Smoker(state)),
      11155 => CardinalLightableData::from_offset(state - base).map(|state| Self::BlastFurnace(state)),
      11163 => Some(Self::CartographyTable),
      11164 => Some(Self::FletchingTable),
      11165 => GrindstoneData::from_offset(state - base).map(|state| Self::Grindstone(state)),
      11177 => LecternData::from_offset(state - base).map(|state| Self::Lectern(state)),
      11193 => Some(Self::SmithingTable),
      11194 => CardinalData::from_offset(state - base).map(|state| Self::Stonecutter(state)),
      11198 => BellData::from_offset(state - base).map(|state| Self::Bell(state)),
      11230 => LanternData::from_offset(state - base).map(|state| Self::Lantern(state)),
      11232 => CampfireData::from_offset(state - base).map(|state| Self::Campfire(state)),
      11264 => SweetBerryBushData::from_offset(state - base).map(|state| Self::SweetBerryBush(state)),
      11268 => StructureBlockData::from_offset(state - base).map(|state| Self::StructureBlock(state)),
      11272 => BlockFaceData::from_offset(state - base).map(|state| Self::Jigsaw(state)),
      11278 => ComposterData::from_offset(state - base).map(|state| Self::Composter(state)),
      11287 => BeeNestData::from_offset(state - base).map(|state| Self::BeeNest(state)),
      11311 => BeehiveData::from_offset(state - base).map(|state| Self::Beehive(state)),
      11335 => Some(Self::HoneyBlock),
      11336 => Some(Self::HoneycombBlock),
      _ => None,
    }
  }
  /// Converts this Block back to its state id
  pub fn to_state(self) -> usize {
    match self {
      Self::Air => 0,
      Self::Stone => 1,
      Self::Granite => 2,
      Self::PolishedGranite => 3,
      Self::Diorite => 4,
      Self::PolishedDiorite => 5,
      Self::Andesite => 6,
      Self::PolishedAndesite => 7,
      Self::GrassBlock(s) => 8 + s.to_offset(),
      Self::Dirt => 10,
      Self::CoarseDirt => 11,
      Self::Podzol(s) => 12 + s.to_offset(),
      Self::Cobblestone => 14,
      Self::OakPlanks => 15,
      Self::SprucePlanks => 16,
      Self::BirchPlanks => 17,
      Self::JunglePlanks => 18,
      Self::AcaciaPlanks => 19,
      Self::DarkOakPlanks => 20,
      Self::OakSapling(s) => 21 + s.to_offset(),
      Self::SpruceSapling(s) => 23 + s.to_offset(),
      Self::BirchSapling(s) => 25 + s.to_offset(),
      Self::JungleSapling(s) => 27 + s.to_offset(),
      Self::AcaciaSapling(s) => 29 + s.to_offset(),
      Self::DarkOakSapling(s) => 31 + s.to_offset(),
      Self::Bedrock => 33,
      Self::Water(s) => 34 + s.to_offset(),
      Self::Lava(s) => 50 + s.to_offset(),
      Self::Sand => 66,
      Self::RedSand => 67,
      Self::Gravel => 68,
      Self::GoldOre => 69,
      Self::IronOre => 70,
      Self::CoalOre => 71,
      Self::OakLog(s) => 72 + s.to_offset(),
      Self::SpruceLog(s) => 75 + s.to_offset(),
      Self::BirchLog(s) => 78 + s.to_offset(),
      Self::JungleLog(s) => 81 + s.to_offset(),
      Self::AcaciaLog(s) => 84 + s.to_offset(),
      Self::DarkOakLog(s) => 87 + s.to_offset(),
      Self::StrippedSpruceLog(s) => 90 + s.to_offset(),
      Self::StrippedBirchLog(s) => 93 + s.to_offset(),
      Self::StrippedJungleLog(s) => 96 + s.to_offset(),
      Self::StrippedAcaciaLog(s) => 99 + s.to_offset(),
      Self::StrippedDarkOakLog(s) => 102 + s.to_offset(),
      Self::StrippedOakLog(s) => 105 + s.to_offset(),
      Self::OakWood(s) => 108 + s.to_offset(),
      Self::SpruceWood(s) => 111 + s.to_offset(),
      Self::BirchWood(s) => 114 + s.to_offset(),
      Self::JungleWood(s) => 117 + s.to_offset(),
      Self::AcaciaWood(s) => 120 + s.to_offset(),
      Self::DarkOakWood(s) => 123 + s.to_offset(),
      Self::StrippedOakWood(s) => 126 + s.to_offset(),
      Self::StrippedSpruceWood(s) => 129 + s.to_offset(),
      Self::StrippedBirchWood(s) => 132 + s.to_offset(),
      Self::StrippedJungleWood(s) => 135 + s.to_offset(),
      Self::StrippedAcaciaWood(s) => 138 + s.to_offset(),
      Self::StrippedDarkOakWood(s) => 141 + s.to_offset(),
      Self::OakLeaves(s) => 144 + s.to_offset(),
      Self::SpruceLeaves(s) => 158 + s.to_offset(),
      Self::BirchLeaves(s) => 172 + s.to_offset(),
      Self::JungleLeaves(s) => 186 + s.to_offset(),
      Self::AcaciaLeaves(s) => 200 + s.to_offset(),
      Self::DarkOakLeaves(s) => 214 + s.to_offset(),
      Self::Sponge => 228,
      Self::WetSponge => 229,
      Self::Glass => 230,
      Self::LapisOre => 231,
      Self::LapisBlock => 232,
      Self::Dispenser(s) => 233 + s.to_offset(),
      Self::Sandstone => 245,
      Self::ChiseledSandstone => 246,
      Self::CutSandstone => 247,
      Self::NoteBlock(s) => 248 + s.to_offset(),
      Self::WhiteBed(s) => 1048 + s.to_offset(),
      Self::OrangeBed(s) => 1064 + s.to_offset(),
      Self::MagentaBed(s) => 1080 + s.to_offset(),
      Self::LightBlueBed(s) => 1096 + s.to_offset(),
      Self::YellowBed(s) => 1112 + s.to_offset(),
      Self::LimeBed(s) => 1128 + s.to_offset(),
      Self::PinkBed(s) => 1144 + s.to_offset(),
      Self::GrayBed(s) => 1160 + s.to_offset(),
      Self::LightGrayBed(s) => 1176 + s.to_offset(),
      Self::CyanBed(s) => 1192 + s.to_offset(),
      Self::PurpleBed(s) => 1208 + s.to_offset(),
      Self::BlueBed(s) => 1224 + s.to_offset(),
      Self::BrownBed(s) => 1240 + s.to_offset(),
      Self::GreenBed(s) => 1256 + s.to_offset(),
      Self::RedBed(s) => 1272 + s.to_offset(),
      Self::BlackBed(s) => 1288 + s.to_offset(),
      Self::PoweredRail(s) => 1304 + s.to_offset(),
      Self::DetectorRail(s) => 1316 + s.to_offset(),
      Self::StickyPiston(s) => 1328 + s.to_offset(),
      Self::Cobweb => 1340,
      Self::Grass => 1341,
      Self::Fern => 1342,
      Self::DeadBush => 1343,
      Self::Seagrass => 1344,
      Self::TallSeagrass(s) => 1345 + s.to_offset(),
      Self::Piston(s) => 1347 + s.to_offset(),
      Self::PistonHead(s) => 1359 + s.to_offset(),
      Self::WhiteWool => 1383,
      Self::OrangeWool => 1384,
      Self::MagentaWool => 1385,
      Self::LightBlueWool => 1386,
      Self::YellowWool => 1387,
      Self::LimeWool => 1388,
      Self::PinkWool => 1389,
      Self::GrayWool => 1390,
      Self::LightGrayWool => 1391,
      Self::CyanWool => 1392,
      Self::PurpleWool => 1393,
      Self::BlueWool => 1394,
      Self::BrownWool => 1395,
      Self::GreenWool => 1396,
      Self::RedWool => 1397,
      Self::BlackWool => 1398,
      Self::MovingPiston(s) => 1399 + s.to_offset(),
      Self::Dandelion => 1411,
      Self::Poppy => 1412,
      Self::BlueOrchid => 1413,
      Self::Allium => 1414,
      Self::AzureBluet => 1415,
      Self::RedTulip => 1416,
      Self::OrangeTulip => 1417,
      Self::WhiteTulip => 1418,
      Self::PinkTulip => 1419,
      Self::OxeyeDaisy => 1420,
      Self::Cornflower => 1421,
      Self::WitherRose => 1422,
      Self::LilyOfTheValley => 1423,
      Self::BrownMushroom => 1424,
      Self::RedMushroom => 1425,
      Self::GoldBlock => 1426,
      Self::IronBlock => 1427,
      Self::Bricks => 1428,
      Self::Tnt(s) => 1429 + s.to_offset(),
      Self::Bookshelf => 1431,
      Self::MossyCobblestone => 1432,
      Self::Obsidian => 1433,
      Self::Torch => 1434,
      Self::WallTorch(s) => 1435 + s.to_offset(),
      Self::Fire(s) => 1439 + s.to_offset(),
      Self::Spawner => 1951,
      Self::OakStairs(s) => 1952 + s.to_offset(),
      Self::Chest(s) => 2032 + s.to_offset(),
      Self::RedstoneWire(s) => 2056 + s.to_offset(),
      Self::DiamondOre => 3352,
      Self::DiamondBlock => 3353,
      Self::CraftingTable => 3354,
      Self::Wheat(s) => 3355 + s.to_offset(),
      Self::Farmland(s) => 3363 + s.to_offset(),
      Self::Furnace(s) => 3371 + s.to_offset(),
      Self::OakSign(s) => 3379 + s.to_offset(),
      Self::SpruceSign(s) => 3411 + s.to_offset(),
      Self::BirchSign(s) => 3443 + s.to_offset(),
      Self::AcaciaSign(s) => 3475 + s.to_offset(),
      Self::JungleSign(s) => 3507 + s.to_offset(),
      Self::DarkOakSign(s) => 3539 + s.to_offset(),
      Self::OakDoor(s) => 3571 + s.to_offset(),
      Self::Ladder(s) => 3635 + s.to_offset(),
      Self::Rail(s) => 3643 + s.to_offset(),
      Self::CobblestoneStairs(s) => 3653 + s.to_offset(),
      Self::OakWallSign(s) => 3733 + s.to_offset(),
      Self::SpruceWallSign(s) => 3741 + s.to_offset(),
      Self::BirchWallSign(s) => 3749 + s.to_offset(),
      Self::AcaciaWallSign(s) => 3757 + s.to_offset(),
      Self::JungleWallSign(s) => 3765 + s.to_offset(),
      Self::DarkOakWallSign(s) => 3773 + s.to_offset(),
      Self::Lever(s) => 3781 + s.to_offset(),
      Self::StonePressurePlate(s) => 3805 + s.to_offset(),
      Self::IronDoor(s) => 3807 + s.to_offset(),
      Self::OakPressurePlate(s) => 3871 + s.to_offset(),
      Self::SprucePressurePlate(s) => 3873 + s.to_offset(),
      Self::BirchPressurePlate(s) => 3875 + s.to_offset(),
      Self::JunglePressurePlate(s) => 3877 + s.to_offset(),
      Self::AcaciaPressurePlate(s) => 3879 + s.to_offset(),
      Self::DarkOakPressurePlate(s) => 3881 + s.to_offset(),
      Self::RedstoneOre(s) => 3883 + s.to_offset(),
      Self::RedstoneTorch(s) => 3885 + s.to_offset(),
      Self::RedstoneWallTorch(s) => 3887 + s.to_offset(),
      Self::StoneButton(s) => 3895 + s.to_offset(),
      Self::Snow(s) => 3919 + s.to_offset(),
      Self::Ice => 3927,
      Self::SnowBlock => 3928,
      Self::Cactus(s) => 3929 + s.to_offset(),
      Self::Clay => 3945,
      Self::SugarCane(s) => 3946 + s.to_offset(),
      Self::Jukebox(s) => 3962 + s.to_offset(),
      Self::OakFence(s) => 3964 + s.to_offset(),
      Self::Pumpkin => 3996,
      Self::Netherrack => 3997,
      Self::SoulSand => 3998,
      Self::Glowstone => 3999,
      Self::NetherPortal(s) => 4000 + s.to_offset(),
      Self::CarvedPumpkin(s) => 4002 + s.to_offset(),
      Self::JackOLantern(s) => 4006 + s.to_offset(),
      Self::Cake(s) => 4010 + s.to_offset(),
      Self::Repeater(s) => 4017 + s.to_offset(),
      Self::WhiteStainedGlass => 4081,
      Self::OrangeStainedGlass => 4082,
      Self::MagentaStainedGlass => 4083,
      Self::LightBlueStainedGlass => 4084,
      Self::YellowStainedGlass => 4085,
      Self::LimeStainedGlass => 4086,
      Self::PinkStainedGlass => 4087,
      Self::GrayStainedGlass => 4088,
      Self::LightGrayStainedGlass => 4089,
      Self::CyanStainedGlass => 4090,
      Self::PurpleStainedGlass => 4091,
      Self::BlueStainedGlass => 4092,
      Self::BrownStainedGlass => 4093,
      Self::GreenStainedGlass => 4094,
      Self::RedStainedGlass => 4095,
      Self::BlackStainedGlass => 4096,
      Self::OakTrapdoor(s) => 4097 + s.to_offset(),
      Self::SpruceTrapdoor(s) => 4161 + s.to_offset(),
      Self::BirchTrapdoor(s) => 4225 + s.to_offset(),
      Self::JungleTrapdoor(s) => 4289 + s.to_offset(),
      Self::AcaciaTrapdoor(s) => 4353 + s.to_offset(),
      Self::DarkOakTrapdoor(s) => 4417 + s.to_offset(),
      Self::StoneBricks => 4481,
      Self::MossyStoneBricks => 4482,
      Self::CrackedStoneBricks => 4483,
      Self::ChiseledStoneBricks => 4484,
      Self::InfestedStone => 4485,
      Self::InfestedCobblestone => 4486,
      Self::InfestedStoneBricks => 4487,
      Self::InfestedMossyStoneBricks => 4488,
      Self::InfestedCrackedStoneBricks => 4489,
      Self::InfestedChiseledStoneBricks => 4490,
      Self::BrownMushroomBlock(s) => 4491 + s.to_offset(),
      Self::RedMushroomBlock(s) => 4555 + s.to_offset(),
      Self::MushroomStem(s) => 4619 + s.to_offset(),
      Self::IronBars(s) => 4683 + s.to_offset(),
      Self::GlassPane(s) => 4715 + s.to_offset(),
      Self::Melon => 4747,
      Self::AttachedPumpkinStem(s) => 4748 + s.to_offset(),
      Self::AttachedMelonStem(s) => 4752 + s.to_offset(),
      Self::PumpkinStem(s) => 4756 + s.to_offset(),
      Self::MelonStem(s) => 4764 + s.to_offset(),
      Self::Vine(s) => 4772 + s.to_offset(),
      Self::OakFenceGate(s) => 4804 + s.to_offset(),
      Self::BrickStairs(s) => 4836 + s.to_offset(),
      Self::StoneBrickStairs(s) => 4916 + s.to_offset(),
      Self::Mycelium(s) => 4996 + s.to_offset(),
      Self::LilyPad => 4998,
      Self::NetherBricks => 4999,
      Self::NetherBrickFence(s) => 5000 + s.to_offset(),
      Self::NetherBrickStairs(s) => 5032 + s.to_offset(),
      Self::NetherWart(s) => 5112 + s.to_offset(),
      Self::EnchantingTable => 5116,
      Self::BrewingStand(s) => 5117 + s.to_offset(),
      Self::Cauldron(s) => 5125 + s.to_offset(),
      Self::EndPortal => 5129,
      Self::EndPortalFrame(s) => 5130 + s.to_offset(),
      Self::EndStone => 5138,
      Self::DragonEgg => 5139,
      Self::RedstoneLamp(s) => 5140 + s.to_offset(),
      Self::Cocoa(s) => 5142 + s.to_offset(),
      Self::SandstoneStairs(s) => 5154 + s.to_offset(),
      Self::EmeraldOre => 5234,
      Self::EnderChest(s) => 5235 + s.to_offset(),
      Self::TripwireHook(s) => 5243 + s.to_offset(),
      Self::Tripwire(s) => 5259 + s.to_offset(),
      Self::EmeraldBlock => 5387,
      Self::SpruceStairs(s) => 5388 + s.to_offset(),
      Self::BirchStairs(s) => 5468 + s.to_offset(),
      Self::JungleStairs(s) => 5548 + s.to_offset(),
      Self::CommandBlock(s) => 5628 + s.to_offset(),
      Self::Beacon => 5640,
      Self::CobblestoneWall(s) => 5641 + s.to_offset(),
      Self::MossyCobblestoneWall(s) => 5705 + s.to_offset(),
      Self::FlowerPot => 5769,
      Self::PottedOakSapling => 5770,
      Self::PottedSpruceSapling => 5771,
      Self::PottedBirchSapling => 5772,
      Self::PottedJungleSapling => 5773,
      Self::PottedAcaciaSapling => 5774,
      Self::PottedDarkOakSapling => 5775,
      Self::PottedFern => 5776,
      Self::PottedDandelion => 5777,
      Self::PottedPoppy => 5778,
      Self::PottedBlueOrchid => 5779,
      Self::PottedAllium => 5780,
      Self::PottedAzureBluet => 5781,
      Self::PottedRedTulip => 5782,
      Self::PottedOrangeTulip => 5783,
      Self::PottedWhiteTulip => 5784,
      Self::PottedPinkTulip => 5785,
      Self::PottedOxeyeDaisy => 5786,
      Self::PottedCornflower => 5787,
      Self::PottedLilyOfTheValley => 5788,
      Self::PottedWitherRose => 5789,
      Self::PottedRedMushroom => 5790,
      Self::PottedBrownMushroom => 5791,
      Self::PottedDeadBush => 5792,
      Self::PottedCactus => 5793,
      Self::Carrots(s) => 5794 + s.to_offset(),
      Self::Potatoes(s) => 5802 + s.to_offset(),
      Self::OakButton(s) => 5810 + s.to_offset(),
      Self::SpruceButton(s) => 5834 + s.to_offset(),
      Self::BirchButton(s) => 5858 + s.to_offset(),
      Self::JungleButton(s) => 5882 + s.to_offset(),
      Self::AcaciaButton(s) => 5906 + s.to_offset(),
      Self::DarkOakButton(s) => 5930 + s.to_offset(),
      Self::SkeletonSkull(s) => 5954 + s.to_offset(),
      Self::SkeletonWallSkull(s) => 5970 + s.to_offset(),
      Self::WitherSkeletonSkull(s) => 5974 + s.to_offset(),
      Self::WitherSkeletonWallSkull(s) => 5990 + s.to_offset(),
      Self::ZombieHead(s) => 5994 + s.to_offset(),
      Self::ZombieWallHead(s) => 6010 + s.to_offset(),
      Self::PlayerHead(s) => 6014 + s.to_offset(),
      Self::PlayerWallHead(s) => 6030 + s.to_offset(),
      Self::CreeperHead(s) => 6034 + s.to_offset(),
      Self::CreeperWallHead(s) => 6050 + s.to_offset(),
      Self::DragonHead(s) => 6054 + s.to_offset(),
      Self::DragonWallHead(s) => 6070 + s.to_offset(),
      Self::Anvil(s) => 6074 + s.to_offset(),
      Self::ChippedAnvil(s) => 6078 + s.to_offset(),
      Self::DamagedAnvil(s) => 6082 + s.to_offset(),
      Self::TrappedChest(s) => 6086 + s.to_offset(),
      Self::LightWeightedPressurePlate(s) => 6110 + s.to_offset(),
      Self::HeavyWeightedPressurePlate(s) => 6126 + s.to_offset(),
      Self::Comparator(s) => 6142 + s.to_offset(),
      Self::DaylightDetector(s) => 6158 + s.to_offset(),
      Self::RedstoneBlock => 6190,
      Self::NetherQuartzOre => 6191,
      Self::Hopper(s) => 6192 + s.to_offset(),
      Self::QuartzBlock => 6202,
      Self::ChiseledQuartzBlock => 6203,
      Self::QuartzPillar(s) => 6204 + s.to_offset(),
      Self::QuartzStairs(s) => 6207 + s.to_offset(),
      Self::ActivatorRail(s) => 6287 + s.to_offset(),
      Self::Dropper(s) => 6299 + s.to_offset(),
      Self::WhiteTerracotta => 6311,
      Self::OrangeTerracotta => 6312,
      Self::MagentaTerracotta => 6313,
      Self::LightBlueTerracotta => 6314,
      Self::YellowTerracotta => 6315,
      Self::LimeTerracotta => 6316,
      Self::PinkTerracotta => 6317,
      Self::GrayTerracotta => 6318,
      Self::LightGrayTerracotta => 6319,
      Self::CyanTerracotta => 6320,
      Self::PurpleTerracotta => 6321,
      Self::BlueTerracotta => 6322,
      Self::BrownTerracotta => 6323,
      Self::GreenTerracotta => 6324,
      Self::RedTerracotta => 6325,
      Self::BlackTerracotta => 6326,
      Self::WhiteStainedGlassPane(s) => 6327 + s.to_offset(),
      Self::OrangeStainedGlassPane(s) => 6359 + s.to_offset(),
      Self::MagentaStainedGlassPane(s) => 6391 + s.to_offset(),
      Self::LightBlueStainedGlassPane(s) => 6423 + s.to_offset(),
      Self::YellowStainedGlassPane(s) => 6455 + s.to_offset(),
      Self::LimeStainedGlassPane(s) => 6487 + s.to_offset(),
      Self::PinkStainedGlassPane(s) => 6519 + s.to_offset(),
      Self::GrayStainedGlassPane(s) => 6551 + s.to_offset(),
      Self::LightGrayStainedGlassPane(s) => 6583 + s.to_offset(),
      Self::CyanStainedGlassPane(s) => 6615 + s.to_offset(),
      Self::PurpleStainedGlassPane(s) => 6647 + s.to_offset(),
      Self::BlueStainedGlassPane(s) => 6679 + s.to_offset(),
      Self::BrownStainedGlassPane(s) => 6711 + s.to_offset(),
      Self::GreenStainedGlassPane(s) => 6743 + s.to_offset(),
      Self::RedStainedGlassPane(s) => 6775 + s.to_offset(),
      Self::BlackStainedGlassPane(s) => 6807 + s.to_offset(),
      Self::AcaciaStairs(s) => 6839 + s.to_offset(),
      Self::DarkOakStairs(s) => 6919 + s.to_offset(),
      Self::SlimeBlock => 6999,
      Self::Barrier => 7000,
      Self::IronTrapdoor(s) => 7001 + s.to_offset(),
      Self::Prismarine => 7065,
      Self::PrismarineBricks => 7066,
      Self::DarkPrismarine => 7067,
      Self::PrismarineStairs(s) => 7068 + s.to_offset(),
      Self::PrismarineBrickStairs(s) => 7148 + s.to_offset(),
      Self::DarkPrismarineStairs(s) => 7228 + s.to_offset(),
      Self::PrismarineSlab(s) => 7308 + s.to_offset(),
      Self::PrismarineBrickSlab(s) => 7314 + s.to_offset(),
      Self::DarkPrismarineSlab(s) => 7320 + s.to_offset(),
      Self::SeaLantern => 7326,
      Self::HayBlock(s) => 7327 + s.to_offset(),
      Self::WhiteCarpet => 7330,
      Self::OrangeCarpet => 7331,
      Self::MagentaCarpet => 7332,
      Self::LightBlueCarpet => 7333,
      Self::YellowCarpet => 7334,
      Self::LimeCarpet => 7335,
      Self::PinkCarpet => 7336,
      Self::GrayCarpet => 7337,
      Self::LightGrayCarpet => 7338,
      Self::CyanCarpet => 7339,
      Self::PurpleCarpet => 7340,
      Self::BlueCarpet => 7341,
      Self::BrownCarpet => 7342,
      Self::GreenCarpet => 7343,
      Self::RedCarpet => 7344,
      Self::BlackCarpet => 7345,
      Self::Terracotta => 7346,
      Self::CoalBlock => 7347,
      Self::PackedIce => 7348,
      Self::Sunflower(s) => 7349 + s.to_offset(),
      Self::Lilac(s) => 7351 + s.to_offset(),
      Self::RoseBush(s) => 7353 + s.to_offset(),
      Self::Peony(s) => 7355 + s.to_offset(),
      Self::TallGrass(s) => 7357 + s.to_offset(),
      Self::LargeFern(s) => 7359 + s.to_offset(),
      Self::WhiteBanner(s) => 7361 + s.to_offset(),
      Self::OrangeBanner(s) => 7377 + s.to_offset(),
      Self::MagentaBanner(s) => 7393 + s.to_offset(),
      Self::LightBlueBanner(s) => 7409 + s.to_offset(),
      Self::YellowBanner(s) => 7425 + s.to_offset(),
      Self::LimeBanner(s) => 7441 + s.to_offset(),
      Self::PinkBanner(s) => 7457 + s.to_offset(),
      Self::GrayBanner(s) => 7473 + s.to_offset(),
      Self::LightGrayBanner(s) => 7489 + s.to_offset(),
      Self::CyanBanner(s) => 7505 + s.to_offset(),
      Self::PurpleBanner(s) => 7521 + s.to_offset(),
      Self::BlueBanner(s) => 7537 + s.to_offset(),
      Self::BrownBanner(s) => 7553 + s.to_offset(),
      Self::GreenBanner(s) => 7569 + s.to_offset(),
      Self::RedBanner(s) => 7585 + s.to_offset(),
      Self::BlackBanner(s) => 7601 + s.to_offset(),
      Self::WhiteWallBanner(s) => 7617 + s.to_offset(),
      Self::OrangeWallBanner(s) => 7621 + s.to_offset(),
      Self::MagentaWallBanner(s) => 7625 + s.to_offset(),
      Self::LightBlueWallBanner(s) => 7629 + s.to_offset(),
      Self::YellowWallBanner(s) => 7633 + s.to_offset(),
      Self::LimeWallBanner(s) => 7637 + s.to_offset(),
      Self::PinkWallBanner(s) => 7641 + s.to_offset(),
      Self::GrayWallBanner(s) => 7645 + s.to_offset(),
      Self::LightGrayWallBanner(s) => 7649 + s.to_offset(),
      Self::CyanWallBanner(s) => 7653 + s.to_offset(),
      Self::PurpleWallBanner(s) => 7657 + s.to_offset(),
      Self::BlueWallBanner(s) => 7661 + s.to_offset(),
      Self::BrownWallBanner(s) => 7665 + s.to_offset(),
      Self::GreenWallBanner(s) => 7669 + s.to_offset(),
      Self::RedWallBanner(s) => 7673 + s.to_offset(),
      Self::BlackWallBanner(s) => 7677 + s.to_offset(),
      Self::RedSandstone => 7681,
      Self::ChiseledRedSandstone => 7682,
      Self::CutRedSandstone => 7683,
      Self::RedSandstoneStairs(s) => 7684 + s.to_offset(),
      Self::OakSlab(s) => 7764 + s.to_offset(),
      Self::SpruceSlab(s) => 7770 + s.to_offset(),
      Self::BirchSlab(s) => 7776 + s.to_offset(),
      Self::JungleSlab(s) => 7782 + s.to_offset(),
      Self::AcaciaSlab(s) => 7788 + s.to_offset(),
      Self::DarkOakSlab(s) => 7794 + s.to_offset(),
      Self::StoneSlab(s) => 7800 + s.to_offset(),
      Self::SmoothStoneSlab(s) => 7806 + s.to_offset(),
      Self::SandstoneSlab(s) => 7812 + s.to_offset(),
      Self::CutSandstoneSlab(s) => 7818 + s.to_offset(),
      Self::PetrifiedOakSlab(s) => 7824 + s.to_offset(),
      Self::CobblestoneSlab(s) => 7830 + s.to_offset(),
      Self::BrickSlab(s) => 7836 + s.to_offset(),
      Self::StoneBrickSlab(s) => 7842 + s.to_offset(),
      Self::NetherBrickSlab(s) => 7848 + s.to_offset(),
      Self::QuartzSlab(s) => 7854 + s.to_offset(),
      Self::RedSandstoneSlab(s) => 7860 + s.to_offset(),
      Self::CutRedSandstoneSlab(s) => 7866 + s.to_offset(),
      Self::PurpurSlab(s) => 7872 + s.to_offset(),
      Self::SmoothStone => 7878,
      Self::SmoothSandstone => 7879,
      Self::SmoothQuartz => 7880,
      Self::SmoothRedSandstone => 7881,
      Self::SpruceFenceGate(s) => 7882 + s.to_offset(),
      Self::BirchFenceGate(s) => 7914 + s.to_offset(),
      Self::JungleFenceGate(s) => 7946 + s.to_offset(),
      Self::AcaciaFenceGate(s) => 7978 + s.to_offset(),
      Self::DarkOakFenceGate(s) => 8010 + s.to_offset(),
      Self::SpruceFence(s) => 8042 + s.to_offset(),
      Self::BirchFence(s) => 8074 + s.to_offset(),
      Self::JungleFence(s) => 8106 + s.to_offset(),
      Self::AcaciaFence(s) => 8138 + s.to_offset(),
      Self::DarkOakFence(s) => 8170 + s.to_offset(),
      Self::SpruceDoor(s) => 8202 + s.to_offset(),
      Self::BirchDoor(s) => 8266 + s.to_offset(),
      Self::JungleDoor(s) => 8330 + s.to_offset(),
      Self::AcaciaDoor(s) => 8394 + s.to_offset(),
      Self::DarkOakDoor(s) => 8458 + s.to_offset(),
      Self::EndRod(s) => 8522 + s.to_offset(),
      Self::ChorusPlant(s) => 8528 + s.to_offset(),
      Self::ChorusFlower(s) => 8592 + s.to_offset(),
      Self::PurpurBlock => 8598,
      Self::PurpurPillar(s) => 8599 + s.to_offset(),
      Self::PurpurStairs(s) => 8602 + s.to_offset(),
      Self::EndStoneBricks => 8682,
      Self::Beetroots(s) => 8683 + s.to_offset(),
      Self::GrassPath => 8687,
      Self::EndGateway => 8688,
      Self::RepeatingCommandBlock(s) => 8689 + s.to_offset(),
      Self::ChainCommandBlock(s) => 8701 + s.to_offset(),
      Self::FrostedIce(s) => 8713 + s.to_offset(),
      Self::MagmaBlock => 8717,
      Self::NetherWartBlock => 8718,
      Self::RedNetherBricks => 8719,
      Self::BoneBlock(s) => 8720 + s.to_offset(),
      Self::StructureVoid => 8723,
      Self::Observer(s) => 8724 + s.to_offset(),
      Self::ShulkerBox(s) => 8736 + s.to_offset(),
      Self::WhiteShulkerBox(s) => 8742 + s.to_offset(),
      Self::OrangeShulkerBox(s) => 8748 + s.to_offset(),
      Self::MagentaShulkerBox(s) => 8754 + s.to_offset(),
      Self::LightBlueShulkerBox(s) => 8760 + s.to_offset(),
      Self::YellowShulkerBox(s) => 8766 + s.to_offset(),
      Self::LimeShulkerBox(s) => 8772 + s.to_offset(),
      Self::PinkShulkerBox(s) => 8778 + s.to_offset(),
      Self::GrayShulkerBox(s) => 8784 + s.to_offset(),
      Self::LightGrayShulkerBox(s) => 8790 + s.to_offset(),
      Self::CyanShulkerBox(s) => 8796 + s.to_offset(),
      Self::PurpleShulkerBox(s) => 8802 + s.to_offset(),
      Self::BlueShulkerBox(s) => 8808 + s.to_offset(),
      Self::BrownShulkerBox(s) => 8814 + s.to_offset(),
      Self::GreenShulkerBox(s) => 8820 + s.to_offset(),
      Self::RedShulkerBox(s) => 8826 + s.to_offset(),
      Self::BlackShulkerBox(s) => 8832 + s.to_offset(),
      Self::WhiteGlazedTerracotta(s) => 8838 + s.to_offset(),
      Self::OrangeGlazedTerracotta(s) => 8842 + s.to_offset(),
      Self::MagentaGlazedTerracotta(s) => 8846 + s.to_offset(),
      Self::LightBlueGlazedTerracotta(s) => 8850 + s.to_offset(),
      Self::YellowGlazedTerracotta(s) => 8854 + s.to_offset(),
      Self::LimeGlazedTerracotta(s) => 8858 + s.to_offset(),
      Self::PinkGlazedTerracotta(s) => 8862 + s.to_offset(),
      Self::GrayGlazedTerracotta(s) => 8866 + s.to_offset(),
      Self::LightGrayGlazedTerracotta(s) => 8870 + s.to_offset(),
      Self::CyanGlazedTerracotta(s) => 8874 + s.to_offset(),
      Self::PurpleGlazedTerracotta(s) => 8878 + s.to_offset(),
      Self::BlueGlazedTerracotta(s) => 8882 + s.to_offset(),
      Self::BrownGlazedTerracotta(s) => 8886 + s.to_offset(),
      Self::GreenGlazedTerracotta(s) => 8890 + s.to_offset(),
      Self::RedGlazedTerracotta(s) => 8894 + s.to_offset(),
      Self::BlackGlazedTerracotta(s) => 8898 + s.to_offset(),
      Self::WhiteConcrete => 8902,
      Self::OrangeConcrete => 8903,
      Self::MagentaConcrete => 8904,
      Self::LightBlueConcrete => 8905,
      Self::YellowConcrete => 8906,
      Self::LimeConcrete => 8907,
      Self::PinkConcrete => 8908,
      Self::GrayConcrete => 8909,
      Self::LightGrayConcrete => 8910,
      Self::CyanConcrete => 8911,
      Self::PurpleConcrete => 8912,
      Self::BlueConcrete => 8913,
      Self::BrownConcrete => 8914,
      Self::GreenConcrete => 8915,
      Self::RedConcrete => 8916,
      Self::BlackConcrete => 8917,
      Self::WhiteConcretePowder => 8918,
      Self::OrangeConcretePowder => 8919,
      Self::MagentaConcretePowder => 8920,
      Self::LightBlueConcretePowder => 8921,
      Self::YellowConcretePowder => 8922,
      Self::LimeConcretePowder => 8923,
      Self::PinkConcretePowder => 8924,
      Self::GrayConcretePowder => 8925,
      Self::LightGrayConcretePowder => 8926,
      Self::CyanConcretePowder => 8927,
      Self::PurpleConcretePowder => 8928,
      Self::BlueConcretePowder => 8929,
      Self::BrownConcretePowder => 8930,
      Self::GreenConcretePowder => 8931,
      Self::RedConcretePowder => 8932,
      Self::BlackConcretePowder => 8933,
      Self::Kelp(s) => 8934 + s.to_offset(),
      Self::KelpPlant => 8960,
      Self::DriedKelpBlock => 8961,
      Self::TurtleEgg(s) => 8962 + s.to_offset(),
      Self::DeadTubeCoralBlock => 8974,
      Self::DeadBrainCoralBlock => 8975,
      Self::DeadBubbleCoralBlock => 8976,
      Self::DeadFireCoralBlock => 8977,
      Self::DeadHornCoralBlock => 8978,
      Self::TubeCoralBlock => 8979,
      Self::BrainCoralBlock => 8980,
      Self::BubbleCoralBlock => 8981,
      Self::FireCoralBlock => 8982,
      Self::HornCoralBlock => 8983,
      Self::DeadTubeCoral(s) => 8984 + s.to_offset(),
      Self::DeadBrainCoral(s) => 8986 + s.to_offset(),
      Self::DeadBubbleCoral(s) => 8988 + s.to_offset(),
      Self::DeadFireCoral(s) => 8990 + s.to_offset(),
      Self::DeadHornCoral(s) => 8992 + s.to_offset(),
      Self::TubeCoral(s) => 8994 + s.to_offset(),
      Self::BrainCoral(s) => 8996 + s.to_offset(),
      Self::BubbleCoral(s) => 8998 + s.to_offset(),
      Self::FireCoral(s) => 9000 + s.to_offset(),
      Self::HornCoral(s) => 9002 + s.to_offset(),
      Self::DeadTubeCoralFan(s) => 9004 + s.to_offset(),
      Self::DeadBrainCoralFan(s) => 9006 + s.to_offset(),
      Self::DeadBubbleCoralFan(s) => 9008 + s.to_offset(),
      Self::DeadFireCoralFan(s) => 9010 + s.to_offset(),
      Self::DeadHornCoralFan(s) => 9012 + s.to_offset(),
      Self::TubeCoralFan(s) => 9014 + s.to_offset(),
      Self::BrainCoralFan(s) => 9016 + s.to_offset(),
      Self::BubbleCoralFan(s) => 9018 + s.to_offset(),
      Self::FireCoralFan(s) => 9020 + s.to_offset(),
      Self::HornCoralFan(s) => 9022 + s.to_offset(),
      Self::DeadTubeCoralWallFan(s) => 9024 + s.to_offset(),
      Self::DeadBrainCoralWallFan(s) => 9032 + s.to_offset(),
      Self::DeadBubbleCoralWallFan(s) => 9040 + s.to_offset(),
      Self::DeadFireCoralWallFan(s) => 9048 + s.to_offset(),
      Self::DeadHornCoralWallFan(s) => 9056 + s.to_offset(),
      Self::TubeCoralWallFan(s) => 9064 + s.to_offset(),
      Self::BrainCoralWallFan(s) => 9072 + s.to_offset(),
      Self::BubbleCoralWallFan(s) => 9080 + s.to_offset(),
      Self::FireCoralWallFan(s) => 9088 + s.to_offset(),
      Self::HornCoralWallFan(s) => 9096 + s.to_offset(),
      Self::SeaPickle(s) => 9104 + s.to_offset(),
      Self::BlueIce => 9112,
      Self::Conduit(s) => 9113 + s.to_offset(),
      Self::BambooSapling => 9115,
      Self::Bamboo(s) => 9116 + s.to_offset(),
      Self::PottedBamboo => 9128,
      Self::VoidAir => 9129,
      Self::CaveAir => 9130,
      Self::BubbleColumn(s) => 9131 + s.to_offset(),
      Self::PolishedGraniteStairs(s) => 9133 + s.to_offset(),
      Self::SmoothRedSandstoneStairs(s) => 9213 + s.to_offset(),
      Self::MossyStoneBrickStairs(s) => 9293 + s.to_offset(),
      Self::PolishedDioriteStairs(s) => 9373 + s.to_offset(),
      Self::MossyCobblestoneStairs(s) => 9453 + s.to_offset(),
      Self::EndStoneBrickStairs(s) => 9533 + s.to_offset(),
      Self::StoneStairs(s) => 9613 + s.to_offset(),
      Self::SmoothSandstoneStairs(s) => 9693 + s.to_offset(),
      Self::SmoothQuartzStairs(s) => 9773 + s.to_offset(),
      Self::GraniteStairs(s) => 9853 + s.to_offset(),
      Self::AndesiteStairs(s) => 9933 + s.to_offset(),
      Self::RedNetherBrickStairs(s) => 10013 + s.to_offset(),
      Self::PolishedAndesiteStairs(s) => 10093 + s.to_offset(),
      Self::DioriteStairs(s) => 10173 + s.to_offset(),
      Self::PolishedGraniteSlab(s) => 10253 + s.to_offset(),
      Self::SmoothRedSandstoneSlab(s) => 10259 + s.to_offset(),
      Self::MossyStoneBrickSlab(s) => 10265 + s.to_offset(),
      Self::PolishedDioriteSlab(s) => 10271 + s.to_offset(),
      Self::MossyCobblestoneSlab(s) => 10277 + s.to_offset(),
      Self::EndStoneBrickSlab(s) => 10283 + s.to_offset(),
      Self::SmoothSandstoneSlab(s) => 10289 + s.to_offset(),
      Self::SmoothQuartzSlab(s) => 10295 + s.to_offset(),
      Self::GraniteSlab(s) => 10301 + s.to_offset(),
      Self::AndesiteSlab(s) => 10307 + s.to_offset(),
      Self::RedNetherBrickSlab(s) => 10313 + s.to_offset(),
      Self::PolishedAndesiteSlab(s) => 10319 + s.to_offset(),
      Self::DioriteSlab(s) => 10325 + s.to_offset(),
      Self::BrickWall(s) => 10331 + s.to_offset(),
      Self::PrismarineWall(s) => 10395 + s.to_offset(),
      Self::RedSandstoneWall(s) => 10459 + s.to_offset(),
      Self::MossyStoneBrickWall(s) => 10523 + s.to_offset(),
      Self::GraniteWall(s) => 10587 + s.to_offset(),
      Self::StoneBrickWall(s) => 10651 + s.to_offset(),
      Self::NetherBrickWall(s) => 10715 + s.to_offset(),
      Self::AndesiteWall(s) => 10779 + s.to_offset(),
      Self::RedNetherBrickWall(s) => 10843 + s.to_offset(),
      Self::SandstoneWall(s) => 10907 + s.to_offset(),
      Self::EndStoneBrickWall(s) => 10971 + s.to_offset(),
      Self::DioriteWall(s) => 11035 + s.to_offset(),
      Self::Scaffolding(s) => 11099 + s.to_offset(),
      Self::Loom(s) => 11131 + s.to_offset(),
      Self::Barrel(s) => 11135 + s.to_offset(),
      Self::Smoker(s) => 11147 + s.to_offset(),
      Self::BlastFurnace(s) => 11155 + s.to_offset(),
      Self::CartographyTable => 11163,
      Self::FletchingTable => 11164,
      Self::Grindstone(s) => 11165 + s.to_offset(),
      Self::Lectern(s) => 11177 + s.to_offset(),
      Self::SmithingTable => 11193,
      Self::Stonecutter(s) => 11194 + s.to_offset(),
      Self::Bell(s) => 11198 + s.to_offset(),
      Self::Lantern(s) => 11230 + s.to_offset(),
      Self::Campfire(s) => 11232 + s.to_offset(),
      Self::SweetBerryBush(s) => 11264 + s.to_offset(),
      Self::StructureBlock(s) => 11268 + s.to_offset(),
      Self::Jigsaw(s) => 11272 + s.to_offset(),
      Self::Composter(s) => 11278 + s.to_offset(),
      Self::BeeNest(s) => 11287 + s.to_offset(),
      Self::Beehive(s) => 11311 + s.to_offset(),
      Self::HoneyBlock => 11335,
      Self::HoneycombBlock => 11336,
    }
  }
}
impl Registry for Block {
  fn get_registry_key(&self) -> NamespacedKey {
    let name: &str = match self {
      Self::Air => &"air",
      Self::Stone => &"stone",
      Self::Granite => &"granite",
      Self::PolishedGranite => &"polished_granite",
      Self::Diorite => &"diorite",
      Self::PolishedDiorite => &"polished_diorite",
      Self::Andesite => &"andesite",
      Self::PolishedAndesite => &"polished_andesite",
      Self::GrassBlock(_) => &"grass_block",
      Self::Dirt => &"dirt",
      Self::CoarseDirt => &"coarse_dirt",
      Self::Podzol(_) => &"podzol",
      Self::Cobblestone => &"cobblestone",
      Self::OakPlanks => &"oak_planks",
      Self::SprucePlanks => &"spruce_planks",
      Self::BirchPlanks => &"birch_planks",
      Self::JunglePlanks => &"jungle_planks",
      Self::AcaciaPlanks => &"acacia_planks",
      Self::DarkOakPlanks => &"dark_oak_planks",
      Self::OakSapling(_) => &"oak_sapling",
      Self::SpruceSapling(_) => &"spruce_sapling",
      Self::BirchSapling(_) => &"birch_sapling",
      Self::JungleSapling(_) => &"jungle_sapling",
      Self::AcaciaSapling(_) => &"acacia_sapling",
      Self::DarkOakSapling(_) => &"dark_oak_sapling",
      Self::Bedrock => &"bedrock",
      Self::Water(_) => &"water",
      Self::Lava(_) => &"lava",
      Self::Sand => &"sand",
      Self::RedSand => &"red_sand",
      Self::Gravel => &"gravel",
      Self::GoldOre => &"gold_ore",
      Self::IronOre => &"iron_ore",
      Self::CoalOre => &"coal_ore",
      Self::OakLog(_) => &"oak_log",
      Self::SpruceLog(_) => &"spruce_log",
      Self::BirchLog(_) => &"birch_log",
      Self::JungleLog(_) => &"jungle_log",
      Self::AcaciaLog(_) => &"acacia_log",
      Self::DarkOakLog(_) => &"dark_oak_log",
      Self::StrippedSpruceLog(_) => &"stripped_spruce_log",
      Self::StrippedBirchLog(_) => &"stripped_birch_log",
      Self::StrippedJungleLog(_) => &"stripped_jungle_log",
      Self::StrippedAcaciaLog(_) => &"stripped_acacia_log",
      Self::StrippedDarkOakLog(_) => &"stripped_dark_oak_log",
      Self::StrippedOakLog(_) => &"stripped_oak_log",
      Self::OakWood(_) => &"oak_wood",
      Self::SpruceWood(_) => &"spruce_wood",
      Self::BirchWood(_) => &"birch_wood",
      Self::JungleWood(_) => &"jungle_wood",
      Self::AcaciaWood(_) => &"acacia_wood",
      Self::DarkOakWood(_) => &"dark_oak_wood",
      Self::StrippedOakWood(_) => &"stripped_oak_wood",
      Self::StrippedSpruceWood(_) => &"stripped_spruce_wood",
      Self::StrippedBirchWood(_) => &"stripped_birch_wood",
      Self::StrippedJungleWood(_) => &"stripped_jungle_wood",
      Self::StrippedAcaciaWood(_) => &"stripped_acacia_wood",
      Self::StrippedDarkOakWood(_) => &"stripped_dark_oak_wood",
      Self::OakLeaves(_) => &"oak_leaves",
      Self::SpruceLeaves(_) => &"spruce_leaves",
      Self::BirchLeaves(_) => &"birch_leaves",
      Self::JungleLeaves(_) => &"jungle_leaves",
      Self::AcaciaLeaves(_) => &"acacia_leaves",
      Self::DarkOakLeaves(_) => &"dark_oak_leaves",
      Self::Sponge => &"sponge",
      Self::WetSponge => &"wet_sponge",
      Self::Glass => &"glass",
      Self::LapisOre => &"lapis_ore",
      Self::LapisBlock => &"lapis_block",
      Self::Dispenser(_) => &"dispenser",
      Self::Sandstone => &"sandstone",
      Self::ChiseledSandstone => &"chiseled_sandstone",
      Self::CutSandstone => &"cut_sandstone",
      Self::NoteBlock(_) => &"note_block",
      Self::WhiteBed(_) => &"white_bed",
      Self::OrangeBed(_) => &"orange_bed",
      Self::MagentaBed(_) => &"magenta_bed",
      Self::LightBlueBed(_) => &"light_blue_bed",
      Self::YellowBed(_) => &"yellow_bed",
      Self::LimeBed(_) => &"lime_bed",
      Self::PinkBed(_) => &"pink_bed",
      Self::GrayBed(_) => &"gray_bed",
      Self::LightGrayBed(_) => &"light_gray_bed",
      Self::CyanBed(_) => &"cyan_bed",
      Self::PurpleBed(_) => &"purple_bed",
      Self::BlueBed(_) => &"blue_bed",
      Self::BrownBed(_) => &"brown_bed",
      Self::GreenBed(_) => &"green_bed",
      Self::RedBed(_) => &"red_bed",
      Self::BlackBed(_) => &"black_bed",
      Self::PoweredRail(_) => &"powered_rail",
      Self::DetectorRail(_) => &"detector_rail",
      Self::StickyPiston(_) => &"sticky_piston",
      Self::Cobweb => &"cobweb",
      Self::Grass => &"grass",
      Self::Fern => &"fern",
      Self::DeadBush => &"dead_bush",
      Self::Seagrass => &"seagrass",
      Self::TallSeagrass(_) => &"tall_seagrass",
      Self::Piston(_) => &"piston",
      Self::PistonHead(_) => &"piston_head",
      Self::WhiteWool => &"white_wool",
      Self::OrangeWool => &"orange_wool",
      Self::MagentaWool => &"magenta_wool",
      Self::LightBlueWool => &"light_blue_wool",
      Self::YellowWool => &"yellow_wool",
      Self::LimeWool => &"lime_wool",
      Self::PinkWool => &"pink_wool",
      Self::GrayWool => &"gray_wool",
      Self::LightGrayWool => &"light_gray_wool",
      Self::CyanWool => &"cyan_wool",
      Self::PurpleWool => &"purple_wool",
      Self::BlueWool => &"blue_wool",
      Self::BrownWool => &"brown_wool",
      Self::GreenWool => &"green_wool",
      Self::RedWool => &"red_wool",
      Self::BlackWool => &"black_wool",
      Self::MovingPiston(_) => &"moving_piston",
      Self::Dandelion => &"dandelion",
      Self::Poppy => &"poppy",
      Self::BlueOrchid => &"blue_orchid",
      Self::Allium => &"allium",
      Self::AzureBluet => &"azure_bluet",
      Self::RedTulip => &"red_tulip",
      Self::OrangeTulip => &"orange_tulip",
      Self::WhiteTulip => &"white_tulip",
      Self::PinkTulip => &"pink_tulip",
      Self::OxeyeDaisy => &"oxeye_daisy",
      Self::Cornflower => &"cornflower",
      Self::WitherRose => &"wither_rose",
      Self::LilyOfTheValley => &"lily_of_the_valley",
      Self::BrownMushroom => &"brown_mushroom",
      Self::RedMushroom => &"red_mushroom",
      Self::GoldBlock => &"gold_block",
      Self::IronBlock => &"iron_block",
      Self::Bricks => &"bricks",
      Self::Tnt(_) => &"tnt",
      Self::Bookshelf => &"bookshelf",
      Self::MossyCobblestone => &"mossy_cobblestone",
      Self::Obsidian => &"obsidian",
      Self::Torch => &"torch",
      Self::WallTorch(_) => &"wall_torch",
      Self::Fire(_) => &"fire",
      Self::Spawner => &"spawner",
      Self::OakStairs(_) => &"oak_stairs",
      Self::Chest(_) => &"chest",
      Self::RedstoneWire(_) => &"redstone_wire",
      Self::DiamondOre => &"diamond_ore",
      Self::DiamondBlock => &"diamond_block",
      Self::CraftingTable => &"crafting_table",
      Self::Wheat(_) => &"wheat",
      Self::Farmland(_) => &"farmland",
      Self::Furnace(_) => &"furnace",
      Self::OakSign(_) => &"oak_sign",
      Self::SpruceSign(_) => &"spruce_sign",
      Self::BirchSign(_) => &"birch_sign",
      Self::AcaciaSign(_) => &"acacia_sign",
      Self::JungleSign(_) => &"jungle_sign",
      Self::DarkOakSign(_) => &"dark_oak_sign",
      Self::OakDoor(_) => &"oak_door",
      Self::Ladder(_) => &"ladder",
      Self::Rail(_) => &"rail",
      Self::CobblestoneStairs(_) => &"cobblestone_stairs",
      Self::OakWallSign(_) => &"oak_wall_sign",
      Self::SpruceWallSign(_) => &"spruce_wall_sign",
      Self::BirchWallSign(_) => &"birch_wall_sign",
      Self::AcaciaWallSign(_) => &"acacia_wall_sign",
      Self::JungleWallSign(_) => &"jungle_wall_sign",
      Self::DarkOakWallSign(_) => &"dark_oak_wall_sign",
      Self::Lever(_) => &"lever",
      Self::StonePressurePlate(_) => &"stone_pressure_plate",
      Self::IronDoor(_) => &"iron_door",
      Self::OakPressurePlate(_) => &"oak_pressure_plate",
      Self::SprucePressurePlate(_) => &"spruce_pressure_plate",
      Self::BirchPressurePlate(_) => &"birch_pressure_plate",
      Self::JunglePressurePlate(_) => &"jungle_pressure_plate",
      Self::AcaciaPressurePlate(_) => &"acacia_pressure_plate",
      Self::DarkOakPressurePlate(_) => &"dark_oak_pressure_plate",
      Self::RedstoneOre(_) => &"redstone_ore",
      Self::RedstoneTorch(_) => &"redstone_torch",
      Self::RedstoneWallTorch(_) => &"redstone_wall_torch",
      Self::StoneButton(_) => &"stone_button",
      Self::Snow(_) => &"snow",
      Self::Ice => &"ice",
      Self::SnowBlock => &"snow_block",
      Self::Cactus(_) => &"cactus",
      Self::Clay => &"clay",
      Self::SugarCane(_) => &"sugar_cane",
      Self::Jukebox(_) => &"jukebox",
      Self::OakFence(_) => &"oak_fence",
      Self::Pumpkin => &"pumpkin",
      Self::Netherrack => &"netherrack",
      Self::SoulSand => &"soul_sand",
      Self::Glowstone => &"glowstone",
      Self::NetherPortal(_) => &"nether_portal",
      Self::CarvedPumpkin(_) => &"carved_pumpkin",
      Self::JackOLantern(_) => &"jack_o_lantern",
      Self::Cake(_) => &"cake",
      Self::Repeater(_) => &"repeater",
      Self::WhiteStainedGlass => &"white_stained_glass",
      Self::OrangeStainedGlass => &"orange_stained_glass",
      Self::MagentaStainedGlass => &"magenta_stained_glass",
      Self::LightBlueStainedGlass => &"light_blue_stained_glass",
      Self::YellowStainedGlass => &"yellow_stained_glass",
      Self::LimeStainedGlass => &"lime_stained_glass",
      Self::PinkStainedGlass => &"pink_stained_glass",
      Self::GrayStainedGlass => &"gray_stained_glass",
      Self::LightGrayStainedGlass => &"light_gray_stained_glass",
      Self::CyanStainedGlass => &"cyan_stained_glass",
      Self::PurpleStainedGlass => &"purple_stained_glass",
      Self::BlueStainedGlass => &"blue_stained_glass",
      Self::BrownStainedGlass => &"brown_stained_glass",
      Self::GreenStainedGlass => &"green_stained_glass",
      Self::RedStainedGlass => &"red_stained_glass",
      Self::BlackStainedGlass => &"black_stained_glass",
      Self::OakTrapdoor(_) => &"oak_trapdoor",
      Self::SpruceTrapdoor(_) => &"spruce_trapdoor",
      Self::BirchTrapdoor(_) => &"birch_trapdoor",
      Self::JungleTrapdoor(_) => &"jungle_trapdoor",
      Self::AcaciaTrapdoor(_) => &"acacia_trapdoor",
      Self::DarkOakTrapdoor(_) => &"dark_oak_trapdoor",
      Self::StoneBricks => &"stone_bricks",
      Self::MossyStoneBricks => &"mossy_stone_bricks",
      Self::CrackedStoneBricks => &"cracked_stone_bricks",
      Self::ChiseledStoneBricks => &"chiseled_stone_bricks",
      Self::InfestedStone => &"infested_stone",
      Self::InfestedCobblestone => &"infested_cobblestone",
      Self::InfestedStoneBricks => &"infested_stone_bricks",
      Self::InfestedMossyStoneBricks => &"infested_mossy_stone_bricks",
      Self::InfestedCrackedStoneBricks => &"infested_cracked_stone_bricks",
      Self::InfestedChiseledStoneBricks => &"infested_chiseled_stone_bricks",
      Self::BrownMushroomBlock(_) => &"brown_mushroom_block",
      Self::RedMushroomBlock(_) => &"red_mushroom_block",
      Self::MushroomStem(_) => &"mushroom_stem",
      Self::IronBars(_) => &"iron_bars",
      Self::GlassPane(_) => &"glass_pane",
      Self::Melon => &"melon",
      Self::AttachedPumpkinStem(_) => &"attached_pumpkin_stem",
      Self::AttachedMelonStem(_) => &"attached_melon_stem",
      Self::PumpkinStem(_) => &"pumpkin_stem",
      Self::MelonStem(_) => &"melon_stem",
      Self::Vine(_) => &"vine",
      Self::OakFenceGate(_) => &"oak_fence_gate",
      Self::BrickStairs(_) => &"brick_stairs",
      Self::StoneBrickStairs(_) => &"stone_brick_stairs",
      Self::Mycelium(_) => &"mycelium",
      Self::LilyPad => &"lily_pad",
      Self::NetherBricks => &"nether_bricks",
      Self::NetherBrickFence(_) => &"nether_brick_fence",
      Self::NetherBrickStairs(_) => &"nether_brick_stairs",
      Self::NetherWart(_) => &"nether_wart",
      Self::EnchantingTable => &"enchanting_table",
      Self::BrewingStand(_) => &"brewing_stand",
      Self::Cauldron(_) => &"cauldron",
      Self::EndPortal => &"end_portal",
      Self::EndPortalFrame(_) => &"end_portal_frame",
      Self::EndStone => &"end_stone",
      Self::DragonEgg => &"dragon_egg",
      Self::RedstoneLamp(_) => &"redstone_lamp",
      Self::Cocoa(_) => &"cocoa",
      Self::SandstoneStairs(_) => &"sandstone_stairs",
      Self::EmeraldOre => &"emerald_ore",
      Self::EnderChest(_) => &"ender_chest",
      Self::TripwireHook(_) => &"tripwire_hook",
      Self::Tripwire(_) => &"tripwire",
      Self::EmeraldBlock => &"emerald_block",
      Self::SpruceStairs(_) => &"spruce_stairs",
      Self::BirchStairs(_) => &"birch_stairs",
      Self::JungleStairs(_) => &"jungle_stairs",
      Self::CommandBlock(_) => &"command_block",
      Self::Beacon => &"beacon",
      Self::CobblestoneWall(_) => &"cobblestone_wall",
      Self::MossyCobblestoneWall(_) => &"mossy_cobblestone_wall",
      Self::FlowerPot => &"flower_pot",
      Self::PottedOakSapling => &"potted_oak_sapling",
      Self::PottedSpruceSapling => &"potted_spruce_sapling",
      Self::PottedBirchSapling => &"potted_birch_sapling",
      Self::PottedJungleSapling => &"potted_jungle_sapling",
      Self::PottedAcaciaSapling => &"potted_acacia_sapling",
      Self::PottedDarkOakSapling => &"potted_dark_oak_sapling",
      Self::PottedFern => &"potted_fern",
      Self::PottedDandelion => &"potted_dandelion",
      Self::PottedPoppy => &"potted_poppy",
      Self::PottedBlueOrchid => &"potted_blue_orchid",
      Self::PottedAllium => &"potted_allium",
      Self::PottedAzureBluet => &"potted_azure_bluet",
      Self::PottedRedTulip => &"potted_red_tulip",
      Self::PottedOrangeTulip => &"potted_orange_tulip",
      Self::PottedWhiteTulip => &"potted_white_tulip",
      Self::PottedPinkTulip => &"potted_pink_tulip",
      Self::PottedOxeyeDaisy => &"potted_oxeye_daisy",
      Self::PottedCornflower => &"potted_cornflower",
      Self::PottedLilyOfTheValley => &"potted_lily_of_the_valley",
      Self::PottedWitherRose => &"potted_wither_rose",
      Self::PottedRedMushroom => &"potted_red_mushroom",
      Self::PottedBrownMushroom => &"potted_brown_mushroom",
      Self::PottedDeadBush => &"potted_dead_bush",
      Self::PottedCactus => &"potted_cactus",
      Self::Carrots(_) => &"carrots",
      Self::Potatoes(_) => &"potatoes",
      Self::OakButton(_) => &"oak_button",
      Self::SpruceButton(_) => &"spruce_button",
      Self::BirchButton(_) => &"birch_button",
      Self::JungleButton(_) => &"jungle_button",
      Self::AcaciaButton(_) => &"acacia_button",
      Self::DarkOakButton(_) => &"dark_oak_button",
      Self::SkeletonSkull(_) => &"skeleton_skull",
      Self::SkeletonWallSkull(_) => &"skeleton_wall_skull",
      Self::WitherSkeletonSkull(_) => &"wither_skeleton_skull",
      Self::WitherSkeletonWallSkull(_) => &"wither_skeleton_wall_skull",
      Self::ZombieHead(_) => &"zombie_head",
      Self::ZombieWallHead(_) => &"zombie_wall_head",
      Self::PlayerHead(_) => &"player_head",
      Self::PlayerWallHead(_) => &"player_wall_head",
      Self::CreeperHead(_) => &"creeper_head",
      Self::CreeperWallHead(_) => &"creeper_wall_head",
      Self::DragonHead(_) => &"dragon_head",
      Self::DragonWallHead(_) => &"dragon_wall_head",
      Self::Anvil(_) => &"anvil",
      Self::ChippedAnvil(_) => &"chipped_anvil",
      Self::DamagedAnvil(_) => &"damaged_anvil",
      Self::TrappedChest(_) => &"trapped_chest",
      Self::LightWeightedPressurePlate(_) => &"light_weighted_pressure_plate",
      Self::HeavyWeightedPressurePlate(_) => &"heavy_weighted_pressure_plate",
      Self::Comparator(_) => &"comparator",
      Self::DaylightDetector(_) => &"daylight_detector",
      Self::RedstoneBlock => &"redstone_block",
      Self::NetherQuartzOre => &"nether_quartz_ore",
      Self::Hopper(_) => &"hopper",
      Self::QuartzBlock => &"quartz_block",
      Self::ChiseledQuartzBlock => &"chiseled_quartz_block",
      Self::QuartzPillar(_) => &"quartz_pillar",
      Self::QuartzStairs(_) => &"quartz_stairs",
      Self::ActivatorRail(_) => &"activator_rail",
      Self::Dropper(_) => &"dropper",
      Self::WhiteTerracotta => &"white_terracotta",
      Self::OrangeTerracotta => &"orange_terracotta",
      Self::MagentaTerracotta => &"magenta_terracotta",
      Self::LightBlueTerracotta => &"light_blue_terracotta",
      Self::YellowTerracotta => &"yellow_terracotta",
      Self::LimeTerracotta => &"lime_terracotta",
      Self::PinkTerracotta => &"pink_terracotta",
      Self::GrayTerracotta => &"gray_terracotta",
      Self::LightGrayTerracotta => &"light_gray_terracotta",
      Self::CyanTerracotta => &"cyan_terracotta",
      Self::PurpleTerracotta => &"purple_terracotta",
      Self::BlueTerracotta => &"blue_terracotta",
      Self::BrownTerracotta => &"brown_terracotta",
      Self::GreenTerracotta => &"green_terracotta",
      Self::RedTerracotta => &"red_terracotta",
      Self::BlackTerracotta => &"black_terracotta",
      Self::WhiteStainedGlassPane(_) => &"white_stained_glass_pane",
      Self::OrangeStainedGlassPane(_) => &"orange_stained_glass_pane",
      Self::MagentaStainedGlassPane(_) => &"magenta_stained_glass_pane",
      Self::LightBlueStainedGlassPane(_) => &"light_blue_stained_glass_pane",
      Self::YellowStainedGlassPane(_) => &"yellow_stained_glass_pane",
      Self::LimeStainedGlassPane(_) => &"lime_stained_glass_pane",
      Self::PinkStainedGlassPane(_) => &"pink_stained_glass_pane",
      Self::GrayStainedGlassPane(_) => &"gray_stained_glass_pane",
      Self::LightGrayStainedGlassPane(_) => &"light_gray_stained_glass_pane",
      Self::CyanStainedGlassPane(_) => &"cyan_stained_glass_pane",
      Self::PurpleStainedGlassPane(_) => &"purple_stained_glass_pane",
      Self::BlueStainedGlassPane(_) => &"blue_stained_glass_pane",
      Self::BrownStainedGlassPane(_) => &"brown_stained_glass_pane",
      Self::GreenStainedGlassPane(_) => &"green_stained_glass_pane",
      Self::RedStainedGlassPane(_) => &"red_stained_glass_pane",
      Self::BlackStainedGlassPane(_) => &"black_stained_glass_pane",
      Self::AcaciaStairs(_) => &"acacia_stairs",
      Self::DarkOakStairs(_) => &"dark_oak_stairs",
      Self::SlimeBlock => &"slime_block",
      Self::Barrier => &"barrier",
      Self::IronTrapdoor(_) => &"iron_trapdoor",
      Self::Prismarine => &"prismarine",
      Self::PrismarineBricks => &"prismarine_bricks",
      Self::DarkPrismarine => &"dark_prismarine",
      Self::PrismarineStairs(_) => &"prismarine_stairs",
      Self::PrismarineBrickStairs(_) => &"prismarine_brick_stairs",
      Self::DarkPrismarineStairs(_) => &"dark_prismarine_stairs",
      Self::PrismarineSlab(_) => &"prismarine_slab",
      Self::PrismarineBrickSlab(_) => &"prismarine_brick_slab",
      Self::DarkPrismarineSlab(_) => &"dark_prismarine_slab",
      Self::SeaLantern => &"sea_lantern",
      Self::HayBlock(_) => &"hay_block",
      Self::WhiteCarpet => &"white_carpet",
      Self::OrangeCarpet => &"orange_carpet",
      Self::MagentaCarpet => &"magenta_carpet",
      Self::LightBlueCarpet => &"light_blue_carpet",
      Self::YellowCarpet => &"yellow_carpet",
      Self::LimeCarpet => &"lime_carpet",
      Self::PinkCarpet => &"pink_carpet",
      Self::GrayCarpet => &"gray_carpet",
      Self::LightGrayCarpet => &"light_gray_carpet",
      Self::CyanCarpet => &"cyan_carpet",
      Self::PurpleCarpet => &"purple_carpet",
      Self::BlueCarpet => &"blue_carpet",
      Self::BrownCarpet => &"brown_carpet",
      Self::GreenCarpet => &"green_carpet",
      Self::RedCarpet => &"red_carpet",
      Self::BlackCarpet => &"black_carpet",
      Self::Terracotta => &"terracotta",
      Self::CoalBlock => &"coal_block",
      Self::PackedIce => &"packed_ice",
      Self::Sunflower(_) => &"sunflower",
      Self::Lilac(_) => &"lilac",
      Self::RoseBush(_) => &"rose_bush",
      Self::Peony(_) => &"peony",
      Self::TallGrass(_) => &"tall_grass",
      Self::LargeFern(_) => &"large_fern",
      Self::WhiteBanner(_) => &"white_banner",
      Self::OrangeBanner(_) => &"orange_banner",
      Self::MagentaBanner(_) => &"magenta_banner",
      Self::LightBlueBanner(_) => &"light_blue_banner",
      Self::YellowBanner(_) => &"yellow_banner",
      Self::LimeBanner(_) => &"lime_banner",
      Self::PinkBanner(_) => &"pink_banner",
      Self::GrayBanner(_) => &"gray_banner",
      Self::LightGrayBanner(_) => &"light_gray_banner",
      Self::CyanBanner(_) => &"cyan_banner",
      Self::PurpleBanner(_) => &"purple_banner",
      Self::BlueBanner(_) => &"blue_banner",
      Self::BrownBanner(_) => &"brown_banner",
      Self::GreenBanner(_) => &"green_banner",
      Self::RedBanner(_) => &"red_banner",
      Self::BlackBanner(_) => &"black_banner",
      Self::WhiteWallBanner(_) => &"white_wall_banner",
      Self::OrangeWallBanner(_) => &"orange_wall_banner",
      Self::MagentaWallBanner(_) => &"magenta_wall_banner",
      Self::LightBlueWallBanner(_) => &"light_blue_wall_banner",
      Self::YellowWallBanner(_) => &"yellow_wall_banner",
      Self::LimeWallBanner(_) => &"lime_wall_banner",
      Self::PinkWallBanner(_) => &"pink_wall_banner",
      Self::GrayWallBanner(_) => &"gray_wall_banner",
      Self::LightGrayWallBanner(_) => &"light_gray_wall_banner",
      Self::CyanWallBanner(_) => &"cyan_wall_banner",
      Self::PurpleWallBanner(_) => &"purple_wall_banner",
      Self::BlueWallBanner(_) => &"blue_wall_banner",
      Self::BrownWallBanner(_) => &"brown_wall_banner",
      Self::GreenWallBanner(_) => &"green_wall_banner",
      Self::RedWallBanner(_) => &"red_wall_banner",
      Self::BlackWallBanner(_) => &"black_wall_banner",
      Self::RedSandstone => &"red_sandstone",
      Self::ChiseledRedSandstone => &"chiseled_red_sandstone",
      Self::CutRedSandstone => &"cut_red_sandstone",
      Self::RedSandstoneStairs(_) => &"red_sandstone_stairs",
      Self::OakSlab(_) => &"oak_slab",
      Self::SpruceSlab(_) => &"spruce_slab",
      Self::BirchSlab(_) => &"birch_slab",
      Self::JungleSlab(_) => &"jungle_slab",
      Self::AcaciaSlab(_) => &"acacia_slab",
      Self::DarkOakSlab(_) => &"dark_oak_slab",
      Self::StoneSlab(_) => &"stone_slab",
      Self::SmoothStoneSlab(_) => &"smooth_stone_slab",
      Self::SandstoneSlab(_) => &"sandstone_slab",
      Self::CutSandstoneSlab(_) => &"cut_sandstone_slab",
      Self::PetrifiedOakSlab(_) => &"petrified_oak_slab",
      Self::CobblestoneSlab(_) => &"cobblestone_slab",
      Self::BrickSlab(_) => &"brick_slab",
      Self::StoneBrickSlab(_) => &"stone_brick_slab",
      Self::NetherBrickSlab(_) => &"nether_brick_slab",
      Self::QuartzSlab(_) => &"quartz_slab",
      Self::RedSandstoneSlab(_) => &"red_sandstone_slab",
      Self::CutRedSandstoneSlab(_) => &"cut_red_sandstone_slab",
      Self::PurpurSlab(_) => &"purpur_slab",
      Self::SmoothStone => &"smooth_stone",
      Self::SmoothSandstone => &"smooth_sandstone",
      Self::SmoothQuartz => &"smooth_quartz",
      Self::SmoothRedSandstone => &"smooth_red_sandstone",
      Self::SpruceFenceGate(_) => &"spruce_fence_gate",
      Self::BirchFenceGate(_) => &"birch_fence_gate",
      Self::JungleFenceGate(_) => &"jungle_fence_gate",
      Self::AcaciaFenceGate(_) => &"acacia_fence_gate",
      Self::DarkOakFenceGate(_) => &"dark_oak_fence_gate",
      Self::SpruceFence(_) => &"spruce_fence",
      Self::BirchFence(_) => &"birch_fence",
      Self::JungleFence(_) => &"jungle_fence",
      Self::AcaciaFence(_) => &"acacia_fence",
      Self::DarkOakFence(_) => &"dark_oak_fence",
      Self::SpruceDoor(_) => &"spruce_door",
      Self::BirchDoor(_) => &"birch_door",
      Self::JungleDoor(_) => &"jungle_door",
      Self::AcaciaDoor(_) => &"acacia_door",
      Self::DarkOakDoor(_) => &"dark_oak_door",
      Self::EndRod(_) => &"end_rod",
      Self::ChorusPlant(_) => &"chorus_plant",
      Self::ChorusFlower(_) => &"chorus_flower",
      Self::PurpurBlock => &"purpur_block",
      Self::PurpurPillar(_) => &"purpur_pillar",
      Self::PurpurStairs(_) => &"purpur_stairs",
      Self::EndStoneBricks => &"end_stone_bricks",
      Self::Beetroots(_) => &"beetroots",
      Self::GrassPath => &"grass_path",
      Self::EndGateway => &"end_gateway",
      Self::RepeatingCommandBlock(_) => &"repeating_command_block",
      Self::ChainCommandBlock(_) => &"chain_command_block",
      Self::FrostedIce(_) => &"frosted_ice",
      Self::MagmaBlock => &"magma_block",
      Self::NetherWartBlock => &"nether_wart_block",
      Self::RedNetherBricks => &"red_nether_bricks",
      Self::BoneBlock(_) => &"bone_block",
      Self::StructureVoid => &"structure_void",
      Self::Observer(_) => &"observer",
      Self::ShulkerBox(_) => &"shulker_box",
      Self::WhiteShulkerBox(_) => &"white_shulker_box",
      Self::OrangeShulkerBox(_) => &"orange_shulker_box",
      Self::MagentaShulkerBox(_) => &"magenta_shulker_box",
      Self::LightBlueShulkerBox(_) => &"light_blue_shulker_box",
      Self::YellowShulkerBox(_) => &"yellow_shulker_box",
      Self::LimeShulkerBox(_) => &"lime_shulker_box",
      Self::PinkShulkerBox(_) => &"pink_shulker_box",
      Self::GrayShulkerBox(_) => &"gray_shulker_box",
      Self::LightGrayShulkerBox(_) => &"light_gray_shulker_box",
      Self::CyanShulkerBox(_) => &"cyan_shulker_box",
      Self::PurpleShulkerBox(_) => &"purple_shulker_box",
      Self::BlueShulkerBox(_) => &"blue_shulker_box",
      Self::BrownShulkerBox(_) => &"brown_shulker_box",
      Self::GreenShulkerBox(_) => &"green_shulker_box",
      Self::RedShulkerBox(_) => &"red_shulker_box",
      Self::BlackShulkerBox(_) => &"black_shulker_box",
      Self::WhiteGlazedTerracotta(_) => &"white_glazed_terracotta",
      Self::OrangeGlazedTerracotta(_) => &"orange_glazed_terracotta",
      Self::MagentaGlazedTerracotta(_) => &"magenta_glazed_terracotta",
      Self::LightBlueGlazedTerracotta(_) => &"light_blue_glazed_terracotta",
      Self::YellowGlazedTerracotta(_) => &"yellow_glazed_terracotta",
      Self::LimeGlazedTerracotta(_) => &"lime_glazed_terracotta",
      Self::PinkGlazedTerracotta(_) => &"pink_glazed_terracotta",
      Self::GrayGlazedTerracotta(_) => &"gray_glazed_terracotta",
      Self::LightGrayGlazedTerracotta(_) => &"light_gray_glazed_terracotta",
      Self::CyanGlazedTerracotta(_) => &"cyan_glazed_terracotta",
      Self::PurpleGlazedTerracotta(_) => &"purple_glazed_terracotta",
      Self::BlueGlazedTerracotta(_) => &"blue_glazed_terracotta",
      Self::BrownGlazedTerracotta(_) => &"brown_glazed_terracotta",
      Self::GreenGlazedTerracotta(_) => &"green_glazed_terracotta",
      Self::RedGlazedTerracotta(_) => &"red_glazed_terracotta",
      Self::BlackGlazedTerracotta(_) => &"black_glazed_terracotta",
      Self::WhiteConcrete => &"white_concrete",
      Self::OrangeConcrete => &"orange_concrete",
      Self::MagentaConcrete => &"magenta_concrete",
      Self::LightBlueConcrete => &"light_blue_concrete",
      Self::YellowConcrete => &"yellow_concrete",
      Self::LimeConcrete => &"lime_concrete",
      Self::PinkConcrete => &"pink_concrete",
      Self::GrayConcrete => &"gray_concrete",
      Self::LightGrayConcrete => &"light_gray_concrete",
      Self::CyanConcrete => &"cyan_concrete",
      Self::PurpleConcrete => &"purple_concrete",
      Self::BlueConcrete => &"blue_concrete",
      Self::BrownConcrete => &"brown_concrete",
      Self::GreenConcrete => &"green_concrete",
      Self::RedConcrete => &"red_concrete",
      Self::BlackConcrete => &"black_concrete",
      Self::WhiteConcretePowder => &"white_concrete_powder",
      Self::OrangeConcretePowder => &"orange_concrete_powder",
      Self::MagentaConcretePowder => &"magenta_concrete_powder",
      Self::LightBlueConcretePowder => &"light_blue_concrete_powder",
      Self::YellowConcretePowder => &"yellow_concrete_powder",
      Self::LimeConcretePowder => &"lime_concrete_powder",
      Self::PinkConcretePowder => &"pink_concrete_powder",
      Self::GrayConcretePowder => &"gray_concrete_powder",
      Self::LightGrayConcretePowder => &"light_gray_concrete_powder",
      Self::CyanConcretePowder => &"cyan_concrete_powder",
      Self::PurpleConcretePowder => &"purple_concrete_powder",
      Self::BlueConcretePowder => &"blue_concrete_powder",
      Self::BrownConcretePowder => &"brown_concrete_powder",
      Self::GreenConcretePowder => &"green_concrete_powder",
      Self::RedConcretePowder => &"red_concrete_powder",
      Self::BlackConcretePowder => &"black_concrete_powder",
      Self::Kelp(_) => &"kelp",
      Self::KelpPlant => &"kelp_plant",
      Self::DriedKelpBlock => &"dried_kelp_block",
      Self::TurtleEgg(_) => &"turtle_egg",
      Self::DeadTubeCoralBlock => &"dead_tube_coral_block",
      Self::DeadBrainCoralBlock => &"dead_brain_coral_block",
      Self::DeadBubbleCoralBlock => &"dead_bubble_coral_block",
      Self::DeadFireCoralBlock => &"dead_fire_coral_block",
      Self::DeadHornCoralBlock => &"dead_horn_coral_block",
      Self::TubeCoralBlock => &"tube_coral_block",
      Self::BrainCoralBlock => &"brain_coral_block",
      Self::BubbleCoralBlock => &"bubble_coral_block",
      Self::FireCoralBlock => &"fire_coral_block",
      Self::HornCoralBlock => &"horn_coral_block",
      Self::DeadTubeCoral(_) => &"dead_tube_coral",
      Self::DeadBrainCoral(_) => &"dead_brain_coral",
      Self::DeadBubbleCoral(_) => &"dead_bubble_coral",
      Self::DeadFireCoral(_) => &"dead_fire_coral",
      Self::DeadHornCoral(_) => &"dead_horn_coral",
      Self::TubeCoral(_) => &"tube_coral",
      Self::BrainCoral(_) => &"brain_coral",
      Self::BubbleCoral(_) => &"bubble_coral",
      Self::FireCoral(_) => &"fire_coral",
      Self::HornCoral(_) => &"horn_coral",
      Self::DeadTubeCoralFan(_) => &"dead_tube_coral_fan",
      Self::DeadBrainCoralFan(_) => &"dead_brain_coral_fan",
      Self::DeadBubbleCoralFan(_) => &"dead_bubble_coral_fan",
      Self::DeadFireCoralFan(_) => &"dead_fire_coral_fan",
      Self::DeadHornCoralFan(_) => &"dead_horn_coral_fan",
      Self::TubeCoralFan(_) => &"tube_coral_fan",
      Self::BrainCoralFan(_) => &"brain_coral_fan",
      Self::BubbleCoralFan(_) => &"bubble_coral_fan",
      Self::FireCoralFan(_) => &"fire_coral_fan",
      Self::HornCoralFan(_) => &"horn_coral_fan",
      Self::DeadTubeCoralWallFan(_) => &"dead_tube_coral_wall_fan",
      Self::DeadBrainCoralWallFan(_) => &"dead_brain_coral_wall_fan",
      Self::DeadBubbleCoralWallFan(_) => &"dead_bubble_coral_wall_fan",
      Self::DeadFireCoralWallFan(_) => &"dead_fire_coral_wall_fan",
      Self::DeadHornCoralWallFan(_) => &"dead_horn_coral_wall_fan",
      Self::TubeCoralWallFan(_) => &"tube_coral_wall_fan",
      Self::BrainCoralWallFan(_) => &"brain_coral_wall_fan",
      Self::BubbleCoralWallFan(_) => &"bubble_coral_wall_fan",
      Self::FireCoralWallFan(_) => &"fire_coral_wall_fan",
      Self::HornCoralWallFan(_) => &"horn_coral_wall_fan",
      Self::SeaPickle(_) => &"sea_pickle",
      Self::BlueIce => &"blue_ice",
      Self::Conduit(_) => &"conduit",
      Self::BambooSapling => &"bamboo_sapling",
      Self::Bamboo(_) => &"bamboo",
      Self::PottedBamboo => &"potted_bamboo",
      Self::VoidAir => &"void_air",
      Self::CaveAir => &"cave_air",
      Self::BubbleColumn(_) => &"bubble_column",
      Self::PolishedGraniteStairs(_) => &"polished_granite_stairs",
      Self::SmoothRedSandstoneStairs(_) => &"smooth_red_sandstone_stairs",
      Self::MossyStoneBrickStairs(_) => &"mossy_stone_brick_stairs",
      Self::PolishedDioriteStairs(_) => &"polished_diorite_stairs",
      Self::MossyCobblestoneStairs(_) => &"mossy_cobblestone_stairs",
      Self::EndStoneBrickStairs(_) => &"end_stone_brick_stairs",
      Self::StoneStairs(_) => &"stone_stairs",
      Self::SmoothSandstoneStairs(_) => &"smooth_sandstone_stairs",
      Self::SmoothQuartzStairs(_) => &"smooth_quartz_stairs",
      Self::GraniteStairs(_) => &"granite_stairs",
      Self::AndesiteStairs(_) => &"andesite_stairs",
      Self::RedNetherBrickStairs(_) => &"red_nether_brick_stairs",
      Self::PolishedAndesiteStairs(_) => &"polished_andesite_stairs",
      Self::DioriteStairs(_) => &"diorite_stairs",
      Self::PolishedGraniteSlab(_) => &"polished_granite_slab",
      Self::SmoothRedSandstoneSlab(_) => &"smooth_red_sandstone_slab",
      Self::MossyStoneBrickSlab(_) => &"mossy_stone_brick_slab",
      Self::PolishedDioriteSlab(_) => &"polished_diorite_slab",
      Self::MossyCobblestoneSlab(_) => &"mossy_cobblestone_slab",
      Self::EndStoneBrickSlab(_) => &"end_stone_brick_slab",
      Self::SmoothSandstoneSlab(_) => &"smooth_sandstone_slab",
      Self::SmoothQuartzSlab(_) => &"smooth_quartz_slab",
      Self::GraniteSlab(_) => &"granite_slab",
      Self::AndesiteSlab(_) => &"andesite_slab",
      Self::RedNetherBrickSlab(_) => &"red_nether_brick_slab",
      Self::PolishedAndesiteSlab(_) => &"polished_andesite_slab",
      Self::DioriteSlab(_) => &"diorite_slab",
      Self::BrickWall(_) => &"brick_wall",
      Self::PrismarineWall(_) => &"prismarine_wall",
      Self::RedSandstoneWall(_) => &"red_sandstone_wall",
      Self::MossyStoneBrickWall(_) => &"mossy_stone_brick_wall",
      Self::GraniteWall(_) => &"granite_wall",
      Self::StoneBrickWall(_) => &"stone_brick_wall",
      Self::NetherBrickWall(_) => &"nether_brick_wall",
      Self::AndesiteWall(_) => &"andesite_wall",
      Self::RedNetherBrickWall(_) => &"red_nether_brick_wall",
      Self::SandstoneWall(_) => &"sandstone_wall",
      Self::EndStoneBrickWall(_) => &"end_stone_brick_wall",
      Self::DioriteWall(_) => &"diorite_wall",
      Self::Scaffolding(_) => &"scaffolding",
      Self::Loom(_) => &"loom",
      Self::Barrel(_) => &"barrel",
      Self::Smoker(_) => &"smoker",
      Self::BlastFurnace(_) => &"blast_furnace",
      Self::CartographyTable => &"cartography_table",
      Self::FletchingTable => &"fletching_table",
      Self::Grindstone(_) => &"grindstone",
      Self::Lectern(_) => &"lectern",
      Self::SmithingTable => &"smithing_table",
      Self::Stonecutter(_) => &"stonecutter",
      Self::Bell(_) => &"bell",
      Self::Lantern(_) => &"lantern",
      Self::Campfire(_) => &"campfire",
      Self::SweetBerryBush(_) => &"sweet_berry_bush",
      Self::StructureBlock(_) => &"structure_block",
      Self::Jigsaw(_) => &"jigsaw",
      Self::Composter(_) => &"composter",
      Self::BeeNest(_) => &"bee_nest",
      Self::Beehive(_) => &"beehive",
      Self::HoneyBlock => &"honey_block",
      Self::HoneycombBlock => &"honeycomb_block",
    };
    NamespacedKey::new(crate::helpers::MINECRAFT_NAMESPACE, name)
  }
  fn from_registry_key(key: &NamespacedKey) -> Option<Self> {
    if *key.namespace() != crate::helpers::MINECRAFT_NAMESPACE {
      return None;
    }
    let hash = rot_xor_shift7_factor142(&(key.key()).clone().into());
    return Some(match hash {
      70 => if(*key.key() == "enchanting_table") {Self::EnchantingTable} else {return None;},
      74 => if(*key.key() == "blue_orchid") {Self::BlueOrchid} else {return None;},
      226 => if(*key.key() == "brick_wall") {Self::BrickWall(WallData::default())} else {return None;},
      277 => if(*key.key() == "bubble_coral_block") {Self::BubbleCoralBlock} else {return None;},
      525 => if(*key.key() == "yellow_wool") {Self::YellowWool} else {return None;},
      583 => if(*key.key() == "end_stone_brick_stairs") {Self::EndStoneBrickStairs(StairsData::default())} else {return None;},
      742 => if(*key.key() == "green_shulker_box") {Self::GreenShulkerBox(BlockFaceData::default())} else {return None;},
      766 => if(*key.key() == "lily_of_the_valley") {Self::LilyOfTheValley} else {return None;},
      767 => if(*key.key() == "sunflower") {Self::Sunflower(SunflowerData::default())} else {return None;},
      890 => if(*key.key() == "acacia_stairs") {Self::AcaciaStairs(StairsData::default())} else {return None;},
      910 => if(*key.key() == "andesite_slab") {Self::AndesiteSlab(SlabData::default())} else {return None;},
      1207 => if(*key.key() == "shulker_box") {Self::ShulkerBox(BlockFaceData::default())} else {return None;},
      1276 => if(*key.key() == "birch_log") {Self::BirchLog(AxisData::default())} else {return None;},
      1283 => if(*key.key() == "birch_wall_sign") {Self::BirchWallSign(WallSignData::default())} else {return None;},
      1347 => if(*key.key() == "magenta_wool") {Self::MagentaWool} else {return None;},
      1365 => if(*key.key() == "potted_birch_sapling") {Self::PottedBirchSapling} else {return None;},
      1589 => if(*key.key() == "cave_air") {Self::CaveAir} else {return None;},
      1803 => if(*key.key() == "loom") {Self::Loom(CardinalData::default())} else {return None;},
      1872 => if(*key.key() == "blue_bed") {Self::BlueBed(BedData::default())} else {return None;},
      2036 => if(*key.key() == "cracked_stone_bricks") {Self::CrackedStoneBricks} else {return None;},
      2355 => if(*key.key() == "glass") {Self::Glass} else {return None;},
      2372 => if(*key.key() == "green_wall_banner") {Self::GreenWallBanner(CardinalData::default())} else {return None;},
      2599 => if(*key.key() == "sandstone_stairs") {Self::SandstoneStairs(StairsData::default())} else {return None;},
      2747 => if(*key.key() == "blue_stained_glass") {Self::BlueStainedGlass} else {return None;},
      2791 => if(*key.key() == "polished_andesite_stairs") {Self::PolishedAndesiteStairs(StairsData::default())} else {return None;},
      2946 => if(*key.key() == "magenta_bed") {Self::MagentaBed(BedData::default())} else {return None;},
      2958 => if(*key.key() == "rose_bush") {Self::RoseBush(RoseBushData::default())} else {return None;},
      3102 => if(*key.key() == "dark_oak_planks") {Self::DarkOakPlanks} else {return None;},
      3147 => if(*key.key() == "detector_rail") {Self::DetectorRail(DetectorRailData::default())} else {return None;},
      3366 => if(*key.key() == "cut_red_sandstone") {Self::CutRedSandstone} else {return None;},
      3502 => if(*key.key() == "yellow_banner") {Self::YellowBanner(BannerData::default())} else {return None;},
      3523 => if(*key.key() == "red_nether_brick_wall") {Self::RedNetherBrickWall(WallData::default())} else {return None;},
      3555 => if(*key.key() == "gray_stained_glass") {Self::GrayStainedGlass} else {return None;},
      3739 => if(*key.key() == "mossy_stone_bricks") {Self::MossyStoneBricks} else {return None;},
      3765 => if(*key.key() == "bubble_column") {Self::BubbleColumn(BubbleColumnData::default())} else {return None;},
      3844 => if(*key.key() == "tall_grass") {Self::TallGrass(TallGrassData::default())} else {return None;},
      3916 => if(*key.key() == "diamond_block") {Self::DiamondBlock} else {return None;},
      4073 => if(*key.key() == "piston") {Self::Piston(PistonData::default())} else {return None;},
      4124 => if(*key.key() == "spruce_planks") {Self::SprucePlanks} else {return None;},
      4193 => if(*key.key() == "smooth_red_sandstone_slab") {Self::SmoothRedSandstoneSlab(SlabData::default())} else {return None;},
      4359 => if(*key.key() == "beacon") {Self::Beacon} else {return None;},
      4528 => if(*key.key() == "birch_planks") {Self::BirchPlanks} else {return None;},
      4587 => if(*key.key() == "white_stained_glass") {Self::WhiteStainedGlass} else {return None;},
      4786 => if(*key.key() == "jukebox") {Self::Jukebox(JukeboxData::default())} else {return None;},
      4813 => if(*key.key() == "blue_glazed_terracotta") {Self::BlueGlazedTerracotta(CardinalData::default())} else {return None;},
      4842 => if(*key.key() == "end_portal_frame") {Self::EndPortalFrame(EndPortalFrameData::default())} else {return None;},
      4984 => if(*key.key() == "white_glazed_terracotta") {Self::WhiteGlazedTerracotta(CardinalData::default())} else {return None;},
      5011 => if(*key.key() == "purpur_pillar") {Self::PurpurPillar(AxisData::default())} else {return None;},
      5092 => if(*key.key() == "red_concrete_powder") {Self::RedConcretePowder} else {return None;},
      5209 => if(*key.key() == "end_rod") {Self::EndRod(BlockFaceData::default())} else {return None;},
      5231 => if(*key.key() == "dark_prismarine_stairs") {Self::DarkPrismarineStairs(StairsData::default())} else {return None;},
      5272 => if(*key.key() == "grass_block") {Self::GrassBlock(GrassBlockData::default())} else {return None;},
      5284 => if(*key.key() == "purple_bed") {Self::PurpleBed(BedData::default())} else {return None;},
      5295 => if(*key.key() == "acacia_sapling") {Self::AcaciaSapling(TreeSaplingData::default())} else {return None;},
      5437 => if(*key.key() == "bedrock") {Self::Bedrock} else {return None;},
      5440 => if(*key.key() == "soul_sand") {Self::SoulSand} else {return None;},
      5456 => if(*key.key() == "light_gray_terracotta") {Self::LightGrayTerracotta} else {return None;},
      5478 => if(*key.key() == "dead_brain_coral") {Self::DeadBrainCoral(WaterloggedData::default())} else {return None;},
      5520 => if(*key.key() == "gray_banner") {Self::GrayBanner(BannerData::default())} else {return None;},
      5622 => if(*key.key() == "potted_bamboo") {Self::PottedBamboo} else {return None;},
      5692 => if(*key.key() == "blue_banner") {Self::BlueBanner(BannerData::default())} else {return None;},
      5797 => if(*key.key() == "mossy_stone_brick_slab") {Self::MossyStoneBrickSlab(SlabData::default())} else {return None;},
      5872 => if(*key.key() == "light_blue_concrete_powder") {Self::LightBlueConcretePowder} else {return None;},
      5926 => if(*key.key() == "light_gray_concrete_powder") {Self::LightGrayConcretePowder} else {return None;},
      6315 => if(*key.key() == "cyan_carpet") {Self::CyanCarpet} else {return None;},
      6320 => if(*key.key() == "orange_concrete_powder") {Self::OrangeConcretePowder} else {return None;},
      6326 => if(*key.key() == "acacia_wall_sign") {Self::AcaciaWallSign(WallSignData::default())} else {return None;},
      6330 => if(*key.key() == "fletching_table") {Self::FletchingTable} else {return None;},
      6355 => if(*key.key() == "brown_carpet") {Self::BrownCarpet} else {return None;},
      6647 => if(*key.key() == "hopper") {Self::Hopper(HopperData::default())} else {return None;},
      6669 => if(*key.key() == "azure_bluet") {Self::AzureBluet} else {return None;},
      6687 => if(*key.key() == "vine") {Self::Vine(VineData::default())} else {return None;},
      6778 => if(*key.key() == "chorus_flower") {Self::ChorusFlower(ChorusFlowerData::default())} else {return None;},
      6870 => if(*key.key() == "dead_brain_coral_wall_fan") {Self::DeadBrainCoralWallFan(CoralWallFanData::default())} else {return None;},
      7027 => if(*key.key() == "lilac") {Self::Lilac(LilacData::default())} else {return None;},
      7060 => if(*key.key() == "white_banner") {Self::WhiteBanner(BannerData::default())} else {return None;},
      7147 => if(*key.key() == "stone_brick_slab") {Self::StoneBrickSlab(SlabData::default())} else {return None;},
      7183 => if(*key.key() == "red_bed") {Self::RedBed(BedData::default())} else {return None;},
      7254 => if(*key.key() == "potted_oak_sapling") {Self::PottedOakSapling} else {return None;},
      7395 => if(*key.key() == "bee_nest") {Self::BeeNest(BeeNestData::default())} else {return None;},
      7459 => if(*key.key() == "dark_oak_trapdoor") {Self::DarkOakTrapdoor(TrapdoorData::default())} else {return None;},
      7501 => if(*key.key() == "dead_horn_coral") {Self::DeadHornCoral(WaterloggedData::default())} else {return None;},
      7540 => if(*key.key() == "polished_diorite") {Self::PolishedDiorite} else {return None;},
      7552 => if(*key.key() == "tube_coral_block") {Self::TubeCoralBlock} else {return None;},
      7630 => if(*key.key() == "red_sandstone_wall") {Self::RedSandstoneWall(WallData::default())} else {return None;},
      7728 => if(*key.key() == "terracotta") {Self::Terracotta} else {return None;},
      7922 => if(*key.key() == "polished_diorite_stairs") {Self::PolishedDioriteStairs(StairsData::default())} else {return None;},
      7947 => if(*key.key() == "stone_stairs") {Self::StoneStairs(StairsData::default())} else {return None;},
      8172 => if(*key.key() == "jungle_sapling") {Self::JungleSapling(TreeSaplingData::default())} else {return None;},
      8532 => if(*key.key() == "pink_tulip") {Self::PinkTulip} else {return None;},
      8581 => if(*key.key() == "magenta_glazed_terracotta") {Self::MagentaGlazedTerracotta(CardinalData::default())} else {return None;},
      8678 => if(*key.key() == "magenta_stained_glass_pane") {Self::MagentaStainedGlassPane(GlassPaneData::default())} else {return None;},
      8833 => if(*key.key() == "sea_lantern") {Self::SeaLantern} else {return None;},
      8890 => if(*key.key() == "smooth_red_sandstone") {Self::SmoothRedSandstone} else {return None;},
      9003 => if(*key.key() == "dead_brain_coral_fan") {Self::DeadBrainCoralFan(WaterloggedData::default())} else {return None;},
      9032 => if(*key.key() == "potted_spruce_sapling") {Self::PottedSpruceSapling} else {return None;},
      9069 => if(*key.key() == "fire_coral") {Self::FireCoral(WaterloggedData::default())} else {return None;},
      9431 => if(*key.key() == "brick_slab") {Self::BrickSlab(SlabData::default())} else {return None;},
      9446 => if(*key.key() == "smooth_sandstone_slab") {Self::SmoothSandstoneSlab(SlabData::default())} else {return None;},
      9470 => if(*key.key() == "iron_bars") {Self::IronBars(IronBarsData::default())} else {return None;},
      9654 => if(*key.key() == "cyan_banner") {Self::CyanBanner(BannerData::default())} else {return None;},
      9678 => if(*key.key() == "brown_banner") {Self::BrownBanner(BannerData::default())} else {return None;},
      9825 => if(*key.key() == "bamboo") {Self::Bamboo(BambooData::default())} else {return None;},
      9832 => if(*key.key() == "sweet_berry_bush") {Self::SweetBerryBush(SweetBerryBushData::default())} else {return None;},
      9865 => if(*key.key() == "white_carpet") {Self::WhiteCarpet} else {return None;},
      10042 => if(*key.key() == "jack_o_lantern") {Self::JackOLantern(CardinalData::default())} else {return None;},
      10171 => if(*key.key() == "andesite_wall") {Self::AndesiteWall(WallData::default())} else {return None;},
      10201 => if(*key.key() == "stripped_dark_oak_wood") {Self::StrippedDarkOakWood(AxisData::default())} else {return None;},
      10208 => if(*key.key() == "conduit") {Self::Conduit(WaterloggedData::default())} else {return None;},
      10379 => if(*key.key() == "acacia_door") {Self::AcaciaDoor(DoorData::default())} else {return None;},
      10381 => if(*key.key() == "gray_carpet") {Self::GrayCarpet} else {return None;},
      10425 => if(*key.key() == "white_tulip") {Self::WhiteTulip} else {return None;},
      10680 => if(*key.key() == "bricks") {Self::Bricks} else {return None;},
      10742 => if(*key.key() == "red_nether_brick_slab") {Self::RedNetherBrickSlab(SlabData::default())} else {return None;},
      10754 => if(*key.key() == "prismarine_brick_stairs") {Self::PrismarineBrickStairs(StairsData::default())} else {return None;},
      10887 => if(*key.key() == "spruce_wood") {Self::SpruceWood(AxisData::default())} else {return None;},
      10986 => if(*key.key() == "activator_rail") {Self::ActivatorRail(ActivatorRailData::default())} else {return None;},
      11041 => if(*key.key() == "blue_carpet") {Self::BlueCarpet} else {return None;},
      11305 => if(*key.key() == "oak_door") {Self::OakDoor(DoorData::default())} else {return None;},
      11319 => if(*key.key() == "birch_wood") {Self::BirchWood(AxisData::default())} else {return None;},
      11439 => if(*key.key() == "lime_terracotta") {Self::LimeTerracotta} else {return None;},
      11634 => if(*key.key() == "bubble_coral_fan") {Self::BubbleCoralFan(WaterloggedData::default())} else {return None;},
      11698 => if(*key.key() == "oak_log") {Self::OakLog(AxisData::default())} else {return None;},
      12150 => if(*key.key() == "dead_bush") {Self::DeadBush} else {return None;},
      12155 => if(*key.key() == "kelp") {Self::Kelp(KelpData::default())} else {return None;},
      12320 => if(*key.key() == "oak_fence_gate") {Self::OakFenceGate(FenceGateData::default())} else {return None;},
      12326 => if(*key.key() == "light_weighted_pressure_plate") {Self::LightWeightedPressurePlate(LightWeightedPressurePlateData::default())} else {return None;},
      12410 => if(*key.key() == "cyan_wall_banner") {Self::CyanWallBanner(CardinalData::default())} else {return None;},
      12419 => if(*key.key() == "spruce_wall_sign") {Self::SpruceWallSign(WallSignData::default())} else {return None;},
      12467 => if(*key.key() == "yellow_carpet") {Self::YellowCarpet} else {return None;},
      12497 => if(*key.key() == "jungle_door") {Self::JungleDoor(DoorData::default())} else {return None;},
      12589 => if(*key.key() == "bone_block") {Self::BoneBlock(AxisData::default())} else {return None;},
      12870 => if(*key.key() == "creeper_wall_head") {Self::CreeperWallHead(CardinalData::default())} else {return None;},
      12944 => if(*key.key() == "mossy_stone_brick_wall") {Self::MossyStoneBrickWall(WallData::default())} else {return None;},
      13242 => if(*key.key() == "brown_wall_banner") {Self::BrownWallBanner(CardinalData::default())} else {return None;},
      13301 => if(*key.key() == "quartz_block") {Self::QuartzBlock} else {return None;},
      13415 => if(*key.key() == "piston_head") {Self::PistonHead(PistonHeadData::default())} else {return None;},
      13655 => if(*key.key() == "chorus_plant") {Self::ChorusPlant(ChorusPlantData::default())} else {return None;},
      13775 => if(*key.key() == "oak_fence") {Self::OakFence(FenceData::default())} else {return None;},
      14128 => if(*key.key() == "pink_stained_glass_pane") {Self::PinkStainedGlassPane(GlassPaneData::default())} else {return None;},
      14266 => if(*key.key() == "sea_pickle") {Self::SeaPickle(SeaPickleData::default())} else {return None;},
      14317 => if(*key.key() == "dead_tube_coral_wall_fan") {Self::DeadTubeCoralWallFan(CoralWallFanData::default())} else {return None;},
      14360 => if(*key.key() == "brown_shulker_box") {Self::BrownShulkerBox(BlockFaceData::default())} else {return None;},
      14453 => if(*key.key() == "oak_planks") {Self::OakPlanks} else {return None;},
      14726 => if(*key.key() == "orange_concrete") {Self::OrangeConcrete} else {return None;},
      14843 => if(*key.key() == "red_sandstone_slab") {Self::RedSandstoneSlab(SlabData::default())} else {return None;},
      14865 => if(*key.key() == "fire") {Self::Fire(FireData::default())} else {return None;},
      14964 => if(*key.key() == "melon_stem") {Self::MelonStem(CropStemData::default())} else {return None;},
      15117 => if(*key.key() == "brewing_stand") {Self::BrewingStand(BrewingStandData::default())} else {return None;},
      15204 => if(*key.key() == "wheat") {Self::Wheat(WheatData::default())} else {return None;},
      15215 => if(*key.key() == "jigsaw") {Self::Jigsaw(BlockFaceData::default())} else {return None;},
      15238 => if(*key.key() == "birch_slab") {Self::BirchSlab(SlabData::default())} else {return None;},
      15245 => if(*key.key() == "potted_lily_of_the_valley") {Self::PottedLilyOfTheValley} else {return None;},
      15305 => if(*key.key() == "red_stained_glass_pane") {Self::RedStainedGlassPane(GlassPaneData::default())} else {return None;},
      15320 => if(*key.key() == "cyan_shulker_box") {Self::CyanShulkerBox(BlockFaceData::default())} else {return None;},
      15404 => if(*key.key() == "red_concrete") {Self::RedConcrete} else {return None;},
      15427 => if(*key.key() == "light_gray_bed") {Self::LightGrayBed(BedData::default())} else {return None;},
      15458 => if(*key.key() == "tripwire_hook") {Self::TripwireHook(TripwireHookData::default())} else {return None;},
      15582 => if(*key.key() == "yellow_stained_glass_pane") {Self::YellowStainedGlassPane(GlassPaneData::default())} else {return None;},
      15639 => if(*key.key() == "black_terracotta") {Self::BlackTerracotta} else {return None;},
      15670 => if(*key.key() == "spruce_slab") {Self::SpruceSlab(SlabData::default())} else {return None;},
      15775 => if(*key.key() == "yellow_stained_glass") {Self::YellowStainedGlass} else {return None;},
      15782 => if(*key.key() == "oak_wall_sign") {Self::OakWallSign(WallSignData::default())} else {return None;},
      15824 => if(*key.key() == "prismarine_brick_slab") {Self::PrismarineBrickSlab(SlabData::default())} else {return None;},
      15848 => if(*key.key() == "cut_sandstone") {Self::CutSandstone} else {return None;},
      15928 => if(*key.key() == "magenta_stained_glass") {Self::MagentaStainedGlass} else {return None;},
      15949 => if(*key.key() == "light_gray_concrete") {Self::LightGrayConcrete} else {return None;},
      16038 => if(*key.key() == "light_blue_concrete") {Self::LightBlueConcrete} else {return None;},
      16192 => if(*key.key() == "red_sand") {Self::RedSand} else {return None;},
      16203 => if(*key.key() == "jungle_planks") {Self::JunglePlanks} else {return None;},
      16285 => if(*key.key() == "fern") {Self::Fern} else {return None;},
      16350 => if(*key.key() == "stone_brick_wall") {Self::StoneBrickWall(WallData::default())} else {return None;},
      16424 => if(*key.key() == "jungle_leaves") {Self::JungleLeaves(LeavesData::default())} else {return None;},
      16457 => if(*key.key() == "brown_terracotta") {Self::BrownTerracotta} else {return None;},
      16524 => if(*key.key() == "lime_wall_banner") {Self::LimeWallBanner(CardinalData::default())} else {return None;},
      16578 => if(*key.key() == "red_carpet") {Self::RedCarpet} else {return None;},
      16994 => if(*key.key() == "quartz_slab") {Self::QuartzSlab(SlabData::default())} else {return None;},
      17027 => if(*key.key() == "dead_brain_coral_block") {Self::DeadBrainCoralBlock} else {return None;},
      17103 => if(*key.key() == "yellow_terracotta") {Self::YellowTerracotta} else {return None;},
      17160 => if(*key.key() == "prismarine_wall") {Self::PrismarineWall(WallData::default())} else {return None;},
      17196 => if(*key.key() == "comparator") {Self::Comparator(ComparatorData::default())} else {return None;},
      17437 => if(*key.key() == "mossy_cobblestone_slab") {Self::MossyCobblestoneSlab(SlabData::default())} else {return None;},
      17545 => if(*key.key() == "stripped_oak_wood") {Self::StrippedOakWood(AxisData::default())} else {return None;},
      17566 => if(*key.key() == "purple_terracotta") {Self::PurpleTerracotta} else {return None;},
      17799 => if(*key.key() == "creeper_head") {Self::CreeperHead(CreeperHeadData::default())} else {return None;},
      17835 => if(*key.key() == "brain_coral") {Self::BrainCoral(WaterloggedData::default())} else {return None;},
      17839 => if(*key.key() == "trapped_chest") {Self::TrappedChest(TrappedChestData::default())} else {return None;},
      17894 => if(*key.key() == "birch_pressure_plate") {Self::BirchPressurePlate(PressurePlateData::default())} else {return None;},
      17933 => if(*key.key() == "granite_slab") {Self::GraniteSlab(SlabData::default())} else {return None;},
      17954 => if(*key.key() == "purpur_stairs") {Self::PurpurStairs(StairsData::default())} else {return None;},
      18032 => if(*key.key() == "orange_wall_banner") {Self::OrangeWallBanner(CardinalData::default())} else {return None;},
      18050 => if(*key.key() == "lapis_block") {Self::LapisBlock} else {return None;},
      18060 => if(*key.key() == "dead_tube_coral_fan") {Self::DeadTubeCoralFan(WaterloggedData::default())} else {return None;},
      18198 => if(*key.key() == "oak_leaves") {Self::OakLeaves(LeavesData::default())} else {return None;},
      18237 => if(*key.key() == "white_bed") {Self::WhiteBed(BedData::default())} else {return None;},
      18343 => if(*key.key() == "end_portal") {Self::EndPortal} else {return None;},
      18531 => if(*key.key() == "infested_stone") {Self::InfestedStone} else {return None;},
      18547 => if(*key.key() == "barrier") {Self::Barrier} else {return None;},
      18758 => if(*key.key() == "light_gray_carpet") {Self::LightGrayCarpet} else {return None;},
      18771 => if(*key.key() == "cobblestone_slab") {Self::CobblestoneSlab(SlabData::default())} else {return None;},
      18827 => if(*key.key() == "spawner") {Self::Spawner} else {return None;},
      18881 => if(*key.key() == "jungle_fence") {Self::JungleFence(FenceData::default())} else {return None;},
      19178 => if(*key.key() == "light_blue_carpet") {Self::LightBlueCarpet} else {return None;},
      19246 => if(*key.key() == "lime_shulker_box") {Self::LimeShulkerBox(BlockFaceData::default())} else {return None;},
      19587 => if(*key.key() == "dead_fire_coral_wall_fan") {Self::DeadFireCoralWallFan(CoralWallFanData::default())} else {return None;},
      19743 => if(*key.key() == "redstone_wire") {Self::RedstoneWire(RedstoneWireData::default())} else {return None;},
      19774 => if(*key.key() == "dark_oak_slab") {Self::DarkOakSlab(SlabData::default())} else {return None;},
      19777 => if(*key.key() == "peony") {Self::Peony(PeonyData::default())} else {return None;},
      19922 => if(*key.key() == "orange_shulker_box") {Self::OrangeShulkerBox(BlockFaceData::default())} else {return None;},
      19969 => if(*key.key() == "rail") {Self::Rail(RailData::default())} else {return None;},
      20042 => if(*key.key() == "composter") {Self::Composter(ComposterData::default())} else {return None;},
      20240 => if(*key.key() == "dead_tube_coral") {Self::DeadTubeCoral(WaterloggedData::default())} else {return None;},
      20477 => if(*key.key() == "chiseled_quartz_block") {Self::ChiseledQuartzBlock} else {return None;},
      20532 => if(*key.key() == "infested_mossy_stone_bricks") {Self::InfestedMossyStoneBricks} else {return None;},
      20559 => if(*key.key() == "jungle_button") {Self::JungleButton(ButtonData::default())} else {return None;},
      20665 => if(*key.key() == "potted_dark_oak_sapling") {Self::PottedDarkOakSapling} else {return None;},
      20808 => if(*key.key() == "orange_stained_glass_pane") {Self::OrangeStainedGlassPane(GlassPaneData::default())} else {return None;},
      20927 => if(*key.key() == "yellow_glazed_terracotta") {Self::YellowGlazedTerracotta(CardinalData::default())} else {return None;},
      20982 => if(*key.key() == "jungle_trapdoor") {Self::JungleTrapdoor(TrapdoorData::default())} else {return None;},
      21101 => if(*key.key() == "potted_pink_tulip") {Self::PottedPinkTulip} else {return None;},
      21395 => if(*key.key() == "horn_coral_wall_fan") {Self::HornCoralWallFan(CoralWallFanData::default())} else {return None;},
      21402 => if(*key.key() == "purple_shulker_box") {Self::PurpleShulkerBox(BlockFaceData::default())} else {return None;},
      21635 => if(*key.key() == "heavy_weighted_pressure_plate") {Self::HeavyWeightedPressurePlate(HeavyWeightedPressurePlateData::default())} else {return None;},
      21666 => if(*key.key() == "nether_portal") {Self::NetherPortal(NetherPortalData::default())} else {return None;},
      21683 => if(*key.key() == "brown_glazed_terracotta") {Self::BrownGlazedTerracotta(CardinalData::default())} else {return None;},
      21692 => if(*key.key() == "cyan_glazed_terracotta") {Self::CyanGlazedTerracotta(CardinalData::default())} else {return None;},
      21791 => if(*key.key() == "black_concrete_powder") {Self::BlackConcretePowder} else {return None;},
      21918 => if(*key.key() == "iron_door") {Self::IronDoor(IronDoorData::default())} else {return None;},
      21923 => if(*key.key() == "purple_carpet") {Self::PurpleCarpet} else {return None;},
      21960 => if(*key.key() == "red_terracotta") {Self::RedTerracotta} else {return None;},
      22070 => if(*key.key() == "carved_pumpkin") {Self::CarvedPumpkin(CardinalData::default())} else {return None;},
      22122 => if(*key.key() == "orange_carpet") {Self::OrangeCarpet} else {return None;},
      22191 => if(*key.key() == "smooth_quartz_slab") {Self::SmoothQuartzSlab(SlabData::default())} else {return None;},
      22220 => if(*key.key() == "cyan_bed") {Self::CyanBed(BedData::default())} else {return None;},
      22385 => if(*key.key() == "oak_button") {Self::OakButton(ButtonData::default())} else {return None;},
      22584 => if(*key.key() == "purple_wall_banner") {Self::PurpleWallBanner(CardinalData::default())} else {return None;},
      23182 => if(*key.key() == "wither_skeleton_wall_skull") {Self::WitherSkeletonWallSkull(CardinalData::default())} else {return None;},
      23183 => if(*key.key() == "dark_oak_wood") {Self::DarkOakWood(AxisData::default())} else {return None;},
      23222 => if(*key.key() == "seagrass") {Self::Seagrass} else {return None;},
      23269 => if(*key.key() == "white_wool") {Self::WhiteWool} else {return None;},
      23370 => if(*key.key() == "dead_bubble_coral_wall_fan") {Self::DeadBubbleCoralWallFan(CoralWallFanData::default())} else {return None;},
      23619 => if(*key.key() == "green_concrete_powder") {Self::GreenConcretePowder} else {return None;},
      23646 => if(*key.key() == "light_blue_bed") {Self::LightBlueBed(BedData::default())} else {return None;},
      23728 => if(*key.key() == "lime_stained_glass_pane") {Self::LimeStainedGlassPane(GlassPaneData::default())} else {return None;},
      23738 => if(*key.key() == "orange_bed") {Self::OrangeBed(BedData::default())} else {return None;},
      23837 => if(*key.key() == "purple_glazed_terracotta") {Self::PurpleGlazedTerracotta(CardinalData::default())} else {return None;},
      23952 => if(*key.key() == "potted_dead_bush") {Self::PottedDeadBush} else {return None;},
      23974 => if(*key.key() == "potted_wither_rose") {Self::PottedWitherRose} else {return None;},
      24022 => if(*key.key() == "observer") {Self::Observer(ObserverData::default())} else {return None;},
      24358 => if(*key.key() == "tube_coral_fan") {Self::TubeCoralFan(WaterloggedData::default())} else {return None;},
      24414 => if(*key.key() == "diorite_wall") {Self::DioriteWall(WallData::default())} else {return None;},
      24447 => if(*key.key() == "white_stained_glass_pane") {Self::WhiteStainedGlassPane(GlassPaneData::default())} else {return None;},
      24616 => if(*key.key() == "mossy_cobblestone_wall") {Self::MossyCobblestoneWall(WallData::default())} else {return None;},
      24624 => if(*key.key() == "yellow_concrete") {Self::YellowConcrete} else {return None;},
      24642 => if(*key.key() == "coarse_dirt") {Self::CoarseDirt} else {return None;},
      24643 => if(*key.key() == "cocoa") {Self::Cocoa(CocoaData::default())} else {return None;},
      24713 => if(*key.key() == "pink_bed") {Self::PinkBed(BedData::default())} else {return None;},
      24799 => if(*key.key() == "mossy_stone_brick_stairs") {Self::MossyStoneBrickStairs(StairsData::default())} else {return None;},
      24869 => if(*key.key() == "dried_kelp_block") {Self::DriedKelpBlock} else {return None;},
      24942 => if(*key.key() == "smooth_red_sandstone_stairs") {Self::SmoothRedSandstoneStairs(StairsData::default())} else {return None;},
      25017 => if(*key.key() == "oak_sign") {Self::OakSign(SignData::default())} else {return None;},
      25065 => if(*key.key() == "repeater") {Self::Repeater(RepeaterData::default())} else {return None;},
      25144 => if(*key.key() == "granite_wall") {Self::GraniteWall(WallData::default())} else {return None;},
      25158 => if(*key.key() == "bookshelf") {Self::Bookshelf} else {return None;},
      25199 => if(*key.key() == "grindstone") {Self::Grindstone(GrindstoneData::default())} else {return None;},
      25211 => if(*key.key() == "birch_sapling") {Self::BirchSapling(TreeSaplingData::default())} else {return None;},
      25218 => if(*key.key() == "stripped_jungle_wood") {Self::StrippedJungleWood(AxisData::default())} else {return None;},
      25276 => if(*key.key() == "birch_fence_gate") {Self::BirchFenceGate(FenceGateData::default())} else {return None;},
      25333 => if(*key.key() == "gray_wool") {Self::GrayWool} else {return None;},
      25370 => if(*key.key() == "dark_oak_button") {Self::DarkOakButton(ButtonData::default())} else {return None;},
      25462 => if(*key.key() == "blue_terracotta") {Self::BlueTerracotta} else {return None;},
      25527 => if(*key.key() == "chiseled_red_sandstone") {Self::ChiseledRedSandstone} else {return None;},
      25805 => if(*key.key() == "acacia_fence") {Self::AcaciaFence(FenceData::default())} else {return None;},
      25841 => if(*key.key() == "spruce_log") {Self::SpruceLog(AxisData::default())} else {return None;},
      25883 => if(*key.key() == "acacia_sign") {Self::AcaciaSign(SignData::default())} else {return None;},
      26429 => if(*key.key() == "prismarine_slab") {Self::PrismarineSlab(SlabData::default())} else {return None;},
      26445 => if(*key.key() == "gray_bed") {Self::GrayBed(BedData::default())} else {return None;},
      26505 => if(*key.key() == "red_sandstone") {Self::RedSandstone} else {return None;},
      26654 => if(*key.key() == "bubble_coral_wall_fan") {Self::BubbleCoralWallFan(CoralWallFanData::default())} else {return None;},
      26814 => if(*key.key() == "purple_banner") {Self::PurpleBanner(BannerData::default())} else {return None;},
      26825 => if(*key.key() == "horn_coral_block") {Self::HornCoralBlock} else {return None;},
      26869 => if(*key.key() == "green_bed") {Self::GreenBed(BedData::default())} else {return None;},
      27036 => if(*key.key() == "cobblestone") {Self::Cobblestone} else {return None;},
      27067 => if(*key.key() == "acacia_log") {Self::AcaciaLog(AxisData::default())} else {return None;},
      27119 => if(*key.key() == "mycelium") {Self::Mycelium(MyceliumData::default())} else {return None;},
      27176 => if(*key.key() == "brown_concrete") {Self::BrownConcrete} else {return None;},
      27190 => if(*key.key() == "cyan_concrete") {Self::CyanConcrete} else {return None;},
      27277 => if(*key.key() == "oxeye_daisy") {Self::OxeyeDaisy} else {return None;},
      27445 => if(*key.key() == "magenta_concrete_powder") {Self::MagentaConcretePowder} else {return None;},
      27484 => if(*key.key() == "lantern") {Self::Lantern(LanternData::default())} else {return None;},
      27511 => if(*key.key() == "orange_banner") {Self::OrangeBanner(BannerData::default())} else {return None;},
      27547 => if(*key.key() == "slime_block") {Self::SlimeBlock} else {return None;},
      27717 => if(*key.key() == "blue_wool") {Self::BlueWool} else {return None;},
      27776 => if(*key.key() == "cut_red_sandstone_slab") {Self::CutRedSandstoneSlab(SlabData::default())} else {return None;},
      27999 => if(*key.key() == "brown_stained_glass") {Self::BrownStainedGlass} else {return None;},
      28006 => if(*key.key() == "cobblestone_wall") {Self::CobblestoneWall(WallData::default())} else {return None;},
      28050 => if(*key.key() == "potatoes") {Self::Potatoes(PotatoesData::default())} else {return None;},
      28079 => if(*key.key() == "cyan_stained_glass") {Self::CyanStainedGlass} else {return None;},
      28120 => if(*key.key() == "purple_stained_glass_pane") {Self::PurpleStainedGlassPane(GlassPaneData::default())} else {return None;},
      28251 => if(*key.key() == "fire_coral_block") {Self::FireCoralBlock} else {return None;},
      28257 => if(*key.key() == "stripped_jungle_log") {Self::StrippedJungleLog(AxisData::default())} else {return None;},
      28371 => if(*key.key() == "birch_leaves") {Self::BirchLeaves(LeavesData::default())} else {return None;},
      28536 => if(*key.key() == "potted_brown_mushroom") {Self::PottedBrownMushroom} else {return None;},
      28543 => if(*key.key() == "spruce_leaves") {Self::SpruceLeaves(LeavesData::default())} else {return None;},
      28635 => if(*key.key() == "diorite") {Self::Diorite} else {return None;},
      28859 => if(*key.key() == "yellow_wall_banner") {Self::YellowWallBanner(CardinalData::default())} else {return None;},
      28993 => if(*key.key() == "repeating_command_block") {Self::RepeatingCommandBlock(CommandBlockData::default())} else {return None;},
      29084 => if(*key.key() == "moving_piston") {Self::MovingPiston(PistonData::default())} else {return None;},
      29100 => if(*key.key() == "infested_stone_bricks") {Self::InfestedStoneBricks} else {return None;},
      29565 => if(*key.key() == "dark_oak_leaves") {Self::DarkOakLeaves(LeavesData::default())} else {return None;},
      29592 => if(*key.key() == "infested_chiseled_stone_bricks") {Self::InfestedChiseledStoneBricks} else {return None;},
      29661 => if(*key.key() == "smooth_stone_slab") {Self::SmoothStoneSlab(SlabData::default())} else {return None;},
      29713 => if(*key.key() == "dark_oak_log") {Self::DarkOakLog(AxisData::default())} else {return None;},
      29787 => if(*key.key() == "light_gray_banner") {Self::LightGrayBanner(BannerData::default())} else {return None;},
      29809 => if(*key.key() == "mossy_cobblestone_stairs") {Self::MossyCobblestoneStairs(StairsData::default())} else {return None;},
      29941 => if(*key.key() == "granite_stairs") {Self::GraniteStairs(StairsData::default())} else {return None;},
      29990 => if(*key.key() == "torch") {Self::Torch} else {return None;},
      30028 => if(*key.key() == "pink_wall_banner") {Self::PinkWallBanner(CardinalData::default())} else {return None;},
      30085 => if(*key.key() == "magenta_shulker_box") {Self::MagentaShulkerBox(BlockFaceData::default())} else {return None;},
      30579 => if(*key.key() == "anvil") {Self::Anvil(CardinalData::default())} else {return None;},
      30648 => if(*key.key() == "clay") {Self::Clay} else {return None;},
      30656 => if(*key.key() == "brain_coral_block") {Self::BrainCoralBlock} else {return None;},
      30684 => if(*key.key() == "player_head") {Self::PlayerHead(PlayerHeadData::default())} else {return None;},
      30711 => if(*key.key() == "light_blue_banner") {Self::LightBlueBanner(BannerData::default())} else {return None;},
      30765 => if(*key.key() == "stripped_oak_log") {Self::StrippedOakLog(AxisData::default())} else {return None;},
      30847 => if(*key.key() == "hay_block") {Self::HayBlock(AxisData::default())} else {return None;},
      30972 => if(*key.key() == "kelp_plant") {Self::KelpPlant} else {return None;},
      31092 => if(*key.key() == "purple_concrete") {Self::PurpleConcrete} else {return None;},
      31442 => if(*key.key() == "magenta_terracotta") {Self::MagentaTerracotta} else {return None;},
      31448 => if(*key.key() == "stripped_acacia_wood") {Self::StrippedAcaciaWood(AxisData::default())} else {return None;},
      31513 => if(*key.key() == "yellow_shulker_box") {Self::YellowShulkerBox(BlockFaceData::default())} else {return None;},
      31595 => if(*key.key() == "diorite_slab") {Self::DioriteSlab(SlabData::default())} else {return None;},
      31599 => if(*key.key() == "sticky_piston") {Self::StickyPiston(PistonData::default())} else {return None;},
      31929 => if(*key.key() == "prismarine_stairs") {Self::PrismarineStairs(StairsData::default())} else {return None;},
      32026 => if(*key.key() == "snow") {Self::Snow(SnowData::default())} else {return None;},
      32065 => if(*key.key() == "jungle_sign") {Self::JungleSign(SignData::default())} else {return None;},
      32100 => if(*key.key() == "orange_glazed_terracotta") {Self::OrangeGlazedTerracotta(CardinalData::default())} else {return None;},
      32223 => if(*key.key() == "red_banner") {Self::RedBanner(BannerData::default())} else {return None;},
      32295 => if(*key.key() == "magenta_wall_banner") {Self::MagentaWallBanner(CardinalData::default())} else {return None;},
      32436 => if(*key.key() == "birch_button") {Self::BirchButton(ButtonData::default())} else {return None;},
      32494 => if(*key.key() == "pink_shulker_box") {Self::PinkShulkerBox(BlockFaceData::default())} else {return None;},
      32500 => if(*key.key() == "light_blue_glazed_terracotta") {Self::LightBlueGlazedTerracotta(CardinalData::default())} else {return None;},
      32536 => if(*key.key() == "spruce_button") {Self::SpruceButton(ButtonData::default())} else {return None;},
      32666 => if(*key.key() == "lava") {Self::Lava(FluidData::default())} else {return None;},
      32667 => if(*key.key() == "netherrack") {Self::Netherrack} else {return None;},
      32689 => if(*key.key() == "red_glazed_terracotta") {Self::RedGlazedTerracotta(CardinalData::default())} else {return None;},
      32734 => if(*key.key() == "nether_brick_fence") {Self::NetherBrickFence(FenceData::default())} else {return None;},
      32836 => if(*key.key() == "magenta_concrete") {Self::MagentaConcrete} else {return None;},
      32874 => if(*key.key() == "jungle_slab") {Self::JungleSlab(SlabData::default())} else {return None;},
      32975 => if(*key.key() == "oak_pressure_plate") {Self::OakPressurePlate(PressurePlateData::default())} else {return None;},
      33007 => if(*key.key() == "oak_sapling") {Self::OakSapling(TreeSaplingData::default())} else {return None;},
      33014 => if(*key.key() == "pink_wool") {Self::PinkWool} else {return None;},
      33025 => if(*key.key() == "barrel") {Self::Barrel(BarrelData::default())} else {return None;},
      33125 => if(*key.key() == "nether_quartz_ore") {Self::NetherQuartzOre} else {return None;},
      33235 => if(*key.key() == "fire_coral_wall_fan") {Self::FireCoralWallFan(CoralWallFanData::default())} else {return None;},
      33362 => if(*key.key() == "oak_stairs") {Self::OakStairs(StairsData::default())} else {return None;},
      33638 => if(*key.key() == "dark_oak_fence_gate") {Self::DarkOakFenceGate(FenceGateData::default())} else {return None;},
      33692 => if(*key.key() == "potted_acacia_sapling") {Self::PottedAcaciaSapling} else {return None;},
      33713 => if(*key.key() == "sugar_cane") {Self::SugarCane(SugarCaneData::default())} else {return None;},
      33953 => if(*key.key() == "nether_bricks") {Self::NetherBricks} else {return None;},
      34156 => if(*key.key() == "jungle_stairs") {Self::JungleStairs(StairsData::default())} else {return None;},
      34303 => if(*key.key() == "blue_stained_glass_pane") {Self::BlueStainedGlassPane(GlassPaneData::default())} else {return None;},
      34484 => if(*key.key() == "potted_azure_bluet") {Self::PottedAzureBluet} else {return None;},
      34548 => if(*key.key() == "wet_sponge") {Self::WetSponge} else {return None;},
      34796 => if(*key.key() == "horn_coral") {Self::HornCoral(WaterloggedData::default())} else {return None;},
      35039 => if(*key.key() == "potted_jungle_sapling") {Self::PottedJungleSapling} else {return None;},
      35297 => if(*key.key() == "dead_fire_coral_fan") {Self::DeadFireCoralFan(WaterloggedData::default())} else {return None;},
      35331 => if(*key.key() == "horn_coral_fan") {Self::HornCoralFan(WaterloggedData::default())} else {return None;},
      35442 => if(*key.key() == "bell") {Self::Bell(BellData::default())} else {return None;},
      35575 => if(*key.key() == "nether_brick_stairs") {Self::NetherBrickStairs(StairsData::default())} else {return None;},
      35619 => if(*key.key() == "oak_wood") {Self::OakWood(AxisData::default())} else {return None;},
      35645 => if(*key.key() == "birch_door") {Self::BirchDoor(DoorData::default())} else {return None;},
      35965 => if(*key.key() == "magenta_banner") {Self::MagentaBanner(BannerData::default())} else {return None;},
      36037 => if(*key.key() == "pumpkin") {Self::Pumpkin} else {return None;},
      36177 => if(*key.key() == "purpur_slab") {Self::PurpurSlab(SlabData::default())} else {return None;},
      36223 => if(*key.key() == "lime_glazed_terracotta") {Self::LimeGlazedTerracotta(CardinalData::default())} else {return None;},
      36237 => if(*key.key() == "spruce_door") {Self::SpruceDoor(DoorData::default())} else {return None;},
      36264 => if(*key.key() == "pink_glazed_terracotta") {Self::PinkGlazedTerracotta(CardinalData::default())} else {return None;},
      36673 => if(*key.key() == "campfire") {Self::Campfire(CampfireData::default())} else {return None;},
      36737 => if(*key.key() == "acacia_wood") {Self::AcaciaWood(AxisData::default())} else {return None;},
      36902 => if(*key.key() == "iron_block") {Self::IronBlock} else {return None;},
      36939 => if(*key.key() == "fire_coral_fan") {Self::FireCoralFan(WaterloggedData::default())} else {return None;},
      36967 => if(*key.key() == "skeleton_wall_skull") {Self::SkeletonWallSkull(CardinalData::default())} else {return None;},
      36997 => if(*key.key() == "glowstone") {Self::Glowstone} else {return None;},
      37137 => if(*key.key() == "allium") {Self::Allium} else {return None;},
      37291 => if(*key.key() == "polished_granite_stairs") {Self::PolishedGraniteStairs(StairsData::default())} else {return None;},
      37560 => if(*key.key() == "gray_glazed_terracotta") {Self::GrayGlazedTerracotta(CardinalData::default())} else {return None;},
      37724 => if(*key.key() == "pumpkin_stem") {Self::PumpkinStem(CropStemData::default())} else {return None;},
      37801 => if(*key.key() == "dead_horn_coral_fan") {Self::DeadHornCoralFan(WaterloggedData::default())} else {return None;},
      37811 => if(*key.key() == "grass") {Self::Grass} else {return None;},
      38138 => if(*key.key() == "iron_ore") {Self::IronOre} else {return None;},
      38167 => if(*key.key() == "flower_pot") {Self::FlowerPot} else {return None;},
      38324 => if(*key.key() == "redstone_torch") {Self::RedstoneTorch(RedstoneTorchData::default())} else {return None;},
      38426 => if(*key.key() == "dragon_head") {Self::DragonHead(DragonHeadData::default())} else {return None;},
      38476 => if(*key.key() == "purple_wool") {Self::PurpleWool} else {return None;},
      38494 => if(*key.key() == "dead_bubble_coral") {Self::DeadBubbleCoral(WaterloggedData::default())} else {return None;},
      38603 => if(*key.key() == "farmland") {Self::Farmland(FarmlandData::default())} else {return None;},
      38607 => if(*key.key() == "brown_bed") {Self::BrownBed(BedData::default())} else {return None;},
      38686 => if(*key.key() == "sandstone") {Self::Sandstone} else {return None;},
      38694 => if(*key.key() == "black_shulker_box") {Self::BlackShulkerBox(BlockFaceData::default())} else {return None;},
      38782 => if(*key.key() == "polished_andesite") {Self::PolishedAndesite} else {return None;},
      38796 => if(*key.key() == "yellow_bed") {Self::YellowBed(BedData::default())} else {return None;},
      38875 => if(*key.key() == "jungle_wood") {Self::JungleWood(AxisData::default())} else {return None;},
      38960 => if(*key.key() == "acacia_slab") {Self::AcaciaSlab(SlabData::default())} else {return None;},
      38970 => if(*key.key() == "dark_prismarine") {Self::DarkPrismarine} else {return None;},
      39052 => if(*key.key() == "end_gateway") {Self::EndGateway} else {return None;},
      39149 => if(*key.key() == "coal_block") {Self::CoalBlock} else {return None;},
      39241 => if(*key.key() == "light_blue_stained_glass_pane") {Self::LightBlueStainedGlassPane(GlassPaneData::default())} else {return None;},
      39252 => if(*key.key() == "purple_concrete_powder") {Self::PurpleConcretePowder} else {return None;},
      39272 => if(*key.key() == "orange_wool") {Self::OrangeWool} else {return None;},
      39281 => if(*key.key() == "sandstone_wall") {Self::SandstoneWall(WallData::default())} else {return None;},
      39359 => if(*key.key() == "glass_pane") {Self::GlassPane(GlassPaneData::default())} else {return None;},
      39392 => if(*key.key() == "melon") {Self::Melon} else {return None;},
      39446 => if(*key.key() == "lime_wool") {Self::LimeWool} else {return None;},
      39459 => if(*key.key() == "spruce_trapdoor") {Self::SpruceTrapdoor(TrapdoorData::default())} else {return None;},
      39475 => if(*key.key() == "nether_brick_wall") {Self::NetherBrickWall(WallData::default())} else {return None;},
      39496 => if(*key.key() == "birch_trapdoor") {Self::BirchTrapdoor(TrapdoorData::default())} else {return None;},
      39686 => if(*key.key() == "chipped_anvil") {Self::ChippedAnvil(CardinalData::default())} else {return None;},
      39821 => if(*key.key() == "gravel") {Self::Gravel} else {return None;},
      39914 => if(*key.key() == "dead_tube_coral_block") {Self::DeadTubeCoralBlock} else {return None;},
      39935 => if(*key.key() == "green_concrete") {Self::GreenConcrete} else {return None;},
      40068 => if(*key.key() == "black_wall_banner") {Self::BlackWallBanner(CardinalData::default())} else {return None;},
      40082 => if(*key.key() == "oak_slab") {Self::OakSlab(SlabData::default())} else {return None;},
      40107 => if(*key.key() == "zombie_head") {Self::ZombieHead(ZombieHeadData::default())} else {return None;},
      40132 => if(*key.key() == "end_stone_brick_slab") {Self::EndStoneBrickSlab(SlabData::default())} else {return None;},
      40179 => if(*key.key() == "potted_blue_orchid") {Self::PottedBlueOrchid} else {return None;},
      40231 => if(*key.key() == "smoker") {Self::Smoker(CardinalLightableData::default())} else {return None;},
      40328 => if(*key.key() == "stone") {Self::Stone} else {return None;},
      40643 => if(*key.key() == "dead_horn_coral_wall_fan") {Self::DeadHornCoralWallFan(CoralWallFanData::default())} else {return None;},
      40785 => if(*key.key() == "black_concrete") {Self::BlackConcrete} else {return None;},
      40917 => if(*key.key() == "redstone_block") {Self::RedstoneBlock} else {return None;},
      40925 => if(*key.key() == "stripped_birch_wood") {Self::StrippedBirchWood(AxisData::default())} else {return None;},
      41103 => if(*key.key() == "dead_bubble_coral_block") {Self::DeadBubbleCoralBlock} else {return None;},
      41119 => if(*key.key() == "player_wall_head") {Self::PlayerWallHead(CardinalData::default())} else {return None;},
      41130 => if(*key.key() == "frosted_ice") {Self::FrostedIce(FrostedIceData::default())} else {return None;},
      41148 => if(*key.key() == "lime_bed") {Self::LimeBed(BedData::default())} else {return None;},
      41153 => if(*key.key() == "white_concrete_powder") {Self::WhiteConcretePowder} else {return None;},
      41581 => if(*key.key() == "cyan_wool") {Self::CyanWool} else {return None;},
      41584 => if(*key.key() == "light_blue_wall_banner") {Self::LightBlueWallBanner(CardinalData::default())} else {return None;},
      41606 => if(*key.key() == "potted_allium") {Self::PottedAllium} else {return None;},
      41638 => if(*key.key() == "spruce_fence_gate") {Self::SpruceFenceGate(FenceGateData::default())} else {return None;},
      41804 => if(*key.key() == "gray_terracotta") {Self::GrayTerracotta} else {return None;},
      41865 => if(*key.key() == "light_gray_stained_glass_pane") {Self::LightGrayStainedGlassPane(GlassPaneData::default())} else {return None;},
      41868 => if(*key.key() == "void_air") {Self::VoidAir} else {return None;},
      41869 => if(*key.key() == "brown_wool") {Self::BrownWool} else {return None;},
      42131 => if(*key.key() == "command_block") {Self::CommandBlock(CommandBlockData::default())} else {return None;},
      42228 => if(*key.key() == "end_stone") {Self::EndStone} else {return None;},
      42284 => if(*key.key() == "honey_block") {Self::HoneyBlock} else {return None;},
      42336 => if(*key.key() == "dispenser") {Self::Dispenser(DispenserData::default())} else {return None;},
      42389 => if(*key.key() == "andesite_stairs") {Self::AndesiteStairs(StairsData::default())} else {return None;},
      42517 => if(*key.key() == "blue_concrete_powder") {Self::BlueConcretePowder} else {return None;},
      42611 => if(*key.key() == "chiseled_stone_bricks") {Self::ChiseledStoneBricks} else {return None;},
      42778 => if(*key.key() == "nether_wart") {Self::NetherWart(NetherWartData::default())} else {return None;},
      42889 => if(*key.key() == "blue_shulker_box") {Self::BlueShulkerBox(BlockFaceData::default())} else {return None;},
      42914 => if(*key.key() == "iron_trapdoor") {Self::IronTrapdoor(IronTrapdoorData::default())} else {return None;},
      42947 => if(*key.key() == "gray_concrete_powder") {Self::GrayConcretePowder} else {return None;},
      43061 => if(*key.key() == "mossy_cobblestone") {Self::MossyCobblestone} else {return None;},
      43086 => if(*key.key() == "acacia_pressure_plate") {Self::AcaciaPressurePlate(PressurePlateData::default())} else {return None;},
      43104 => if(*key.key() == "black_bed") {Self::BlackBed(BedData::default())} else {return None;},
      43127 => if(*key.key() == "granite") {Self::Granite} else {return None;},
      43139 => if(*key.key() == "end_stone_bricks") {Self::EndStoneBricks} else {return None;},
      43474 => if(*key.key() == "light_blue_shulker_box") {Self::LightBlueShulkerBox(BlockFaceData::default())} else {return None;},
      43538 => if(*key.key() == "purpur_block") {Self::PurpurBlock} else {return None;},
      43579 => if(*key.key() == "spruce_stairs") {Self::SpruceStairs(StairsData::default())} else {return None;},
      43800 => if(*key.key() == "dead_bubble_coral_fan") {Self::DeadBubbleCoralFan(WaterloggedData::default())} else {return None;},
      43830 => if(*key.key() == "redstone_ore") {Self::RedstoneOre(RedstoneOreData::default())} else {return None;},
      43927 => if(*key.key() == "birch_stairs") {Self::BirchStairs(StairsData::default())} else {return None;},
      43996 => if(*key.key() == "yellow_concrete_powder") {Self::YellowConcretePowder} else {return None;},
      44048 => if(*key.key() == "cartography_table") {Self::CartographyTable} else {return None;},
      44075 => if(*key.key() == "blue_wall_banner") {Self::BlueWallBanner(CardinalData::default())} else {return None;},
      44111 => if(*key.key() == "smooth_sandstone_stairs") {Self::SmoothSandstoneStairs(StairsData::default())} else {return None;},
      44113 => if(*key.key() == "prismarine") {Self::Prismarine} else {return None;},
      44120 => if(*key.key() == "green_glazed_terracotta") {Self::GreenGlazedTerracotta(CardinalData::default())} else {return None;},
      44228 => if(*key.key() == "pink_terracotta") {Self::PinkTerracotta} else {return None;},
      44370 => if(*key.key() == "air") {Self::Air} else {return None;},
      44440 => if(*key.key() == "obsidian") {Self::Obsidian} else {return None;},
      44559 => if(*key.key() == "black_glazed_terracotta") {Self::BlackGlazedTerracotta(CardinalData::default())} else {return None;},
      44623 => if(*key.key() == "red_mushroom") {Self::RedMushroom} else {return None;},
      44650 => if(*key.key() == "potted_dandelion") {Self::PottedDandelion} else {return None;},
      44712 => if(*key.key() == "dragon_wall_head") {Self::DragonWallHead(CardinalData::default())} else {return None;},
      44749 => if(*key.key() == "smooth_stone") {Self::SmoothStone} else {return None;},
      44804 => if(*key.key() == "lever") {Self::Lever(LeverData::default())} else {return None;},
      44811 => if(*key.key() == "red_nether_brick_stairs") {Self::RedNetherBrickStairs(StairsData::default())} else {return None;},
      45077 => if(*key.key() == "dark_oak_sign") {Self::DarkOakSign(SignData::default())} else {return None;},
      45085 => if(*key.key() == "attached_pumpkin_stem") {Self::AttachedPumpkinStem(CardinalData::default())} else {return None;},
      45130 => if(*key.key() == "nether_wart_block") {Self::NetherWartBlock} else {return None;},
      45248 => if(*key.key() == "dark_oak_wall_sign") {Self::DarkOakWallSign(WallSignData::default())} else {return None;},
      45387 => if(*key.key() == "gray_wall_banner") {Self::GrayWallBanner(CardinalData::default())} else {return None;},
      45408 => if(*key.key() == "magenta_carpet") {Self::MagentaCarpet} else {return None;},
      45520 => if(*key.key() == "water") {Self::Water(FluidData::default())} else {return None;},
      45718 => if(*key.key() == "potted_orange_tulip") {Self::PottedOrangeTulip} else {return None;},
      45744 => if(*key.key() == "brain_coral_wall_fan") {Self::BrainCoralWallFan(CoralWallFanData::default())} else {return None;},
      45819 => if(*key.key() == "structure_void") {Self::StructureVoid} else {return None;},
      45858 => if(*key.key() == "snow_block") {Self::SnowBlock} else {return None;},
      45983 => if(*key.key() == "scaffolding") {Self::Scaffolding(ScaffoldingData::default())} else {return None;},
      46080 => if(*key.key() == "potted_white_tulip") {Self::PottedWhiteTulip} else {return None;},
      46203 => if(*key.key() == "spruce_sapling") {Self::SpruceSapling(TreeSaplingData::default())} else {return None;},
      46258 => if(*key.key() == "light_gray_shulker_box") {Self::LightGrayShulkerBox(BlockFaceData::default())} else {return None;},
      46453 => if(*key.key() == "dark_oak_sapling") {Self::DarkOakSapling(TreeSaplingData::default())} else {return None;},
      46574 => if(*key.key() == "quartz_stairs") {Self::QuartzStairs(StairsData::default())} else {return None;},
      46649 => if(*key.key() == "dark_oak_stairs") {Self::DarkOakStairs(StairsData::default())} else {return None;},
      46960 => if(*key.key() == "attached_melon_stem") {Self::AttachedMelonStem(CardinalData::default())} else {return None;},
      47062 => if(*key.key() == "coal_ore") {Self::CoalOre} else {return None;},
      47154 => if(*key.key() == "acacia_fence_gate") {Self::AcaciaFenceGate(FenceGateData::default())} else {return None;},
      47345 => if(*key.key() == "end_stone_brick_wall") {Self::EndStoneBrickWall(WallData::default())} else {return None;},
      47453 => if(*key.key() == "acacia_planks") {Self::AcaciaPlanks} else {return None;},
      47561 => if(*key.key() == "prismarine_bricks") {Self::PrismarineBricks} else {return None;},
      47564 => if(*key.key() == "dead_fire_coral") {Self::DeadFireCoral(WaterloggedData::default())} else {return None;},
      47836 => if(*key.key() == "brown_stained_glass_pane") {Self::BrownStainedGlassPane(GlassPaneData::default())} else {return None;},
      47849 => if(*key.key() == "gray_shulker_box") {Self::GrayShulkerBox(BlockFaceData::default())} else {return None;},
      48175 => if(*key.key() == "emerald_ore") {Self::EmeraldOre} else {return None;},
      48188 => if(*key.key() == "green_terracotta") {Self::GreenTerracotta} else {return None;},
      48452 => if(*key.key() == "sandstone_slab") {Self::SandstoneSlab(SlabData::default())} else {return None;},
      48476 => if(*key.key() == "cyan_stained_glass_pane") {Self::CyanStainedGlassPane(GlassPaneData::default())} else {return None;},
      48646 => if(*key.key() == "nether_brick_slab") {Self::NetherBrickSlab(SlabData::default())} else {return None;},
      48687 => if(*key.key() == "chest") {Self::Chest(ChestData::default())} else {return None;},
      48700 => if(*key.key() == "cornflower") {Self::Cornflower} else {return None;},
      48708 => if(*key.key() == "polished_andesite_slab") {Self::PolishedAndesiteSlab(SlabData::default())} else {return None;},
      48720 => if(*key.key() == "carrots") {Self::Carrots(CarrotsData::default())} else {return None;},
      48757 => if(*key.key() == "red_tulip") {Self::RedTulip} else {return None;},
      48840 => if(*key.key() == "jungle_pressure_plate") {Self::JunglePressurePlate(PressurePlateData::default())} else {return None;},
      48882 => if(*key.key() == "green_wool") {Self::GreenWool} else {return None;},
      48912 => if(*key.key() == "light_gray_wall_banner") {Self::LightGrayWallBanner(CardinalData::default())} else {return None;},
      48959 => if(*key.key() == "gray_stained_glass_pane") {Self::GrayStainedGlassPane(GlassPaneData::default())} else {return None;},
      49052 => if(*key.key() == "birch_fence") {Self::BirchFence(FenceData::default())} else {return None;},
      49084 => if(*key.key() == "magma_block") {Self::MagmaBlock} else {return None;},
      49102 => if(*key.key() == "dirt") {Self::Dirt} else {return None;},
      49104 => if(*key.key() == "cyan_concrete_powder") {Self::CyanConcretePowder} else {return None;},
      49132 => if(*key.key() == "brown_concrete_powder") {Self::BrownConcretePowder} else {return None;},
      49181 => if(*key.key() == "spruce_sign") {Self::SpruceSign(SignData::default())} else {return None;},
      49230 => if(*key.key() == "cyan_terracotta") {Self::CyanTerracotta} else {return None;},
      49351 => if(*key.key() == "andesite") {Self::Andesite} else {return None;},
      49439 => if(*key.key() == "wither_rose") {Self::WitherRose} else {return None;},
      49490 => if(*key.key() == "sand") {Self::Sand} else {return None;},
      49515 => if(*key.key() == "white_wall_banner") {Self::WhiteWallBanner(CardinalData::default())} else {return None;},
      49806 => if(*key.key() == "packed_ice") {Self::PackedIce} else {return None;},
      49995 => if(*key.key() == "potted_poppy") {Self::PottedPoppy} else {return None;},
      50039 => if(*key.key() == "gold_block") {Self::GoldBlock} else {return None;},
      50066 => if(*key.key() == "ice") {Self::Ice} else {return None;},
      50120 => if(*key.key() == "red_wool") {Self::RedWool} else {return None;},
      50214 => if(*key.key() == "skeleton_skull") {Self::SkeletonSkull(SkeletonSkullData::default())} else {return None;},
      50218 => if(*key.key() == "smooth_sandstone") {Self::SmoothSandstone} else {return None;},
      50276 => if(*key.key() == "dark_prismarine_slab") {Self::DarkPrismarineSlab(SlabData::default())} else {return None;},
      50478 => if(*key.key() == "cake") {Self::Cake(CakeData::default())} else {return None;},
      50524 => if(*key.key() == "cauldron") {Self::Cauldron(CauldronData::default())} else {return None;},
      50586 => if(*key.key() == "bamboo_sapling") {Self::BambooSapling} else {return None;},
      50750 => if(*key.key() == "acacia_leaves") {Self::AcaciaLeaves(LeavesData::default())} else {return None;},
      50778 => if(*key.key() == "structure_block") {Self::StructureBlock(StructureBlockData::default())} else {return None;},
      50832 => if(*key.key() == "black_stained_glass") {Self::BlackStainedGlass} else {return None;},
      50861 => if(*key.key() == "birch_sign") {Self::BirchSign(SignData::default())} else {return None;},
      50891 => if(*key.key() == "infested_cobblestone") {Self::InfestedCobblestone} else {return None;},
      51501 => if(*key.key() == "light_blue_stained_glass") {Self::LightBlueStainedGlass} else {return None;},
      51752 => if(*key.key() == "stone_button") {Self::StoneButton(ButtonData::default())} else {return None;},
      51841 => if(*key.key() == "tripwire") {Self::Tripwire(TripwireData::default())} else {return None;},
      51913 => if(*key.key() == "white_shulker_box") {Self::WhiteShulkerBox(BlockFaceData::default())} else {return None;},
      52024 => if(*key.key() == "blast_furnace") {Self::BlastFurnace(CardinalLightableData::default())} else {return None;},
      52293 => if(*key.key() == "tall_seagrass") {Self::TallSeagrass(TallSeagrassData::default())} else {return None;},
      52371 => if(*key.key() == "potted_red_tulip") {Self::PottedRedTulip} else {return None;},
      52485 => if(*key.key() == "potted_cornflower") {Self::PottedCornflower} else {return None;},
      52532 => if(*key.key() == "black_carpet") {Self::BlackCarpet} else {return None;},
      52554 => if(*key.key() == "dropper") {Self::Dropper(DropperData::default())} else {return None;},
      52762 => if(*key.key() == "smithing_table") {Self::SmithingTable} else {return None;},
      52793 => if(*key.key() == "note_block") {Self::NoteBlock(NoteBlockData::default())} else {return None;},
      52841 => if(*key.key() == "lapis_ore") {Self::LapisOre} else {return None;},
      52853 => if(*key.key() == "light_gray_stained_glass") {Self::LightGrayStainedGlass} else {return None;},
      53024 => if(*key.key() == "green_stained_glass_pane") {Self::GreenStainedGlassPane(GlassPaneData::default())} else {return None;},
      53261 => if(*key.key() == "pink_carpet") {Self::PinkCarpet} else {return None;},
      53305 => if(*key.key() == "oak_trapdoor") {Self::OakTrapdoor(TrapdoorData::default())} else {return None;},
      53316 => if(*key.key() == "daylight_detector") {Self::DaylightDetector(DaylightDetectorData::default())} else {return None;},
      53331 => if(*key.key() == "jungle_fence_gate") {Self::JungleFenceGate(FenceGateData::default())} else {return None;},
      53343 => if(*key.key() == "infested_cracked_stone_bricks") {Self::InfestedCrackedStoneBricks} else {return None;},
      53387 => if(*key.key() == "redstone_lamp") {Self::RedstoneLamp(RedstoneLampData::default())} else {return None;},
      53659 => if(*key.key() == "stripped_birch_log") {Self::StrippedBirchLog(AxisData::default())} else {return None;},
      53840 => if(*key.key() == "tnt") {Self::Tnt(TntData::default())} else {return None;},
      54134 => if(*key.key() == "polished_granite_slab") {Self::PolishedGraniteSlab(SlabData::default())} else {return None;},
      54434 => if(*key.key() == "orange_terracotta") {Self::OrangeTerracotta} else {return None;},
      54526 => if(*key.key() == "chiseled_sandstone") {Self::ChiseledSandstone} else {return None;},
      54634 => if(*key.key() == "light_blue_terracotta") {Self::LightBlueTerracotta} else {return None;},
      54701 => if(*key.key() == "turtle_egg") {Self::TurtleEgg(TurtleEggData::default())} else {return None;},
      54705 => if(*key.key() == "tube_coral") {Self::TubeCoral(WaterloggedData::default())} else {return None;},
      54711 => if(*key.key() == "cactus") {Self::Cactus(CactusData::default())} else {return None;},
      54807 => if(*key.key() == "stonecutter") {Self::Stonecutter(CardinalData::default())} else {return None;},
      54872 => if(*key.key() == "damaged_anvil") {Self::DamagedAnvil(CardinalData::default())} else {return None;},
      54873 => if(*key.key() == "acacia_button") {Self::AcaciaButton(ButtonData::default())} else {return None;},
      54965 => if(*key.key() == "lime_carpet") {Self::LimeCarpet} else {return None;},
      55067 => if(*key.key() == "stripped_spruce_log") {Self::StrippedSpruceLog(AxisData::default())} else {return None;},
      55327 => if(*key.key() == "pink_concrete") {Self::PinkConcrete} else {return None;},
      55519 => if(*key.key() == "lime_concrete_powder") {Self::LimeConcretePowder} else {return None;},
      55531 => if(*key.key() == "stripped_dark_oak_log") {Self::StrippedDarkOakLog(AxisData::default())} else {return None;},
      55634 => if(*key.key() == "stone_pressure_plate") {Self::StonePressurePlate(PressurePlateData::default())} else {return None;},
      55729 => if(*key.key() == "lime_concrete") {Self::LimeConcrete} else {return None;},
      55743 => if(*key.key() == "gold_ore") {Self::GoldOre} else {return None;},
      55827 => if(*key.key() == "emerald_block") {Self::EmeraldBlock} else {return None;},
      55889 => if(*key.key() == "stripped_acacia_log") {Self::StrippedAcaciaLog(AxisData::default())} else {return None;},
      55910 => if(*key.key() == "jungle_wall_sign") {Self::JungleWallSign(WallSignData::default())} else {return None;},
      55931 => if(*key.key() == "stone_bricks") {Self::StoneBricks} else {return None;},
      56024 => if(*key.key() == "polished_granite") {Self::PolishedGranite} else {return None;},
      56098 => if(*key.key() == "beetroots") {Self::Beetroots(BeetrootsData::default())} else {return None;},
      56195 => if(*key.key() == "pink_concrete_powder") {Self::PinkConcretePowder} else {return None;},
      56259 => if(*key.key() == "dragon_egg") {Self::DragonEgg} else {return None;},
      56460 => if(*key.key() == "dandelion") {Self::Dandelion} else {return None;},
      56634 => if(*key.key() == "chain_command_block") {Self::ChainCommandBlock(CommandBlockData::default())} else {return None;},
      56701 => if(*key.key() == "red_stained_glass") {Self::RedStainedGlass} else {return None;},
      56715 => if(*key.key() == "jungle_log") {Self::JungleLog(AxisData::default())} else {return None;},
      57228 => if(*key.key() == "green_carpet") {Self::GreenCarpet} else {return None;},
      57283 => if(*key.key() == "podzol") {Self::Podzol(PodzolData::default())} else {return None;},
      57310 => if(*key.key() == "stripped_spruce_wood") {Self::StrippedSpruceWood(AxisData::default())} else {return None;},
      57439 => if(*key.key() == "quartz_pillar") {Self::QuartzPillar(AxisData::default())} else {return None;},
      57907 => if(*key.key() == "grass_path") {Self::GrassPath} else {return None;},
      58001 => if(*key.key() == "green_banner") {Self::GreenBanner(BannerData::default())} else {return None;},
      58085 => if(*key.key() == "ladder") {Self::Ladder(LadderData::default())} else {return None;},
      58252 => if(*key.key() == "stone_brick_stairs") {Self::StoneBrickStairs(StairsData::default())} else {return None;},
      58279 => if(*key.key() == "dark_oak_fence") {Self::DarkOakFence(FenceData::default())} else {return None;},
      58284 => if(*key.key() == "white_terracotta") {Self::WhiteTerracotta} else {return None;},
      58336 => if(*key.key() == "green_stained_glass") {Self::GreenStainedGlass} else {return None;},
      58479 => if(*key.key() == "red_mushroom_block") {Self::RedMushroomBlock(MushroomBlockData::default())} else {return None;},
      58529 => if(*key.key() == "black_stained_glass_pane") {Self::BlackStainedGlassPane(GlassPaneData::default())} else {return None;},
      58786 => if(*key.key() == "lectern") {Self::Lectern(LecternData::default())} else {return None;},
      58814 => if(*key.key() == "white_concrete") {Self::WhiteConcrete} else {return None;},
      58840 => if(*key.key() == "light_gray_wool") {Self::LightGrayWool} else {return None;},
      58912 => if(*key.key() == "potted_cactus") {Self::PottedCactus} else {return None;},
      58943 => if(*key.key() == "gray_concrete") {Self::GrayConcrete} else {return None;},
      59092 => if(*key.key() == "blue_concrete") {Self::BlueConcrete} else {return None;},
      59295 => if(*key.key() == "spruce_fence") {Self::SpruceFence(FenceData::default())} else {return None;},
      59441 => if(*key.key() == "dead_fire_coral_block") {Self::DeadFireCoralBlock} else {return None;},
      59580 => if(*key.key() == "wall_torch") {Self::WallTorch(CardinalData::default())} else {return None;},
      59728 => if(*key.key() == "diamond_ore") {Self::DiamondOre} else {return None;},
      59823 => if(*key.key() == "sponge") {Self::Sponge} else {return None;},
      59846 => if(*key.key() == "beehive") {Self::Beehive(BeehiveData::default())} else {return None;},
      59879 => if(*key.key() == "spruce_pressure_plate") {Self::SprucePressurePlate(PressurePlateData::default())} else {return None;},
      59892 => if(*key.key() == "stone_slab") {Self::StoneSlab(SlabData::default())} else {return None;},
      60003 => if(*key.key() == "smooth_quartz") {Self::SmoothQuartz} else {return None;},
      60145 => if(*key.key() == "cut_sandstone_slab") {Self::CutSandstoneSlab(SlabData::default())} else {return None;},
      60168 => if(*key.key() == "red_sandstone_stairs") {Self::RedSandstoneStairs(StairsData::default())} else {return None;},
      60264 => if(*key.key() == "light_blue_wool") {Self::LightBlueWool} else {return None;},
      60328 => if(*key.key() == "lime_banner") {Self::LimeBanner(BannerData::default())} else {return None;},
      60411 => if(*key.key() == "dark_oak_pressure_plate") {Self::DarkOakPressurePlate(PressurePlateData::default())} else {return None;},
      60459 => if(*key.key() == "redstone_wall_torch") {Self::RedstoneWallTorch(CardinalLightableData::default())} else {return None;},
      60483 => if(*key.key() == "brick_stairs") {Self::BrickStairs(StairsData::default())} else {return None;},
      60688 => if(*key.key() == "pink_banner") {Self::PinkBanner(BannerData::default())} else {return None;},
      60716 => if(*key.key() == "poppy") {Self::Poppy} else {return None;},
      60944 => if(*key.key() == "polished_diorite_slab") {Self::PolishedDioriteSlab(SlabData::default())} else {return None;},
      61016 => if(*key.key() == "orange_tulip") {Self::OrangeTulip} else {return None;},
      61091 => if(*key.key() == "dead_horn_coral_block") {Self::DeadHornCoralBlock} else {return None;},
      61224 => if(*key.key() == "petrified_oak_slab") {Self::PetrifiedOakSlab(SlabData::default())} else {return None;},
      61481 => if(*key.key() == "black_banner") {Self::BlackBanner(BannerData::default())} else {return None;},
      61485 => if(*key.key() == "orange_stained_glass") {Self::OrangeStainedGlass} else {return None;},
      61555 => if(*key.key() == "acacia_trapdoor") {Self::AcaciaTrapdoor(TrapdoorData::default())} else {return None;},
      61661 => if(*key.key() == "smooth_quartz_stairs") {Self::SmoothQuartzStairs(StairsData::default())} else {return None;},
      61686 => if(*key.key() == "bubble_coral") {Self::BubbleCoral(WaterloggedData::default())} else {return None;},
      61842 => if(*key.key() == "lime_stained_glass") {Self::LimeStainedGlass} else {return None;},
      61889 => if(*key.key() == "potted_fern") {Self::PottedFern} else {return None;},
      62081 => if(*key.key() == "potted_red_mushroom") {Self::PottedRedMushroom} else {return None;},
      62256 => if(*key.key() == "red_wall_banner") {Self::RedWallBanner(CardinalData::default())} else {return None;},
      62482 => if(*key.key() == "black_wool") {Self::BlackWool} else {return None;},
      62561 => if(*key.key() == "powered_rail") {Self::PoweredRail(PoweredRailData::default())} else {return None;},
      62666 => if(*key.key() == "furnace") {Self::Furnace(CardinalLightableData::default())} else {return None;},
      62695 => if(*key.key() == "crafting_table") {Self::CraftingTable} else {return None;},
      62775 => if(*key.key() == "brown_mushroom_block") {Self::BrownMushroomBlock(MushroomBlockData::default())} else {return None;},
      63015 => if(*key.key() == "brain_coral_fan") {Self::BrainCoralFan(WaterloggedData::default())} else {return None;},
      63028 => if(*key.key() == "potted_oxeye_daisy") {Self::PottedOxeyeDaisy} else {return None;},
      63266 => if(*key.key() == "cobblestone_stairs") {Self::CobblestoneStairs(StairsData::default())} else {return None;},
      63423 => if(*key.key() == "purple_stained_glass") {Self::PurpleStainedGlass} else {return None;},
      63492 => if(*key.key() == "mushroom_stem") {Self::MushroomStem(MushroomStemData::default())} else {return None;},
      63563 => if(*key.key() == "brown_mushroom") {Self::BrownMushroom} else {return None;},
      63634 => if(*key.key() == "red_shulker_box") {Self::RedShulkerBox(BlockFaceData::default())} else {return None;},
      63930 => if(*key.key() == "large_fern") {Self::LargeFern(LargeFernData::default())} else {return None;},
      64189 => if(*key.key() == "tube_coral_wall_fan") {Self::TubeCoralWallFan(CoralWallFanData::default())} else {return None;},
      64206 => if(*key.key() == "cobweb") {Self::Cobweb} else {return None;},
      64288 => if(*key.key() == "zombie_wall_head") {Self::ZombieWallHead(CardinalData::default())} else {return None;},
      64424 => if(*key.key() == "red_nether_bricks") {Self::RedNetherBricks} else {return None;},
      64428 => if(*key.key() == "diorite_stairs") {Self::DioriteStairs(StairsData::default())} else {return None;},
      64596 => if(*key.key() == "honeycomb_block") {Self::HoneycombBlock} else {return None;},
      64629 => if(*key.key() == "ender_chest") {Self::EnderChest(EnderChestData::default())} else {return None;},
      64738 => if(*key.key() == "pink_stained_glass") {Self::PinkStainedGlass} else {return None;},
      64817 => if(*key.key() == "blue_ice") {Self::BlueIce} else {return None;},
      64891 => if(*key.key() == "wither_skeleton_skull") {Self::WitherSkeletonSkull(WitherSkeletonSkullData::default())} else {return None;},
      64901 => if(*key.key() == "dark_oak_door") {Self::DarkOakDoor(DoorData::default())} else {return None;},
      64996 => if(*key.key() == "lily_pad") {Self::LilyPad} else {return None;},
      65153 => if(*key.key() == "light_gray_glazed_terracotta") {Self::LightGrayGlazedTerracotta(CardinalData::default())} else {return None;},
      _ => {
        return None;
      },
    });

    #[inline]
    fn rot_xor_shift7_factor142(input: &String) -> u16 {
      use std::ops::BitXor;
      let mut sum = 0u16;
      input.as_bytes().iter().for_each(|c| sum = sum.rotate_left(7).bitxor(*c as u16 * 142u16));
      sum
    }
  }
}

// Block state data structures

#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]
pub struct GrassBlockData {
  pub snowy: bool,
}
impl GrassBlockData {
  pub fn from_offset(offset: usize) -> Option<Self> {
    match offset {
      0 => Some(Self {snowy: true}),
      1 => Some(Self {snowy: false}),
      _ => None,
    }
  }
  pub fn to_offset(self) -> usize {
    match self.snowy {
      true => 0,
      false => 1,
    }
  }
}
impl Default for GrassBlockData {
  fn default() -> Self {
    Self {snowy: false}
  }
}
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]
pub struct PodzolData {
  pub snowy: bool,
}
impl PodzolData {
  pub fn from_offset(offset: usize) -> Option<Self> {
    match offset {
      0 => Some(Self {snowy: true}),
      1 => Some(Self {snowy: false}),
      _ => None,
    }
  }
  pub fn to_offset(self) -> usize {
    match self.snowy {
      true => 0,
      false => 1,
    }
  }
}
impl Default for PodzolData {
  fn default() -> Self {
    Self {snowy: false}
  }
}
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]
pub struct TreeSaplingData {
  pub stage: NumberFrom0To1Property,
}
impl TreeSaplingData {
  pub fn from_offset(offset: usize) -> Option<Self> {
    match offset {
      0 => Some(Self {stage: NumberFrom0To1Property::new(0)}),
      1 => Some(Self {stage: NumberFrom0To1Property::new(1)}),
      _ => None,
    }
  }
  pub fn to_offset(self) -> usize {
    match self.stage.value() {
      0 => 0,
      1 => 1,
      _ => panic!("Illegal Block State"),
    }
  }
}
impl Default for TreeSaplingData {
  fn default() -> Self {
    Self {stage: NumberFrom0To1Property::new(0)}
  }
}
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]
pub struct FluidData {
  pub level: NumberFrom0To15Property,
}
impl FluidData {
  pub fn from_offset(offset: usize) -> Option<Self> {
    match offset {
      0 => Some(Self {level: NumberFrom0To15Property::new(0)}),
      1 => Some(Self {level: NumberFrom0To15Property::new(1)}),
      2 => Some(Self {level: NumberFrom0To15Property::new(2)}),
      3 => Some(Self {level: NumberFrom0To15Property::new(3)}),
      4 => Some(Self {level: NumberFrom0To15Property::new(4)}),
      5 => Some(Self {level: NumberFrom0To15Property::new(5)}),
      6 => Some(Self {level: NumberFrom0To15Property::new(6)}),
      7 => Some(Self {level: NumberFrom0To15Property::new(7)}),
      8 => Some(Self {level: NumberFrom0To15Property::new(8)}),
      9 => Some(Self {level: NumberFrom0To15Property::new(9)}),
      10 => Some(Self {level: NumberFrom0To15Property::new(10)}),
      11 => Some(Self {level: NumberFrom0To15Property::new(11)}),
      12 => Some(Self {level: NumberFrom0To15Property::new(12)}),
      13 => Some(Self {level: NumberFrom0To15Property::new(13)}),
      14 => Some(Self {level: NumberFrom0To15Property::new(14)}),
      15 => Some(Self {level: NumberFrom0To15Property::new(15)}),
      _ => None,
    }
  }
  pub fn to_offset(self) -> usize {
    match self.level.value() {
      0 => 0,
      1 => 1,
      2 => 2,
      3 => 3,
      4 => 4,
      5 => 5,
      6 => 6,
      7 => 7,
      8 => 8,
      9 => 9,
      10 => 10,
      11 => 11,
      12 => 12,
      13 => 13,
      14 => 14,
      15 => 15,
      _ => panic!("Illegal Block State"),
    }
  }
}
impl Default for FluidData {
  fn default() -> Self {
    Self {level: NumberFrom0To15Property::new(0)}
  }
}
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]
pub struct AxisData {
  pub axis: AxisProperty,
}
impl AxisData {
  pub fn from_offset(offset: usize) -> Option<Self> {
    match offset {
      0 => Some(Self {axis: AxisProperty::X}),
      1 => Some(Self {axis: AxisProperty::Y}),
      2 => Some(Self {axis: AxisProperty::Z}),
      _ => None,
    }
  }
  pub fn to_offset(self) -> usize {
    match self.axis {
      AxisProperty::X => 0,
      AxisProperty::Y => 1,
      AxisProperty::Z => 2,
    }
  }
}
impl Default for AxisData {
  fn default() -> Self {
    Self {axis: AxisProperty::Y}
  }
}
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]
pub struct LeavesData {
  pub distance: NumberFrom1To7Property,
  pub persistent: bool,
}
impl LeavesData {
  pub fn from_offset(offset: usize) -> Option<Self> {
    match offset {
      0 => Some(Self {distance: NumberFrom1To7Property::new(1), persistent: true}),
      1 => Some(Self {distance: NumberFrom1To7Property::new(1), persistent: false}),
      2 => Some(Self {distance: NumberFrom1To7Property::new(2), persistent: true}),
      3 => Some(Self {distance: NumberFrom1To7Property::new(2), persistent: false}),
      4 => Some(Self {distance: NumberFrom1To7Property::new(3), persistent: true}),
      5 => Some(Self {distance: NumberFrom1To7Property::new(3), persistent: false}),
      6 => Some(Self {distance: NumberFrom1To7Property::new(4), persistent: true}),
      7 => Some(Self {distance: NumberFrom1To7Property::new(4), persistent: false}),
      8 => Some(Self {distance: NumberFrom1To7Property::new(5), persistent: true}),
      9 => Some(Self {distance: NumberFrom1To7Property::new(5), persistent: false}),
      10 => Some(Self {distance: NumberFrom1To7Property::new(6), persistent: true}),
      11 => Some(Self {distance: NumberFrom1To7Property::new(6), persistent: false}),
      12 => Some(Self {distance: NumberFrom1To7Property::new(7), persistent: true}),
      13 => Some(Self {distance: NumberFrom1To7Property::new(7), persistent: false}),
      _ => None,
    }
  }
  pub fn to_offset(self) -> usize {
    match self.distance.value() {
      1 => match self.persistent {
        true => 0,
        false => 1,
      },
      2 => match self.persistent {
        true => 2,
        false => 3,
      },
      3 => match self.persistent {
        true => 4,
        false => 5,
      },
      4 => match self.persistent {
        true => 6,
        false => 7,
      },
      5 => match self.persistent {
        true => 8,
        false => 9,
      },
      6 => match self.persistent {
        true => 10,
        false => 11,
      },
      7 => match self.persistent {
        true => 12,
        false => 13,
      },
      _ => panic!("Illegal Block State"),
    }
  }
}
impl Default for LeavesData {
  fn default() -> Self {
    Self {distance: NumberFrom1To7Property::new(7), persistent: false}
  }
}
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]
pub struct DispenserData {
  pub facing: BlockFacingProperty,
  pub triggered: bool,
}
impl DispenserData {
  pub fn from_offset(offset: usize) -> Option<Self> {
    match offset {
      0 => Some(Self {facing: BlockFacingProperty::North, triggered: true}),
      1 => Some(Self {facing: BlockFacingProperty::North, triggered: false}),
      2 => Some(Self {facing: BlockFacingProperty::East, triggered: true}),
      3 => Some(Self {facing: BlockFacingProperty::East, triggered: false}),
      4 => Some(Self {facing: BlockFacingProperty::South, triggered: true}),
      5 => Some(Self {facing: BlockFacingProperty::South, triggered: false}),
      6 => Some(Self {facing: BlockFacingProperty::West, triggered: true}),
      7 => Some(Self {facing: BlockFacingProperty::West, triggered: false}),
      8 => Some(Self {facing: BlockFacingProperty::Up, triggered: true}),
      9 => Some(Self {facing: BlockFacingProperty::Up, triggered: false}),
      10 => Some(Self {facing: BlockFacingProperty::Down, triggered: true}),
      11 => Some(Self {facing: BlockFacingProperty::Down, triggered: false}),
      _ => None,
    }
  }
  pub fn to_offset(self) -> usize {
    match self.facing {
      BlockFacingProperty::North => match self.triggered {
        true => 0,
        false => 1,
      },
      BlockFacingProperty::East => match self.triggered {
        true => 2,
        false => 3,
      },
      BlockFacingProperty::South => match self.triggered {
        true => 4,
        false => 5,
      },
      BlockFacingProperty::West => match self.triggered {
        true => 6,
        false => 7,
      },
      BlockFacingProperty::Up => match self.triggered {
        true => 8,
        false => 9,
      },
      BlockFacingProperty::Down => match self.triggered {
        true => 10,
        false => 11,
      },
    }
  }
}
impl Default for DispenserData {
  fn default() -> Self {
    Self {facing: BlockFacingProperty::North, triggered: false}
  }
}
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]
pub struct NoteBlockData {
  pub instrument: NoteBlockInstrumentProperty,
  pub note: NumberFrom0To24Property,
  pub powered: bool,
}
impl NoteBlockData {
  pub fn from_offset(offset: usize) -> Option<Self> {
    match offset {
      0 => Some(Self {instrument: NoteBlockInstrumentProperty::Harp, note: NumberFrom0To24Property::new(0), powered: true}),
      1 => Some(Self {instrument: NoteBlockInstrumentProperty::Harp, note: NumberFrom0To24Property::new(0), powered: false}),
      2 => Some(Self {instrument: NoteBlockInstrumentProperty::Harp, note: NumberFrom0To24Property::new(1), powered: true}),
      3 => Some(Self {instrument: NoteBlockInstrumentProperty::Harp, note: NumberFrom0To24Property::new(1), powered: false}),
      4 => Some(Self {instrument: NoteBlockInstrumentProperty::Harp, note: NumberFrom0To24Property::new(2), powered: true}),
      5 => Some(Self {instrument: NoteBlockInstrumentProperty::Harp, note: NumberFrom0To24Property::new(2), powered: false}),
      6 => Some(Self {instrument: NoteBlockInstrumentProperty::Harp, note: NumberFrom0To24Property::new(3), powered: true}),
      7 => Some(Self {instrument: NoteBlockInstrumentProperty::Harp, note: NumberFrom0To24Property::new(3), powered: false}),
      8 => Some(Self {instrument: NoteBlockInstrumentProperty::Harp, note: NumberFrom0To24Property::new(4), powered: true}),
      9 => Some(Self {instrument: NoteBlockInstrumentProperty::Harp, note: NumberFrom0To24Property::new(4), powered: false}),
      10 => Some(Self {instrument: NoteBlockInstrumentProperty::Harp, note: NumberFrom0To24Property::new(5), powered: true}),
      11 => Some(Self {instrument: NoteBlockInstrumentProperty::Harp, note: NumberFrom0To24Property::new(5), powered: false}),
      12 => Some(Self {instrument: NoteBlockInstrumentProperty::Harp, note: NumberFrom0To24Property::new(6), powered: true}),
      13 => Some(Self {instrument: NoteBlockInstrumentProperty::Harp, note: NumberFrom0To24Property::new(6), powered: false}),
      14 => Some(Self {instrument: NoteBlockInstrumentProperty::Harp, note: NumberFrom0To24Property::new(7), powered: true}),
      15 => Some(Self {instrument: NoteBlockInstrumentProperty::Harp, note: NumberFrom0To24Property::new(7), powered: false}),
      16 => Some(Self {instrument: NoteBlockInstrumentProperty::Harp, note: NumberFrom0To24Property::new(8), powered: true}),
      17 => Some(Self {instrument: NoteBlockInstrumentProperty::Harp, note: NumberFrom0To24Property::new(8), powered: false}),
      18 => Some(Self {instrument: NoteBlockInstrumentProperty::Harp, note: NumberFrom0To24Property::new(9), powered: true}),
      19 => Some(Self {instrument: NoteBlockInstrumentProperty::Harp, note: NumberFrom0To24Property::new(9), powered: false}),
      20 => Some(Self {instrument: NoteBlockInstrumentProperty::Harp, note: NumberFrom0To24Property::new(10), powered: true}),
      21 => Some(Self {instrument: NoteBlockInstrumentProperty::Harp, note: NumberFrom0To24Property::new(10), powered: false}),
      22 => Some(Self {instrument: NoteBlockInstrumentProperty::Harp, note: NumberFrom0To24Property::new(11), powered: true}),
      23 => Some(Self {instrument: NoteBlockInstrumentProperty::Harp, note: NumberFrom0To24Property::new(11), powered: false}),
      24 => Some(Self {instrument: NoteBlockInstrumentProperty::Harp, note: NumberFrom0To24Property::new(12), powered: true}),
      25 => Some(Self {instrument: NoteBlockInstrumentProperty::Harp, note: NumberFrom0To24Property::new(12), powered: false}),
      26 => Some(Self {instrument: NoteBlockInstrumentProperty::Harp, note: NumberFrom0To24Property::new(13), powered: true}),
      27 => Some(Self {instrument: NoteBlockInstrumentProperty::Harp, note: NumberFrom0To24Property::new(13), powered: false}),
      28 => Some(Self {instrument: NoteBlockInstrumentProperty::Harp, note: NumberFrom0To24Property::new(14), powered: true}),
      29 => Some(Self {instrument: NoteBlockInstrumentProperty::Harp, note: NumberFrom0To24Property::new(14), powered: false}),
      30 => Some(Self {instrument: NoteBlockInstrumentProperty::Harp, note: NumberFrom0To24Property::new(15), powered: true}),
      31 => Some(Self {instrument: NoteBlockInstrumentProperty::Harp, note: NumberFrom0To24Property::new(15), powered: false}),
      32 => Some(Self {instrument: NoteBlockInstrumentProperty::Harp, note: NumberFrom0To24Property::new(16), powered: true}),
      33 => Some(Self {instrument: NoteBlockInstrumentProperty::Harp, note: NumberFrom0To24Property::new(16), powered: false}),
      34 => Some(Self {instrument: NoteBlockInstrumentProperty::Harp, note: NumberFrom0To24Property::new(17), powered: true}),
      35 => Some(Self {instrument: NoteBlockInstrumentProperty::Harp, note: NumberFrom0To24Property::new(17), powered: false}),
      36 => Some(Self {instrument: NoteBlockInstrumentProperty::Harp, note: NumberFrom0To24Property::new(18), powered: true}),
      37 => Some(Self {instrument: NoteBlockInstrumentProperty::Harp, note: NumberFrom0To24Property::new(18), powered: false}),
      38 => Some(Self {instrument: NoteBlockInstrumentProperty::Harp, note: NumberFrom0To24Property::new(19), powered: true}),
      39 => Some(Self {instrument: NoteBlockInstrumentProperty::Harp, note: NumberFrom0To24Property::new(19), powered: false}),
      40 => Some(Self {instrument: NoteBlockInstrumentProperty::Harp, note: NumberFrom0To24Property::new(20), powered: true}),
      41 => Some(Self {instrument: NoteBlockInstrumentProperty::Harp, note: NumberFrom0To24Property::new(20), powered: false}),
      42 => Some(Self {instrument: NoteBlockInstrumentProperty::Harp, note: NumberFrom0To24Property::new(21), powered: true}),
      43 => Some(Self {instrument: NoteBlockInstrumentProperty::Harp, note: NumberFrom0To24Property::new(21), powered: false}),
      44 => Some(Self {instrument: NoteBlockInstrumentProperty::Harp, note: NumberFrom0To24Property::new(22), powered: true}),
      45 => Some(Self {instrument: NoteBlockInstrumentProperty::Harp, note: NumberFrom0To24Property::new(22), powered: false}),
      46 => Some(Self {instrument: NoteBlockInstrumentProperty::Harp, note: NumberFrom0To24Property::new(23), powered: true}),
      47 => Some(Self {instrument: NoteBlockInstrumentProperty::Harp, note: NumberFrom0To24Property::new(23), powered: false}),
      48 => Some(Self {instrument: NoteBlockInstrumentProperty::Harp, note: NumberFrom0To24Property::new(24), powered: true}),
      49 => Some(Self {instrument: NoteBlockInstrumentProperty::Harp, note: NumberFrom0To24Property::new(24), powered: false}),
      50 => Some(Self {instrument: NoteBlockInstrumentProperty::Basedrum, note: NumberFrom0To24Property::new(0), powered: true}),
      51 => Some(Self {instrument: NoteBlockInstrumentProperty::Basedrum, note: NumberFrom0To24Property::new(0), powered: false}),
      52 => Some(Self {instrument: NoteBlockInstrumentProperty::Basedrum, note: NumberFrom0To24Property::new(1), powered: true}),
      53 => Some(Self {instrument: NoteBlockInstrumentProperty::Basedrum, note: NumberFrom0To24Property::new(1), powered: false}),
      54 => Some(Self {instrument: NoteBlockInstrumentProperty::Basedrum, note: NumberFrom0To24Property::new(2), powered: true}),
      55 => Some(Self {instrument: NoteBlockInstrumentProperty::Basedrum, note: NumberFrom0To24Property::new(2), powered: false}),
      56 => Some(Self {instrument: NoteBlockInstrumentProperty::Basedrum, note: NumberFrom0To24Property::new(3), powered: true}),
      57 => Some(Self {instrument: NoteBlockInstrumentProperty::Basedrum, note: NumberFrom0To24Property::new(3), powered: false}),
      58 => Some(Self {instrument: NoteBlockInstrumentProperty::Basedrum, note: NumberFrom0To24Property::new(4), powered: true}),
      59 => Some(Self {instrument: NoteBlockInstrumentProperty::Basedrum, note: NumberFrom0To24Property::new(4), powered: false}),
      60 => Some(Self {instrument: NoteBlockInstrumentProperty::Basedrum, note: NumberFrom0To24Property::new(5), powered: true}),
      61 => Some(Self {instrument: NoteBlockInstrumentProperty::Basedrum, note: NumberFrom0To24Property::new(5), powered: false}),
      62 => Some(Self {instrument: NoteBlockInstrumentProperty::Basedrum, note: NumberFrom0To24Property::new(6), powered: true}),
      63 => Some(Self {instrument: NoteBlockInstrumentProperty::Basedrum, note: NumberFrom0To24Property::new(6), powered: false}),
      64 => Some(Self {instrument: NoteBlockInstrumentProperty::Basedrum, note: NumberFrom0To24Property::new(7), powered: true}),
      65 => Some(Self {instrument: NoteBlockInstrumentProperty::Basedrum, note: NumberFrom0To24Property::new(7), powered: false}),
      66 => Some(Self {instrument: NoteBlockInstrumentProperty::Basedrum, note: NumberFrom0To24Property::new(8), powered: true}),
      67 => Some(Self {instrument: NoteBlockInstrumentProperty::Basedrum, note: NumberFrom0To24Property::new(8), powered: false}),
      68 => Some(Self {instrument: NoteBlockInstrumentProperty::Basedrum, note: NumberFrom0To24Property::new(9), powered: true}),
      69 => Some(Self {instrument: NoteBlockInstrumentProperty::Basedrum, note: NumberFrom0To24Property::new(9), powered: false}),
      70 => Some(Self {instrument: NoteBlockInstrumentProperty::Basedrum, note: NumberFrom0To24Property::new(10), powered: true}),
      71 => Some(Self {instrument: NoteBlockInstrumentProperty::Basedrum, note: NumberFrom0To24Property::new(10), powered: false}),
      72 => Some(Self {instrument: NoteBlockInstrumentProperty::Basedrum, note: NumberFrom0To24Property::new(11), powered: true}),
      73 => Some(Self {instrument: NoteBlockInstrumentProperty::Basedrum, note: NumberFrom0To24Property::new(11), powered: false}),
      74 => Some(Self {instrument: NoteBlockInstrumentProperty::Basedrum, note: NumberFrom0To24Property::new(12), powered: true}),
      75 => Some(Self {instrument: NoteBlockInstrumentProperty::Basedrum, note: NumberFrom0To24Property::new(12), powered: false}),
      76 => Some(Self {instrument: NoteBlockInstrumentProperty::Basedrum, note: NumberFrom0To24Property::new(13), powered: true}),
      77 => Some(Self {instrument: NoteBlockInstrumentProperty::Basedrum, note: NumberFrom0To24Property::new(13), powered: false}),
      78 => Some(Self {instrument: NoteBlockInstrumentProperty::Basedrum, note: NumberFrom0To24Property::new(14), powered: true}),
      79 => Some(Self {instrument: NoteBlockInstrumentProperty::Basedrum, note: NumberFrom0To24Property::new(14), powered: false}),
      80 => Some(Self {instrument: NoteBlockInstrumentProperty::Basedrum, note: NumberFrom0To24Property::new(15), powered: true}),
      81 => Some(Self {instrument: NoteBlockInstrumentProperty::Basedrum, note: NumberFrom0To24Property::new(15), powered: false}),
      82 => Some(Self {instrument: NoteBlockInstrumentProperty::Basedrum, note: NumberFrom0To24Property::new(16), powered: true}),
      83 => Some(Self {instrument: NoteBlockInstrumentProperty::Basedrum, note: NumberFrom0To24Property::new(16), powered: false}),
      84 => Some(Self {instrument: NoteBlockInstrumentProperty::Basedrum, note: NumberFrom0To24Property::new(17), powered: true}),
      85 => Some(Self {instrument: NoteBlockInstrumentProperty::Basedrum, note: NumberFrom0To24Property::new(17), powered: false}),
      86 => Some(Self {instrument: NoteBlockInstrumentProperty::Basedrum, note: NumberFrom0To24Property::new(18), powered: true}),
      87 => Some(Self {instrument: NoteBlockInstrumentProperty::Basedrum, note: NumberFrom0To24Property::new(18), powered: false}),
      88 => Some(Self {instrument: NoteBlockInstrumentProperty::Basedrum, note: NumberFrom0To24Property::new(19), powered: true}),
      89 => Some(Self {instrument: NoteBlockInstrumentProperty::Basedrum, note: NumberFrom0To24Property::new(19), powered: false}),
      90 => Some(Self {instrument: NoteBlockInstrumentProperty::Basedrum, note: NumberFrom0To24Property::new(20), powered: true}),
      91 => Some(Self {instrument: NoteBlockInstrumentProperty::Basedrum, note: NumberFrom0To24Property::new(20), powered: false}),
      92 => Some(Self {instrument: NoteBlockInstrumentProperty::Basedrum, note: NumberFrom0To24Property::new(21), powered: true}),
      93 => Some(Self {instrument: NoteBlockInstrumentProperty::Basedrum, note: NumberFrom0To24Property::new(21), powered: false}),
      94 => Some(Self {instrument: NoteBlockInstrumentProperty::Basedrum, note: NumberFrom0To24Property::new(22), powered: true}),
      95 => Some(Self {instrument: NoteBlockInstrumentProperty::Basedrum, note: NumberFrom0To24Property::new(22), powered: false}),
      96 => Some(Self {instrument: NoteBlockInstrumentProperty::Basedrum, note: NumberFrom0To24Property::new(23), powered: true}),
      97 => Some(Self {instrument: NoteBlockInstrumentProperty::Basedrum, note: NumberFrom0To24Property::new(23), powered: false}),
      98 => Some(Self {instrument: NoteBlockInstrumentProperty::Basedrum, note: NumberFrom0To24Property::new(24), powered: true}),
      99 => Some(Self {instrument: NoteBlockInstrumentProperty::Basedrum, note: NumberFrom0To24Property::new(24), powered: false}),
      100 => Some(Self {instrument: NoteBlockInstrumentProperty::Snare, note: NumberFrom0To24Property::new(0), powered: true}),
      101 => Some(Self {instrument: NoteBlockInstrumentProperty::Snare, note: NumberFrom0To24Property::new(0), powered: false}),
      102 => Some(Self {instrument: NoteBlockInstrumentProperty::Snare, note: NumberFrom0To24Property::new(1), powered: true}),
      103 => Some(Self {instrument: NoteBlockInstrumentProperty::Snare, note: NumberFrom0To24Property::new(1), powered: false}),
      104 => Some(Self {instrument: NoteBlockInstrumentProperty::Snare, note: NumberFrom0To24Property::new(2), powered: true}),
      105 => Some(Self {instrument: NoteBlockInstrumentProperty::Snare, note: NumberFrom0To24Property::new(2), powered: false}),
      106 => Some(Self {instrument: NoteBlockInstrumentProperty::Snare, note: NumberFrom0To24Property::new(3), powered: true}),
      107 => Some(Self {instrument: NoteBlockInstrumentProperty::Snare, note: NumberFrom0To24Property::new(3), powered: false}),
      108 => Some(Self {instrument: NoteBlockInstrumentProperty::Snare, note: NumberFrom0To24Property::new(4), powered: true}),
      109 => Some(Self {instrument: NoteBlockInstrumentProperty::Snare, note: NumberFrom0To24Property::new(4), powered: false}),
      110 => Some(Self {instrument: NoteBlockInstrumentProperty::Snare, note: NumberFrom0To24Property::new(5), powered: true}),
      111 => Some(Self {instrument: NoteBlockInstrumentProperty::Snare, note: NumberFrom0To24Property::new(5), powered: false}),
      112 => Some(Self {instrument: NoteBlockInstrumentProperty::Snare, note: NumberFrom0To24Property::new(6), powered: true}),
      113 => Some(Self {instrument: NoteBlockInstrumentProperty::Snare, note: NumberFrom0To24Property::new(6), powered: false}),
      114 => Some(Self {instrument: NoteBlockInstrumentProperty::Snare, note: NumberFrom0To24Property::new(7), powered: true}),
      115 => Some(Self {instrument: NoteBlockInstrumentProperty::Snare, note: NumberFrom0To24Property::new(7), powered: false}),
      116 => Some(Self {instrument: NoteBlockInstrumentProperty::Snare, note: NumberFrom0To24Property::new(8), powered: true}),
      117 => Some(Self {instrument: NoteBlockInstrumentProperty::Snare, note: NumberFrom0To24Property::new(8), powered: false}),
      118 => Some(Self {instrument: NoteBlockInstrumentProperty::Snare, note: NumberFrom0To24Property::new(9), powered: true}),
      119 => Some(Self {instrument: NoteBlockInstrumentProperty::Snare, note: NumberFrom0To24Property::new(9), powered: false}),
      120 => Some(Self {instrument: NoteBlockInstrumentProperty::Snare, note: NumberFrom0To24Property::new(10), powered: true}),
      121 => Some(Self {instrument: NoteBlockInstrumentProperty::Snare, note: NumberFrom0To24Property::new(10), powered: false}),
      122 => Some(Self {instrument: NoteBlockInstrumentProperty::Snare, note: NumberFrom0To24Property::new(11), powered: true}),
      123 => Some(Self {instrument: NoteBlockInstrumentProperty::Snare, note: NumberFrom0To24Property::new(11), powered: false}),
      124 => Some(Self {instrument: NoteBlockInstrumentProperty::Snare, note: NumberFrom0To24Property::new(12), powered: true}),
      125 => Some(Self {instrument: NoteBlockInstrumentProperty::Snare, note: NumberFrom0To24Property::new(12), powered: false}),
      126 => Some(Self {instrument: NoteBlockInstrumentProperty::Snare, note: NumberFrom0To24Property::new(13), powered: true}),
      127 => Some(Self {instrument: NoteBlockInstrumentProperty::Snare, note: NumberFrom0To24Property::new(13), powered: false}),
      128 => Some(Self {instrument: NoteBlockInstrumentProperty::Snare, note: NumberFrom0To24Property::new(14), powered: true}),
      129 => Some(Self {instrument: NoteBlockInstrumentProperty::Snare, note: NumberFrom0To24Property::new(14), powered: false}),
      130 => Some(Self {instrument: NoteBlockInstrumentProperty::Snare, note: NumberFrom0To24Property::new(15), powered: true}),
      131 => Some(Self {instrument: NoteBlockInstrumentProperty::Snare, note: NumberFrom0To24Property::new(15), powered: false}),
      132 => Some(Self {instrument: NoteBlockInstrumentProperty::Snare, note: NumberFrom0To24Property::new(16), powered: true}),
      133 => Some(Self {instrument: NoteBlockInstrumentProperty::Snare, note: NumberFrom0To24Property::new(16), powered: false}),
      134 => Some(Self {instrument: NoteBlockInstrumentProperty::Snare, note: NumberFrom0To24Property::new(17), powered: true}),
      135 => Some(Self {instrument: NoteBlockInstrumentProperty::Snare, note: NumberFrom0To24Property::new(17), powered: false}),
      136 => Some(Self {instrument: NoteBlockInstrumentProperty::Snare, note: NumberFrom0To24Property::new(18), powered: true}),
      137 => Some(Self {instrument: NoteBlockInstrumentProperty::Snare, note: NumberFrom0To24Property::new(18), powered: false}),
      138 => Some(Self {instrument: NoteBlockInstrumentProperty::Snare, note: NumberFrom0To24Property::new(19), powered: true}),
      139 => Some(Self {instrument: NoteBlockInstrumentProperty::Snare, note: NumberFrom0To24Property::new(19), powered: false}),
      140 => Some(Self {instrument: NoteBlockInstrumentProperty::Snare, note: NumberFrom0To24Property::new(20), powered: true}),
      141 => Some(Self {instrument: NoteBlockInstrumentProperty::Snare, note: NumberFrom0To24Property::new(20), powered: false}),
      142 => Some(Self {instrument: NoteBlockInstrumentProperty::Snare, note: NumberFrom0To24Property::new(21), powered: true}),
      143 => Some(Self {instrument: NoteBlockInstrumentProperty::Snare, note: NumberFrom0To24Property::new(21), powered: false}),
      144 => Some(Self {instrument: NoteBlockInstrumentProperty::Snare, note: NumberFrom0To24Property::new(22), powered: true}),
      145 => Some(Self {instrument: NoteBlockInstrumentProperty::Snare, note: NumberFrom0To24Property::new(22), powered: false}),
      146 => Some(Self {instrument: NoteBlockInstrumentProperty::Snare, note: NumberFrom0To24Property::new(23), powered: true}),
      147 => Some(Self {instrument: NoteBlockInstrumentProperty::Snare, note: NumberFrom0To24Property::new(23), powered: false}),
      148 => Some(Self {instrument: NoteBlockInstrumentProperty::Snare, note: NumberFrom0To24Property::new(24), powered: true}),
      149 => Some(Self {instrument: NoteBlockInstrumentProperty::Snare, note: NumberFrom0To24Property::new(24), powered: false}),
      150 => Some(Self {instrument: NoteBlockInstrumentProperty::Hat, note: NumberFrom0To24Property::new(0), powered: true}),
      151 => Some(Self {instrument: NoteBlockInstrumentProperty::Hat, note: NumberFrom0To24Property::new(0), powered: false}),
      152 => Some(Self {instrument: NoteBlockInstrumentProperty::Hat, note: NumberFrom0To24Property::new(1), powered: true}),
      153 => Some(Self {instrument: NoteBlockInstrumentProperty::Hat, note: NumberFrom0To24Property::new(1), powered: false}),
      154 => Some(Self {instrument: NoteBlockInstrumentProperty::Hat, note: NumberFrom0To24Property::new(2), powered: true}),
      155 => Some(Self {instrument: NoteBlockInstrumentProperty::Hat, note: NumberFrom0To24Property::new(2), powered: false}),
      156 => Some(Self {instrument: NoteBlockInstrumentProperty::Hat, note: NumberFrom0To24Property::new(3), powered: true}),
      157 => Some(Self {instrument: NoteBlockInstrumentProperty::Hat, note: NumberFrom0To24Property::new(3), powered: false}),
      158 => Some(Self {instrument: NoteBlockInstrumentProperty::Hat, note: NumberFrom0To24Property::new(4), powered: true}),
      159 => Some(Self {instrument: NoteBlockInstrumentProperty::Hat, note: NumberFrom0To24Property::new(4), powered: false}),
      160 => Some(Self {instrument: NoteBlockInstrumentProperty::Hat, note: NumberFrom0To24Property::new(5), powered: true}),
      161 => Some(Self {instrument: NoteBlockInstrumentProperty::Hat, note: NumberFrom0To24Property::new(5), powered: false}),
      162 => Some(Self {instrument: NoteBlockInstrumentProperty::Hat, note: NumberFrom0To24Property::new(6), powered: true}),
      163 => Some(Self {instrument: NoteBlockInstrumentProperty::Hat, note: NumberFrom0To24Property::new(6), powered: false}),
      164 => Some(Self {instrument: NoteBlockInstrumentProperty::Hat, note: NumberFrom0To24Property::new(7), powered: true}),
      165 => Some(Self {instrument: NoteBlockInstrumentProperty::Hat, note: NumberFrom0To24Property::new(7), powered: false}),
      166 => Some(Self {instrument: NoteBlockInstrumentProperty::Hat, note: NumberFrom0To24Property::new(8), powered: true}),
      167 => Some(Self {instrument: NoteBlockInstrumentProperty::Hat, note: NumberFrom0To24Property::new(8), powered: false}),
      168 => Some(Self {instrument: NoteBlockInstrumentProperty::Hat, note: NumberFrom0To24Property::new(9), powered: true}),
      169 => Some(Self {instrument: NoteBlockInstrumentProperty::Hat, note: NumberFrom0To24Property::new(9), powered: false}),
      170 => Some(Self {instrument: NoteBlockInstrumentProperty::Hat, note: NumberFrom0To24Property::new(10), powered: true}),
      171 => Some(Self {instrument: NoteBlockInstrumentProperty::Hat, note: NumberFrom0To24Property::new(10), powered: false}),
      172 => Some(Self {instrument: NoteBlockInstrumentProperty::Hat, note: NumberFrom0To24Property::new(11), powered: true}),
      173 => Some(Self {instrument: NoteBlockInstrumentProperty::Hat, note: NumberFrom0To24Property::new(11), powered: false}),
      174 => Some(Self {instrument: NoteBlockInstrumentProperty::Hat, note: NumberFrom0To24Property::new(12), powered: true}),
      175 => Some(Self {instrument: NoteBlockInstrumentProperty::Hat, note: NumberFrom0To24Property::new(12), powered: false}),
      176 => Some(Self {instrument: NoteBlockInstrumentProperty::Hat, note: NumberFrom0To24Property::new(13), powered: true}),
      177 => Some(Self {instrument: NoteBlockInstrumentProperty::Hat, note: NumberFrom0To24Property::new(13), powered: false}),
      178 => Some(Self {instrument: NoteBlockInstrumentProperty::Hat, note: NumberFrom0To24Property::new(14), powered: true}),
      179 => Some(Self {instrument: NoteBlockInstrumentProperty::Hat, note: NumberFrom0To24Property::new(14), powered: false}),
      180 => Some(Self {instrument: NoteBlockInstrumentProperty::Hat, note: NumberFrom0To24Property::new(15), powered: true}),
      181 => Some(Self {instrument: NoteBlockInstrumentProperty::Hat, note: NumberFrom0To24Property::new(15), powered: false}),
      182 => Some(Self {instrument: NoteBlockInstrumentProperty::Hat, note: NumberFrom0To24Property::new(16), powered: true}),
      183 => Some(Self {instrument: NoteBlockInstrumentProperty::Hat, note: NumberFrom0To24Property::new(16), powered: false}),
      184 => Some(Self {instrument: NoteBlockInstrumentProperty::Hat, note: NumberFrom0To24Property::new(17), powered: true}),
      185 => Some(Self {instrument: NoteBlockInstrumentProperty::Hat, note: NumberFrom0To24Property::new(17), powered: false}),
      186 => Some(Self {instrument: NoteBlockInstrumentProperty::Hat, note: NumberFrom0To24Property::new(18), powered: true}),
      187 => Some(Self {instrument: NoteBlockInstrumentProperty::Hat, note: NumberFrom0To24Property::new(18), powered: false}),
      188 => Some(Self {instrument: NoteBlockInstrumentProperty::Hat, note: NumberFrom0To24Property::new(19), powered: true}),
      189 => Some(Self {instrument: NoteBlockInstrumentProperty::Hat, note: NumberFrom0To24Property::new(19), powered: false}),
      190 => Some(Self {instrument: NoteBlockInstrumentProperty::Hat, note: NumberFrom0To24Property::new(20), powered: true}),
      191 => Some(Self {instrument: NoteBlockInstrumentProperty::Hat, note: NumberFrom0To24Property::new(20), powered: false}),
      192 => Some(Self {instrument: NoteBlockInstrumentProperty::Hat, note: NumberFrom0To24Property::new(21), powered: true}),
      193 => Some(Self {instrument: NoteBlockInstrumentProperty::Hat, note: NumberFrom0To24Property::new(21), powered: false}),
      194 => Some(Self {instrument: NoteBlockInstrumentProperty::Hat, note: NumberFrom0To24Property::new(22), powered: true}),
      195 => Some(Self {instrument: NoteBlockInstrumentProperty::Hat, note: NumberFrom0To24Property::new(22), powered: false}),
      196 => Some(Self {instrument: NoteBlockInstrumentProperty::Hat, note: NumberFrom0To24Property::new(23), powered: true}),
      197 => Some(Self {instrument: NoteBlockInstrumentProperty::Hat, note: NumberFrom0To24Property::new(23), powered: false}),
      198 => Some(Self {instrument: NoteBlockInstrumentProperty::Hat, note: NumberFrom0To24Property::new(24), powered: true}),
      199 => Some(Self {instrument: NoteBlockInstrumentProperty::Hat, note: NumberFrom0To24Property::new(24), powered: false}),
      200 => Some(Self {instrument: NoteBlockInstrumentProperty::Bass, note: NumberFrom0To24Property::new(0), powered: true}),
      201 => Some(Self {instrument: NoteBlockInstrumentProperty::Bass, note: NumberFrom0To24Property::new(0), powered: false}),
      202 => Some(Self {instrument: NoteBlockInstrumentProperty::Bass, note: NumberFrom0To24Property::new(1), powered: true}),
      203 => Some(Self {instrument: NoteBlockInstrumentProperty::Bass, note: NumberFrom0To24Property::new(1), powered: false}),
      204 => Some(Self {instrument: NoteBlockInstrumentProperty::Bass, note: NumberFrom0To24Property::new(2), powered: true}),
      205 => Some(Self {instrument: NoteBlockInstrumentProperty::Bass, note: NumberFrom0To24Property::new(2), powered: false}),
      206 => Some(Self {instrument: NoteBlockInstrumentProperty::Bass, note: NumberFrom0To24Property::new(3), powered: true}),
      207 => Some(Self {instrument: NoteBlockInstrumentProperty::Bass, note: NumberFrom0To24Property::new(3), powered: false}),
      208 => Some(Self {instrument: NoteBlockInstrumentProperty::Bass, note: NumberFrom0To24Property::new(4), powered: true}),
      209 => Some(Self {instrument: NoteBlockInstrumentProperty::Bass, note: NumberFrom0To24Property::new(4), powered: false}),
      210 => Some(Self {instrument: NoteBlockInstrumentProperty::Bass, note: NumberFrom0To24Property::new(5), powered: true}),
      211 => Some(Self {instrument: NoteBlockInstrumentProperty::Bass, note: NumberFrom0To24Property::new(5), powered: false}),
      212 => Some(Self {instrument: NoteBlockInstrumentProperty::Bass, note: NumberFrom0To24Property::new(6), powered: true}),
      213 => Some(Self {instrument: NoteBlockInstrumentProperty::Bass, note: NumberFrom0To24Property::new(6), powered: false}),
      214 => Some(Self {instrument: NoteBlockInstrumentProperty::Bass, note: NumberFrom0To24Property::new(7), powered: true}),
      215 => Some(Self {instrument: NoteBlockInstrumentProperty::Bass, note: NumberFrom0To24Property::new(7), powered: false}),
      216 => Some(Self {instrument: NoteBlockInstrumentProperty::Bass, note: NumberFrom0To24Property::new(8), powered: true}),
      217 => Some(Self {instrument: NoteBlockInstrumentProperty::Bass, note: NumberFrom0To24Property::new(8), powered: false}),
      218 => Some(Self {instrument: NoteBlockInstrumentProperty::Bass, note: NumberFrom0To24Property::new(9), powered: true}),
      219 => Some(Self {instrument: NoteBlockInstrumentProperty::Bass, note: NumberFrom0To24Property::new(9), powered: false}),
      220 => Some(Self {instrument: NoteBlockInstrumentProperty::Bass, note: NumberFrom0To24Property::new(10), powered: true}),
      221 => Some(Self {instrument: NoteBlockInstrumentProperty::Bass, note: NumberFrom0To24Property::new(10), powered: false}),
      222 => Some(Self {instrument: NoteBlockInstrumentProperty::Bass, note: NumberFrom0To24Property::new(11), powered: true}),
      223 => Some(Self {instrument: NoteBlockInstrumentProperty::Bass, note: NumberFrom0To24Property::new(11), powered: false}),
      224 => Some(Self {instrument: NoteBlockInstrumentProperty::Bass, note: NumberFrom0To24Property::new(12), powered: true}),
      225 => Some(Self {instrument: NoteBlockInstrumentProperty::Bass, note: NumberFrom0To24Property::new(12), powered: false}),
      226 => Some(Self {instrument: NoteBlockInstrumentProperty::Bass, note: NumberFrom0To24Property::new(13), powered: true}),
      227 => Some(Self {instrument: NoteBlockInstrumentProperty::Bass, note: NumberFrom0To24Property::new(13), powered: false}),
      228 => Some(Self {instrument: NoteBlockInstrumentProperty::Bass, note: NumberFrom0To24Property::new(14), powered: true}),
      229 => Some(Self {instrument: NoteBlockInstrumentProperty::Bass, note: NumberFrom0To24Property::new(14), powered: false}),
      230 => Some(Self {instrument: NoteBlockInstrumentProperty::Bass, note: NumberFrom0To24Property::new(15), powered: true}),
      231 => Some(Self {instrument: NoteBlockInstrumentProperty::Bass, note: NumberFrom0To24Property::new(15), powered: false}),
      232 => Some(Self {instrument: NoteBlockInstrumentProperty::Bass, note: NumberFrom0To24Property::new(16), powered: true}),
      233 => Some(Self {instrument: NoteBlockInstrumentProperty::Bass, note: NumberFrom0To24Property::new(16), powered: false}),
      234 => Some(Self {instrument: NoteBlockInstrumentProperty::Bass, note: NumberFrom0To24Property::new(17), powered: true}),
      235 => Some(Self {instrument: NoteBlockInstrumentProperty::Bass, note: NumberFrom0To24Property::new(17), powered: false}),
      236 => Some(Self {instrument: NoteBlockInstrumentProperty::Bass, note: NumberFrom0To24Property::new(18), powered: true}),
      237 => Some(Self {instrument: NoteBlockInstrumentProperty::Bass, note: NumberFrom0To24Property::new(18), powered: false}),
      238 => Some(Self {instrument: NoteBlockInstrumentProperty::Bass, note: NumberFrom0To24Property::new(19), powered: true}),
      239 => Some(Self {instrument: NoteBlockInstrumentProperty::Bass, note: NumberFrom0To24Property::new(19), powered: false}),
      240 => Some(Self {instrument: NoteBlockInstrumentProperty::Bass, note: NumberFrom0To24Property::new(20), powered: true}),
      241 => Some(Self {instrument: NoteBlockInstrumentProperty::Bass, note: NumberFrom0To24Property::new(20), powered: false}),
      242 => Some(Self {instrument: NoteBlockInstrumentProperty::Bass, note: NumberFrom0To24Property::new(21), powered: true}),
      243 => Some(Self {instrument: NoteBlockInstrumentProperty::Bass, note: NumberFrom0To24Property::new(21), powered: false}),
      244 => Some(Self {instrument: NoteBlockInstrumentProperty::Bass, note: NumberFrom0To24Property::new(22), powered: true}),
      245 => Some(Self {instrument: NoteBlockInstrumentProperty::Bass, note: NumberFrom0To24Property::new(22), powered: false}),
      246 => Some(Self {instrument: NoteBlockInstrumentProperty::Bass, note: NumberFrom0To24Property::new(23), powered: true}),
      247 => Some(Self {instrument: NoteBlockInstrumentProperty::Bass, note: NumberFrom0To24Property::new(23), powered: false}),
      248 => Some(Self {instrument: NoteBlockInstrumentProperty::Bass, note: NumberFrom0To24Property::new(24), powered: true}),
      249 => Some(Self {instrument: NoteBlockInstrumentProperty::Bass, note: NumberFrom0To24Property::new(24), powered: false}),
      250 => Some(Self {instrument: NoteBlockInstrumentProperty::Flute, note: NumberFrom0To24Property::new(0), powered: true}),
      251 => Some(Self {instrument: NoteBlockInstrumentProperty::Flute, note: NumberFrom0To24Property::new(0), powered: false}),
      252 => Some(Self {instrument: NoteBlockInstrumentProperty::Flute, note: NumberFrom0To24Property::new(1), powered: true}),
      253 => Some(Self {instrument: NoteBlockInstrumentProperty::Flute, note: NumberFrom0To24Property::new(1), powered: false}),
      254 => Some(Self {instrument: NoteBlockInstrumentProperty::Flute, note: NumberFrom0To24Property::new(2), powered: true}),
      255 => Some(Self {instrument: NoteBlockInstrumentProperty::Flute, note: NumberFrom0To24Property::new(2), powered: false}),
      256 => Some(Self {instrument: NoteBlockInstrumentProperty::Flute, note: NumberFrom0To24Property::new(3), powered: true}),
      257 => Some(Self {instrument: NoteBlockInstrumentProperty::Flute, note: NumberFrom0To24Property::new(3), powered: false}),
      258 => Some(Self {instrument: NoteBlockInstrumentProperty::Flute, note: NumberFrom0To24Property::new(4), powered: true}),
      259 => Some(Self {instrument: NoteBlockInstrumentProperty::Flute, note: NumberFrom0To24Property::new(4), powered: false}),
      260 => Some(Self {instrument: NoteBlockInstrumentProperty::Flute, note: NumberFrom0To24Property::new(5), powered: true}),
      261 => Some(Self {instrument: NoteBlockInstrumentProperty::Flute, note: NumberFrom0To24Property::new(5), powered: false}),
      262 => Some(Self {instrument: NoteBlockInstrumentProperty::Flute, note: NumberFrom0To24Property::new(6), powered: true}),
      263 => Some(Self {instrument: NoteBlockInstrumentProperty::Flute, note: NumberFrom0To24Property::new(6), powered: false}),
      264 => Some(Self {instrument: NoteBlockInstrumentProperty::Flute, note: NumberFrom0To24Property::new(7), powered: true}),
      265 => Some(Self {instrument: NoteBlockInstrumentProperty::Flute, note: NumberFrom0To24Property::new(7), powered: false}),
      266 => Some(Self {instrument: NoteBlockInstrumentProperty::Flute, note: NumberFrom0To24Property::new(8), powered: true}),
      267 => Some(Self {instrument: NoteBlockInstrumentProperty::Flute, note: NumberFrom0To24Property::new(8), powered: false}),
      268 => Some(Self {instrument: NoteBlockInstrumentProperty::Flute, note: NumberFrom0To24Property::new(9), powered: true}),
      269 => Some(Self {instrument: NoteBlockInstrumentProperty::Flute, note: NumberFrom0To24Property::new(9), powered: false}),
      270 => Some(Self {instrument: NoteBlockInstrumentProperty::Flute, note: NumberFrom0To24Property::new(10), powered: true}),
      271 => Some(Self {instrument: NoteBlockInstrumentProperty::Flute, note: NumberFrom0To24Property::new(10), powered: false}),
      272 => Some(Self {instrument: NoteBlockInstrumentProperty::Flute, note: NumberFrom0To24Property::new(11), powered: true}),
      273 => Some(Self {instrument: NoteBlockInstrumentProperty::Flute, note: NumberFrom0To24Property::new(11), powered: false}),
      274 => Some(Self {instrument: NoteBlockInstrumentProperty::Flute, note: NumberFrom0To24Property::new(12), powered: true}),
      275 => Some(Self {instrument: NoteBlockInstrumentProperty::Flute, note: NumberFrom0To24Property::new(12), powered: false}),
      276 => Some(Self {instrument: NoteBlockInstrumentProperty::Flute, note: NumberFrom0To24Property::new(13), powered: true}),
      277 => Some(Self {instrument: NoteBlockInstrumentProperty::Flute, note: NumberFrom0To24Property::new(13), powered: false}),
      278 => Some(Self {instrument: NoteBlockInstrumentProperty::Flute, note: NumberFrom0To24Property::new(14), powered: true}),
      279 => Some(Self {instrument: NoteBlockInstrumentProperty::Flute, note: NumberFrom0To24Property::new(14), powered: false}),
      280 => Some(Self {instrument: NoteBlockInstrumentProperty::Flute, note: NumberFrom0To24Property::new(15), powered: true}),
      281 => Some(Self {instrument: NoteBlockInstrumentProperty::Flute, note: NumberFrom0To24Property::new(15), powered: false}),
      282 => Some(Self {instrument: NoteBlockInstrumentProperty::Flute, note: NumberFrom0To24Property::new(16), powered: true}),
      283 => Some(Self {instrument: NoteBlockInstrumentProperty::Flute, note: NumberFrom0To24Property::new(16), powered: false}),
      284 => Some(Self {instrument: NoteBlockInstrumentProperty::Flute, note: NumberFrom0To24Property::new(17), powered: true}),
      285 => Some(Self {instrument: NoteBlockInstrumentProperty::Flute, note: NumberFrom0To24Property::new(17), powered: false}),
      286 => Some(Self {instrument: NoteBlockInstrumentProperty::Flute, note: NumberFrom0To24Property::new(18), powered: true}),
      287 => Some(Self {instrument: NoteBlockInstrumentProperty::Flute, note: NumberFrom0To24Property::new(18), powered: false}),
      288 => Some(Self {instrument: NoteBlockInstrumentProperty::Flute, note: NumberFrom0To24Property::new(19), powered: true}),
      289 => Some(Self {instrument: NoteBlockInstrumentProperty::Flute, note: NumberFrom0To24Property::new(19), powered: false}),
      290 => Some(Self {instrument: NoteBlockInstrumentProperty::Flute, note: NumberFrom0To24Property::new(20), powered: true}),
      291 => Some(Self {instrument: NoteBlockInstrumentProperty::Flute, note: NumberFrom0To24Property::new(20), powered: false}),
      292 => Some(Self {instrument: NoteBlockInstrumentProperty::Flute, note: NumberFrom0To24Property::new(21), powered: true}),
      293 => Some(Self {instrument: NoteBlockInstrumentProperty::Flute, note: NumberFrom0To24Property::new(21), powered: false}),
      294 => Some(Self {instrument: NoteBlockInstrumentProperty::Flute, note: NumberFrom0To24Property::new(22), powered: true}),
      295 => Some(Self {instrument: NoteBlockInstrumentProperty::Flute, note: NumberFrom0To24Property::new(22), powered: false}),
      296 => Some(Self {instrument: NoteBlockInstrumentProperty::Flute, note: NumberFrom0To24Property::new(23), powered: true}),
      297 => Some(Self {instrument: NoteBlockInstrumentProperty::Flute, note: NumberFrom0To24Property::new(23), powered: false}),
      298 => Some(Self {instrument: NoteBlockInstrumentProperty::Flute, note: NumberFrom0To24Property::new(24), powered: true}),
      299 => Some(Self {instrument: NoteBlockInstrumentProperty::Flute, note: NumberFrom0To24Property::new(24), powered: false}),
      300 => Some(Self {instrument: NoteBlockInstrumentProperty::Bell, note: NumberFrom0To24Property::new(0), powered: true}),
      301 => Some(Self {instrument: NoteBlockInstrumentProperty::Bell, note: NumberFrom0To24Property::new(0), powered: false}),
      302 => Some(Self {instrument: NoteBlockInstrumentProperty::Bell, note: NumberFrom0To24Property::new(1), powered: true}),
      303 => Some(Self {instrument: NoteBlockInstrumentProperty::Bell, note: NumberFrom0To24Property::new(1), powered: false}),
      304 => Some(Self {instrument: NoteBlockInstrumentProperty::Bell, note: NumberFrom0To24Property::new(2), powered: true}),
      305 => Some(Self {instrument: NoteBlockInstrumentProperty::Bell, note: NumberFrom0To24Property::new(2), powered: false}),
      306 => Some(Self {instrument: NoteBlockInstrumentProperty::Bell, note: NumberFrom0To24Property::new(3), powered: true}),
      307 => Some(Self {instrument: NoteBlockInstrumentProperty::Bell, note: NumberFrom0To24Property::new(3), powered: false}),
      308 => Some(Self {instrument: NoteBlockInstrumentProperty::Bell, note: NumberFrom0To24Property::new(4), powered: true}),
      309 => Some(Self {instrument: NoteBlockInstrumentProperty::Bell, note: NumberFrom0To24Property::new(4), powered: false}),
      310 => Some(Self {instrument: NoteBlockInstrumentProperty::Bell, note: NumberFrom0To24Property::new(5), powered: true}),
      311 => Some(Self {instrument: NoteBlockInstrumentProperty::Bell, note: NumberFrom0To24Property::new(5), powered: false}),
      312 => Some(Self {instrument: NoteBlockInstrumentProperty::Bell, note: NumberFrom0To24Property::new(6), powered: true}),
      313 => Some(Self {instrument: NoteBlockInstrumentProperty::Bell, note: NumberFrom0To24Property::new(6), powered: false}),
      314 => Some(Self {instrument: NoteBlockInstrumentProperty::Bell, note: NumberFrom0To24Property::new(7), powered: true}),
      315 => Some(Self {instrument: NoteBlockInstrumentProperty::Bell, note: NumberFrom0To24Property::new(7), powered: false}),
      316 => Some(Self {instrument: NoteBlockInstrumentProperty::Bell, note: NumberFrom0To24Property::new(8), powered: true}),
      317 => Some(Self {instrument: NoteBlockInstrumentProperty::Bell, note: NumberFrom0To24Property::new(8), powered: false}),
      318 => Some(Self {instrument: NoteBlockInstrumentProperty::Bell, note: NumberFrom0To24Property::new(9), powered: true}),
      319 => Some(Self {instrument: NoteBlockInstrumentProperty::Bell, note: NumberFrom0To24Property::new(9), powered: false}),
      320 => Some(Self {instrument: NoteBlockInstrumentProperty::Bell, note: NumberFrom0To24Property::new(10), powered: true}),
      321 => Some(Self {instrument: NoteBlockInstrumentProperty::Bell, note: NumberFrom0To24Property::new(10), powered: false}),
      322 => Some(Self {instrument: NoteBlockInstrumentProperty::Bell, note: NumberFrom0To24Property::new(11), powered: true}),
      323 => Some(Self {instrument: NoteBlockInstrumentProperty::Bell, note: NumberFrom0To24Property::new(11), powered: false}),
      324 => Some(Self {instrument: NoteBlockInstrumentProperty::Bell, note: NumberFrom0To24Property::new(12), powered: true}),
      325 => Some(Self {instrument: NoteBlockInstrumentProperty::Bell, note: NumberFrom0To24Property::new(12), powered: false}),
      326 => Some(Self {instrument: NoteBlockInstrumentProperty::Bell, note: NumberFrom0To24Property::new(13), powered: true}),
      327 => Some(Self {instrument: NoteBlockInstrumentProperty::Bell, note: NumberFrom0To24Property::new(13), powered: false}),
      328 => Some(Self {instrument: NoteBlockInstrumentProperty::Bell, note: NumberFrom0To24Property::new(14), powered: true}),
      329 => Some(Self {instrument: NoteBlockInstrumentProperty::Bell, note: NumberFrom0To24Property::new(14), powered: false}),
      330 => Some(Self {instrument: NoteBlockInstrumentProperty::Bell, note: NumberFrom0To24Property::new(15), powered: true}),
      331 => Some(Self {instrument: NoteBlockInstrumentProperty::Bell, note: NumberFrom0To24Property::new(15), powered: false}),
      332 => Some(Self {instrument: NoteBlockInstrumentProperty::Bell, note: NumberFrom0To24Property::new(16), powered: true}),
      333 => Some(Self {instrument: NoteBlockInstrumentProperty::Bell, note: NumberFrom0To24Property::new(16), powered: false}),
      334 => Some(Self {instrument: NoteBlockInstrumentProperty::Bell, note: NumberFrom0To24Property::new(17), powered: true}),
      335 => Some(Self {instrument: NoteBlockInstrumentProperty::Bell, note: NumberFrom0To24Property::new(17), powered: false}),
      336 => Some(Self {instrument: NoteBlockInstrumentProperty::Bell, note: NumberFrom0To24Property::new(18), powered: true}),
      337 => Some(Self {instrument: NoteBlockInstrumentProperty::Bell, note: NumberFrom0To24Property::new(18), powered: false}),
      338 => Some(Self {instrument: NoteBlockInstrumentProperty::Bell, note: NumberFrom0To24Property::new(19), powered: true}),
      339 => Some(Self {instrument: NoteBlockInstrumentProperty::Bell, note: NumberFrom0To24Property::new(19), powered: false}),
      340 => Some(Self {instrument: NoteBlockInstrumentProperty::Bell, note: NumberFrom0To24Property::new(20), powered: true}),
      341 => Some(Self {instrument: NoteBlockInstrumentProperty::Bell, note: NumberFrom0To24Property::new(20), powered: false}),
      342 => Some(Self {instrument: NoteBlockInstrumentProperty::Bell, note: NumberFrom0To24Property::new(21), powered: true}),
      343 => Some(Self {instrument: NoteBlockInstrumentProperty::Bell, note: NumberFrom0To24Property::new(21), powered: false}),
      344 => Some(Self {instrument: NoteBlockInstrumentProperty::Bell, note: NumberFrom0To24Property::new(22), powered: true}),
      345 => Some(Self {instrument: NoteBlockInstrumentProperty::Bell, note: NumberFrom0To24Property::new(22), powered: false}),
      346 => Some(Self {instrument: NoteBlockInstrumentProperty::Bell, note: NumberFrom0To24Property::new(23), powered: true}),
      347 => Some(Self {instrument: NoteBlockInstrumentProperty::Bell, note: NumberFrom0To24Property::new(23), powered: false}),
      348 => Some(Self {instrument: NoteBlockInstrumentProperty::Bell, note: NumberFrom0To24Property::new(24), powered: true}),
      349 => Some(Self {instrument: NoteBlockInstrumentProperty::Bell, note: NumberFrom0To24Property::new(24), powered: false}),
      350 => Some(Self {instrument: NoteBlockInstrumentProperty::Guitar, note: NumberFrom0To24Property::new(0), powered: true}),
      351 => Some(Self {instrument: NoteBlockInstrumentProperty::Guitar, note: NumberFrom0To24Property::new(0), powered: false}),
      352 => Some(Self {instrument: NoteBlockInstrumentProperty::Guitar, note: NumberFrom0To24Property::new(1), powered: true}),
      353 => Some(Self {instrument: NoteBlockInstrumentProperty::Guitar, note: NumberFrom0To24Property::new(1), powered: false}),
      354 => Some(Self {instrument: NoteBlockInstrumentProperty::Guitar, note: NumberFrom0To24Property::new(2), powered: true}),
      355 => Some(Self {instrument: NoteBlockInstrumentProperty::Guitar, note: NumberFrom0To24Property::new(2), powered: false}),
      356 => Some(Self {instrument: NoteBlockInstrumentProperty::Guitar, note: NumberFrom0To24Property::new(3), powered: true}),
      357 => Some(Self {instrument: NoteBlockInstrumentProperty::Guitar, note: NumberFrom0To24Property::new(3), powered: false}),
      358 => Some(Self {instrument: NoteBlockInstrumentProperty::Guitar, note: NumberFrom0To24Property::new(4), powered: true}),
      359 => Some(Self {instrument: NoteBlockInstrumentProperty::Guitar, note: NumberFrom0To24Property::new(4), powered: false}),
      360 => Some(Self {instrument: NoteBlockInstrumentProperty::Guitar, note: NumberFrom0To24Property::new(5), powered: true}),
      361 => Some(Self {instrument: NoteBlockInstrumentProperty::Guitar, note: NumberFrom0To24Property::new(5), powered: false}),
      362 => Some(Self {instrument: NoteBlockInstrumentProperty::Guitar, note: NumberFrom0To24Property::new(6), powered: true}),
      363 => Some(Self {instrument: NoteBlockInstrumentProperty::Guitar, note: NumberFrom0To24Property::new(6), powered: false}),
      364 => Some(Self {instrument: NoteBlockInstrumentProperty::Guitar, note: NumberFrom0To24Property::new(7), powered: true}),
      365 => Some(Self {instrument: NoteBlockInstrumentProperty::Guitar, note: NumberFrom0To24Property::new(7), powered: false}),
      366 => Some(Self {instrument: NoteBlockInstrumentProperty::Guitar, note: NumberFrom0To24Property::new(8), powered: true}),
      367 => Some(Self {instrument: NoteBlockInstrumentProperty::Guitar, note: NumberFrom0To24Property::new(8), powered: false}),
      368 => Some(Self {instrument: NoteBlockInstrumentProperty::Guitar, note: NumberFrom0To24Property::new(9), powered: true}),
      369 => Some(Self {instrument: NoteBlockInstrumentProperty::Guitar, note: NumberFrom0To24Property::new(9), powered: false}),
      370 => Some(Self {instrument: NoteBlockInstrumentProperty::Guitar, note: NumberFrom0To24Property::new(10), powered: true}),
      371 => Some(Self {instrument: NoteBlockInstrumentProperty::Guitar, note: NumberFrom0To24Property::new(10), powered: false}),
      372 => Some(Self {instrument: NoteBlockInstrumentProperty::Guitar, note: NumberFrom0To24Property::new(11), powered: true}),
      373 => Some(Self {instrument: NoteBlockInstrumentProperty::Guitar, note: NumberFrom0To24Property::new(11), powered: false}),
      374 => Some(Self {instrument: NoteBlockInstrumentProperty::Guitar, note: NumberFrom0To24Property::new(12), powered: true}),
      375 => Some(Self {instrument: NoteBlockInstrumentProperty::Guitar, note: NumberFrom0To24Property::new(12), powered: false}),
      376 => Some(Self {instrument: NoteBlockInstrumentProperty::Guitar, note: NumberFrom0To24Property::new(13), powered: true}),
      377 => Some(Self {instrument: NoteBlockInstrumentProperty::Guitar, note: NumberFrom0To24Property::new(13), powered: false}),
      378 => Some(Self {instrument: NoteBlockInstrumentProperty::Guitar, note: NumberFrom0To24Property::new(14), powered: true}),
      379 => Some(Self {instrument: NoteBlockInstrumentProperty::Guitar, note: NumberFrom0To24Property::new(14), powered: false}),
      380 => Some(Self {instrument: NoteBlockInstrumentProperty::Guitar, note: NumberFrom0To24Property::new(15), powered: true}),
      381 => Some(Self {instrument: NoteBlockInstrumentProperty::Guitar, note: NumberFrom0To24Property::new(15), powered: false}),
      382 => Some(Self {instrument: NoteBlockInstrumentProperty::Guitar, note: NumberFrom0To24Property::new(16), powered: true}),
      383 => Some(Self {instrument: NoteBlockInstrumentProperty::Guitar, note: NumberFrom0To24Property::new(16), powered: false}),
      384 => Some(Self {instrument: NoteBlockInstrumentProperty::Guitar, note: NumberFrom0To24Property::new(17), powered: true}),
      385 => Some(Self {instrument: NoteBlockInstrumentProperty::Guitar, note: NumberFrom0To24Property::new(17), powered: false}),
      386 => Some(Self {instrument: NoteBlockInstrumentProperty::Guitar, note: NumberFrom0To24Property::new(18), powered: true}),
      387 => Some(Self {instrument: NoteBlockInstrumentProperty::Guitar, note: NumberFrom0To24Property::new(18), powered: false}),
      388 => Some(Self {instrument: NoteBlockInstrumentProperty::Guitar, note: NumberFrom0To24Property::new(19), powered: true}),
      389 => Some(Self {instrument: NoteBlockInstrumentProperty::Guitar, note: NumberFrom0To24Property::new(19), powered: false}),
      390 => Some(Self {instrument: NoteBlockInstrumentProperty::Guitar, note: NumberFrom0To24Property::new(20), powered: true}),
      391 => Some(Self {instrument: NoteBlockInstrumentProperty::Guitar, note: NumberFrom0To24Property::new(20), powered: false}),
      392 => Some(Self {instrument: NoteBlockInstrumentProperty::Guitar, note: NumberFrom0To24Property::new(21), powered: true}),
      393 => Some(Self {instrument: NoteBlockInstrumentProperty::Guitar, note: NumberFrom0To24Property::new(21), powered: false}),
      394 => Some(Self {instrument: NoteBlockInstrumentProperty::Guitar, note: NumberFrom0To24Property::new(22), powered: true}),
      395 => Some(Self {instrument: NoteBlockInstrumentProperty::Guitar, note: NumberFrom0To24Property::new(22), powered: false}),
      396 => Some(Self {instrument: NoteBlockInstrumentProperty::Guitar, note: NumberFrom0To24Property::new(23), powered: true}),
      397 => Some(Self {instrument: NoteBlockInstrumentProperty::Guitar, note: NumberFrom0To24Property::new(23), powered: false}),
      398 => Some(Self {instrument: NoteBlockInstrumentProperty::Guitar, note: NumberFrom0To24Property::new(24), powered: true}),
      399 => Some(Self {instrument: NoteBlockInstrumentProperty::Guitar, note: NumberFrom0To24Property::new(24), powered: false}),
      400 => Some(Self {instrument: NoteBlockInstrumentProperty::Chime, note: NumberFrom0To24Property::new(0), powered: true}),
      401 => Some(Self {instrument: NoteBlockInstrumentProperty::Chime, note: NumberFrom0To24Property::new(0), powered: false}),
      402 => Some(Self {instrument: NoteBlockInstrumentProperty::Chime, note: NumberFrom0To24Property::new(1), powered: true}),
      403 => Some(Self {instrument: NoteBlockInstrumentProperty::Chime, note: NumberFrom0To24Property::new(1), powered: false}),
      404 => Some(Self {instrument: NoteBlockInstrumentProperty::Chime, note: NumberFrom0To24Property::new(2), powered: true}),
      405 => Some(Self {instrument: NoteBlockInstrumentProperty::Chime, note: NumberFrom0To24Property::new(2), powered: false}),
      406 => Some(Self {instrument: NoteBlockInstrumentProperty::Chime, note: NumberFrom0To24Property::new(3), powered: true}),
      407 => Some(Self {instrument: NoteBlockInstrumentProperty::Chime, note: NumberFrom0To24Property::new(3), powered: false}),
      408 => Some(Self {instrument: NoteBlockInstrumentProperty::Chime, note: NumberFrom0To24Property::new(4), powered: true}),
      409 => Some(Self {instrument: NoteBlockInstrumentProperty::Chime, note: NumberFrom0To24Property::new(4), powered: false}),
      410 => Some(Self {instrument: NoteBlockInstrumentProperty::Chime, note: NumberFrom0To24Property::new(5), powered: true}),
      411 => Some(Self {instrument: NoteBlockInstrumentProperty::Chime, note: NumberFrom0To24Property::new(5), powered: false}),
      412 => Some(Self {instrument: NoteBlockInstrumentProperty::Chime, note: NumberFrom0To24Property::new(6), powered: true}),
      413 => Some(Self {instrument: NoteBlockInstrumentProperty::Chime, note: NumberFrom0To24Property::new(6), powered: false}),
      414 => Some(Self {instrument: NoteBlockInstrumentProperty::Chime, note: NumberFrom0To24Property::new(7), powered: true}),
      415 => Some(Self {instrument: NoteBlockInstrumentProperty::Chime, note: NumberFrom0To24Property::new(7), powered: false}),
      416 => Some(Self {instrument: NoteBlockInstrumentProperty::Chime, note: NumberFrom0To24Property::new(8), powered: true}),
      417 => Some(Self {instrument: NoteBlockInstrumentProperty::Chime, note: NumberFrom0To24Property::new(8), powered: false}),
      418 => Some(Self {instrument: NoteBlockInstrumentProperty::Chime, note: NumberFrom0To24Property::new(9), powered: true}),
      419 => Some(Self {instrument: NoteBlockInstrumentProperty::Chime, note: NumberFrom0To24Property::new(9), powered: false}),
      420 => Some(Self {instrument: NoteBlockInstrumentProperty::Chime, note: NumberFrom0To24Property::new(10), powered: true}),
      421 => Some(Self {instrument: NoteBlockInstrumentProperty::Chime, note: NumberFrom0To24Property::new(10), powered: false}),
      422 => Some(Self {instrument: NoteBlockInstrumentProperty::Chime, note: NumberFrom0To24Property::new(11), powered: true}),
      423 => Some(Self {instrument: NoteBlockInstrumentProperty::Chime, note: NumberFrom0To24Property::new(11), powered: false}),
      424 => Some(Self {instrument: NoteBlockInstrumentProperty::Chime, note: NumberFrom0To24Property::new(12), powered: true}),
      425 => Some(Self {instrument: NoteBlockInstrumentProperty::Chime, note: NumberFrom0To24Property::new(12), powered: false}),
      426 => Some(Self {instrument: NoteBlockInstrumentProperty::Chime, note: NumberFrom0To24Property::new(13), powered: true}),
      427 => Some(Self {instrument: NoteBlockInstrumentProperty::Chime, note: NumberFrom0To24Property::new(13), powered: false}),
      428 => Some(Self {instrument: NoteBlockInstrumentProperty::Chime, note: NumberFrom0To24Property::new(14), powered: true}),
      429 => Some(Self {instrument: NoteBlockInstrumentProperty::Chime, note: NumberFrom0To24Property::new(14), powered: false}),
      430 => Some(Self {instrument: NoteBlockInstrumentProperty::Chime, note: NumberFrom0To24Property::new(15), powered: true}),
      431 => Some(Self {instrument: NoteBlockInstrumentProperty::Chime, note: NumberFrom0To24Property::new(15), powered: false}),
      432 => Some(Self {instrument: NoteBlockInstrumentProperty::Chime, note: NumberFrom0To24Property::new(16), powered: true}),
      433 => Some(Self {instrument: NoteBlockInstrumentProperty::Chime, note: NumberFrom0To24Property::new(16), powered: false}),
      434 => Some(Self {instrument: NoteBlockInstrumentProperty::Chime, note: NumberFrom0To24Property::new(17), powered: true}),
      435 => Some(Self {instrument: NoteBlockInstrumentProperty::Chime, note: NumberFrom0To24Property::new(17), powered: false}),
      436 => Some(Self {instrument: NoteBlockInstrumentProperty::Chime, note: NumberFrom0To24Property::new(18), powered: true}),
      437 => Some(Self {instrument: NoteBlockInstrumentProperty::Chime, note: NumberFrom0To24Property::new(18), powered: false}),
      438 => Some(Self {instrument: NoteBlockInstrumentProperty::Chime, note: NumberFrom0To24Property::new(19), powered: true}),
      439 => Some(Self {instrument: NoteBlockInstrumentProperty::Chime, note: NumberFrom0To24Property::new(19), powered: false}),
      440 => Some(Self {instrument: NoteBlockInstrumentProperty::Chime, note: NumberFrom0To24Property::new(20), powered: true}),
      441 => Some(Self {instrument: NoteBlockInstrumentProperty::Chime, note: NumberFrom0To24Property::new(20), powered: false}),
      442 => Some(Self {instrument: NoteBlockInstrumentProperty::Chime, note: NumberFrom0To24Property::new(21), powered: true}),
      443 => Some(Self {instrument: NoteBlockInstrumentProperty::Chime, note: NumberFrom0To24Property::new(21), powered: false}),
      444 => Some(Self {instrument: NoteBlockInstrumentProperty::Chime, note: NumberFrom0To24Property::new(22), powered: true}),
      445 => Some(Self {instrument: NoteBlockInstrumentProperty::Chime, note: NumberFrom0To24Property::new(22), powered: false}),
      446 => Some(Self {instrument: NoteBlockInstrumentProperty::Chime, note: NumberFrom0To24Property::new(23), powered: true}),
      447 => Some(Self {instrument: NoteBlockInstrumentProperty::Chime, note: NumberFrom0To24Property::new(23), powered: false}),
      448 => Some(Self {instrument: NoteBlockInstrumentProperty::Chime, note: NumberFrom0To24Property::new(24), powered: true}),
      449 => Some(Self {instrument: NoteBlockInstrumentProperty::Chime, note: NumberFrom0To24Property::new(24), powered: false}),
      450 => Some(Self {instrument: NoteBlockInstrumentProperty::Xylophone, note: NumberFrom0To24Property::new(0), powered: true}),
      451 => Some(Self {instrument: NoteBlockInstrumentProperty::Xylophone, note: NumberFrom0To24Property::new(0), powered: false}),
      452 => Some(Self {instrument: NoteBlockInstrumentProperty::Xylophone, note: NumberFrom0To24Property::new(1), powered: true}),
      453 => Some(Self {instrument: NoteBlockInstrumentProperty::Xylophone, note: NumberFrom0To24Property::new(1), powered: false}),
      454 => Some(Self {instrument: NoteBlockInstrumentProperty::Xylophone, note: NumberFrom0To24Property::new(2), powered: true}),
      455 => Some(Self {instrument: NoteBlockInstrumentProperty::Xylophone, note: NumberFrom0To24Property::new(2), powered: false}),
      456 => Some(Self {instrument: NoteBlockInstrumentProperty::Xylophone, note: NumberFrom0To24Property::new(3), powered: true}),
      457 => Some(Self {instrument: NoteBlockInstrumentProperty::Xylophone, note: NumberFrom0To24Property::new(3), powered: false}),
      458 => Some(Self {instrument: NoteBlockInstrumentProperty::Xylophone, note: NumberFrom0To24Property::new(4), powered: true}),
      459 => Some(Self {instrument: NoteBlockInstrumentProperty::Xylophone, note: NumberFrom0To24Property::new(4), powered: false}),
      460 => Some(Self {instrument: NoteBlockInstrumentProperty::Xylophone, note: NumberFrom0To24Property::new(5), powered: true}),
      461 => Some(Self {instrument: NoteBlockInstrumentProperty::Xylophone, note: NumberFrom0To24Property::new(5), powered: false}),
      462 => Some(Self {instrument: NoteBlockInstrumentProperty::Xylophone, note: NumberFrom0To24Property::new(6), powered: true}),
      463 => Some(Self {instrument: NoteBlockInstrumentProperty::Xylophone, note: NumberFrom0To24Property::new(6), powered: false}),
      464 => Some(Self {instrument: NoteBlockInstrumentProperty::Xylophone, note: NumberFrom0To24Property::new(7), powered: true}),
      465 => Some(Self {instrument: NoteBlockInstrumentProperty::Xylophone, note: NumberFrom0To24Property::new(7), powered: false}),
      466 => Some(Self {instrument: NoteBlockInstrumentProperty::Xylophone, note: NumberFrom0To24Property::new(8), powered: true}),
      467 => Some(Self {instrument: NoteBlockInstrumentProperty::Xylophone, note: NumberFrom0To24Property::new(8), powered: false}),
      468 => Some(Self {instrument: NoteBlockInstrumentProperty::Xylophone, note: NumberFrom0To24Property::new(9), powered: true}),
      469 => Some(Self {instrument: NoteBlockInstrumentProperty::Xylophone, note: NumberFrom0To24Property::new(9), powered: false}),
      470 => Some(Self {instrument: NoteBlockInstrumentProperty::Xylophone, note: NumberFrom0To24Property::new(10), powered: true}),
      471 => Some(Self {instrument: NoteBlockInstrumentProperty::Xylophone, note: NumberFrom0To24Property::new(10), powered: false}),
      472 => Some(Self {instrument: NoteBlockInstrumentProperty::Xylophone, note: NumberFrom0To24Property::new(11), powered: true}),
      473 => Some(Self {instrument: NoteBlockInstrumentProperty::Xylophone, note: NumberFrom0To24Property::new(11), powered: false}),
      474 => Some(Self {instrument: NoteBlockInstrumentProperty::Xylophone, note: NumberFrom0To24Property::new(12), powered: true}),
      475 => Some(Self {instrument: NoteBlockInstrumentProperty::Xylophone, note: NumberFrom0To24Property::new(12), powered: false}),
      476 => Some(Self {instrument: NoteBlockInstrumentProperty::Xylophone, note: NumberFrom0To24Property::new(13), powered: true}),
      477 => Some(Self {instrument: NoteBlockInstrumentProperty::Xylophone, note: NumberFrom0To24Property::new(13), powered: false}),
      478 => Some(Self {instrument: NoteBlockInstrumentProperty::Xylophone, note: NumberFrom0To24Property::new(14), powered: true}),
      479 => Some(Self {instrument: NoteBlockInstrumentProperty::Xylophone, note: NumberFrom0To24Property::new(14), powered: false}),
      480 => Some(Self {instrument: NoteBlockInstrumentProperty::Xylophone, note: NumberFrom0To24Property::new(15), powered: true}),
      481 => Some(Self {instrument: NoteBlockInstrumentProperty::Xylophone, note: NumberFrom0To24Property::new(15), powered: false}),
      482 => Some(Self {instrument: NoteBlockInstrumentProperty::Xylophone, note: NumberFrom0To24Property::new(16), powered: true}),
      483 => Some(Self {instrument: NoteBlockInstrumentProperty::Xylophone, note: NumberFrom0To24Property::new(16), powered: false}),
      484 => Some(Self {instrument: NoteBlockInstrumentProperty::Xylophone, note: NumberFrom0To24Property::new(17), powered: true}),
      485 => Some(Self {instrument: NoteBlockInstrumentProperty::Xylophone, note: NumberFrom0To24Property::new(17), powered: false}),
      486 => Some(Self {instrument: NoteBlockInstrumentProperty::Xylophone, note: NumberFrom0To24Property::new(18), powered: true}),
      487 => Some(Self {instrument: NoteBlockInstrumentProperty::Xylophone, note: NumberFrom0To24Property::new(18), powered: false}),
      488 => Some(Self {instrument: NoteBlockInstrumentProperty::Xylophone, note: NumberFrom0To24Property::new(19), powered: true}),
      489 => Some(Self {instrument: NoteBlockInstrumentProperty::Xylophone, note: NumberFrom0To24Property::new(19), powered: false}),
      490 => Some(Self {instrument: NoteBlockInstrumentProperty::Xylophone, note: NumberFrom0To24Property::new(20), powered: true}),
      491 => Some(Self {instrument: NoteBlockInstrumentProperty::Xylophone, note: NumberFrom0To24Property::new(20), powered: false}),
      492 => Some(Self {instrument: NoteBlockInstrumentProperty::Xylophone, note: NumberFrom0To24Property::new(21), powered: true}),
      493 => Some(Self {instrument: NoteBlockInstrumentProperty::Xylophone, note: NumberFrom0To24Property::new(21), powered: false}),
      494 => Some(Self {instrument: NoteBlockInstrumentProperty::Xylophone, note: NumberFrom0To24Property::new(22), powered: true}),
      495 => Some(Self {instrument: NoteBlockInstrumentProperty::Xylophone, note: NumberFrom0To24Property::new(22), powered: false}),
      496 => Some(Self {instrument: NoteBlockInstrumentProperty::Xylophone, note: NumberFrom0To24Property::new(23), powered: true}),
      497 => Some(Self {instrument: NoteBlockInstrumentProperty::Xylophone, note: NumberFrom0To24Property::new(23), powered: false}),
      498 => Some(Self {instrument: NoteBlockInstrumentProperty::Xylophone, note: NumberFrom0To24Property::new(24), powered: true}),
      499 => Some(Self {instrument: NoteBlockInstrumentProperty::Xylophone, note: NumberFrom0To24Property::new(24), powered: false}),
      500 => Some(Self {instrument: NoteBlockInstrumentProperty::IronXylophone, note: NumberFrom0To24Property::new(0), powered: true}),
      501 => Some(Self {instrument: NoteBlockInstrumentProperty::IronXylophone, note: NumberFrom0To24Property::new(0), powered: false}),
      502 => Some(Self {instrument: NoteBlockInstrumentProperty::IronXylophone, note: NumberFrom0To24Property::new(1), powered: true}),
      503 => Some(Self {instrument: NoteBlockInstrumentProperty::IronXylophone, note: NumberFrom0To24Property::new(1), powered: false}),
      504 => Some(Self {instrument: NoteBlockInstrumentProperty::IronXylophone, note: NumberFrom0To24Property::new(2), powered: true}),
      505 => Some(Self {instrument: NoteBlockInstrumentProperty::IronXylophone, note: NumberFrom0To24Property::new(2), powered: false}),
      506 => Some(Self {instrument: NoteBlockInstrumentProperty::IronXylophone, note: NumberFrom0To24Property::new(3), powered: true}),
      507 => Some(Self {instrument: NoteBlockInstrumentProperty::IronXylophone, note: NumberFrom0To24Property::new(3), powered: false}),
      508 => Some(Self {instrument: NoteBlockInstrumentProperty::IronXylophone, note: NumberFrom0To24Property::new(4), powered: true}),
      509 => Some(Self {instrument: NoteBlockInstrumentProperty::IronXylophone, note: NumberFrom0To24Property::new(4), powered: false}),
      510 => Some(Self {instrument: NoteBlockInstrumentProperty::IronXylophone, note: NumberFrom0To24Property::new(5), powered: true}),
      511 => Some(Self {instrument: NoteBlockInstrumentProperty::IronXylophone, note: NumberFrom0To24Property::new(5), powered: false}),
      512 => Some(Self {instrument: NoteBlockInstrumentProperty::IronXylophone, note: NumberFrom0To24Property::new(6), powered: true}),
      513 => Some(Self {instrument: NoteBlockInstrumentProperty::IronXylophone, note: NumberFrom0To24Property::new(6), powered: false}),
      514 => Some(Self {instrument: NoteBlockInstrumentProperty::IronXylophone, note: NumberFrom0To24Property::new(7), powered: true}),
      515 => Some(Self {instrument: NoteBlockInstrumentProperty::IronXylophone, note: NumberFrom0To24Property::new(7), powered: false}),
      516 => Some(Self {instrument: NoteBlockInstrumentProperty::IronXylophone, note: NumberFrom0To24Property::new(8), powered: true}),
      517 => Some(Self {instrument: NoteBlockInstrumentProperty::IronXylophone, note: NumberFrom0To24Property::new(8), powered: false}),
      518 => Some(Self {instrument: NoteBlockInstrumentProperty::IronXylophone, note: NumberFrom0To24Property::new(9), powered: true}),
      519 => Some(Self {instrument: NoteBlockInstrumentProperty::IronXylophone, note: NumberFrom0To24Property::new(9), powered: false}),
      520 => Some(Self {instrument: NoteBlockInstrumentProperty::IronXylophone, note: NumberFrom0To24Property::new(10), powered: true}),
      521 => Some(Self {instrument: NoteBlockInstrumentProperty::IronXylophone, note: NumberFrom0To24Property::new(10), powered: false}),
      522 => Some(Self {instrument: NoteBlockInstrumentProperty::IronXylophone, note: NumberFrom0To24Property::new(11), powered: true}),
      523 => Some(Self {instrument: NoteBlockInstrumentProperty::IronXylophone, note: NumberFrom0To24Property::new(11), powered: false}),
      524 => Some(Self {instrument: NoteBlockInstrumentProperty::IronXylophone, note: NumberFrom0To24Property::new(12), powered: true}),
      525 => Some(Self {instrument: NoteBlockInstrumentProperty::IronXylophone, note: NumberFrom0To24Property::new(12), powered: false}),
      526 => Some(Self {instrument: NoteBlockInstrumentProperty::IronXylophone, note: NumberFrom0To24Property::new(13), powered: true}),
      527 => Some(Self {instrument: NoteBlockInstrumentProperty::IronXylophone, note: NumberFrom0To24Property::new(13), powered: false}),
      528 => Some(Self {instrument: NoteBlockInstrumentProperty::IronXylophone, note: NumberFrom0To24Property::new(14), powered: true}),
      529 => Some(Self {instrument: NoteBlockInstrumentProperty::IronXylophone, note: NumberFrom0To24Property::new(14), powered: false}),
      530 => Some(Self {instrument: NoteBlockInstrumentProperty::IronXylophone, note: NumberFrom0To24Property::new(15), powered: true}),
      531 => Some(Self {instrument: NoteBlockInstrumentProperty::IronXylophone, note: NumberFrom0To24Property::new(15), powered: false}),
      532 => Some(Self {instrument: NoteBlockInstrumentProperty::IronXylophone, note: NumberFrom0To24Property::new(16), powered: true}),
      533 => Some(Self {instrument: NoteBlockInstrumentProperty::IronXylophone, note: NumberFrom0To24Property::new(16), powered: false}),
      534 => Some(Self {instrument: NoteBlockInstrumentProperty::IronXylophone, note: NumberFrom0To24Property::new(17), powered: true}),
      535 => Some(Self {instrument: NoteBlockInstrumentProperty::IronXylophone, note: NumberFrom0To24Property::new(17), powered: false}),
      536 => Some(Self {instrument: NoteBlockInstrumentProperty::IronXylophone, note: NumberFrom0To24Property::new(18), powered: true}),
      537 => Some(Self {instrument: NoteBlockInstrumentProperty::IronXylophone, note: NumberFrom0To24Property::new(18), powered: false}),
      538 => Some(Self {instrument: NoteBlockInstrumentProperty::IronXylophone, note: NumberFrom0To24Property::new(19), powered: true}),
      539 => Some(Self {instrument: NoteBlockInstrumentProperty::IronXylophone, note: NumberFrom0To24Property::new(19), powered: false}),
      540 => Some(Self {instrument: NoteBlockInstrumentProperty::IronXylophone, note: NumberFrom0To24Property::new(20), powered: true}),
      541 => Some(Self {instrument: NoteBlockInstrumentProperty::IronXylophone, note: NumberFrom0To24Property::new(20), powered: false}),
      542 => Some(Self {instrument: NoteBlockInstrumentProperty::IronXylophone, note: NumberFrom0To24Property::new(21), powered: true}),
      543 => Some(Self {instrument: NoteBlockInstrumentProperty::IronXylophone, note: NumberFrom0To24Property::new(21), powered: false}),
      544 => Some(Self {instrument: NoteBlockInstrumentProperty::IronXylophone, note: NumberFrom0To24Property::new(22), powered: true}),
      545 => Some(Self {instrument: NoteBlockInstrumentProperty::IronXylophone, note: NumberFrom0To24Property::new(22), powered: false}),
      546 => Some(Self {instrument: NoteBlockInstrumentProperty::IronXylophone, note: NumberFrom0To24Property::new(23), powered: true}),
      547 => Some(Self {instrument: NoteBlockInstrumentProperty::IronXylophone, note: NumberFrom0To24Property::new(23), powered: false}),
      548 => Some(Self {instrument: NoteBlockInstrumentProperty::IronXylophone, note: NumberFrom0To24Property::new(24), powered: true}),
      549 => Some(Self {instrument: NoteBlockInstrumentProperty::IronXylophone, note: NumberFrom0To24Property::new(24), powered: false}),
      550 => Some(Self {instrument: NoteBlockInstrumentProperty::CowBell, note: NumberFrom0To24Property::new(0), powered: true}),
      551 => Some(Self {instrument: NoteBlockInstrumentProperty::CowBell, note: NumberFrom0To24Property::new(0), powered: false}),
      552 => Some(Self {instrument: NoteBlockInstrumentProperty::CowBell, note: NumberFrom0To24Property::new(1), powered: true}),
      553 => Some(Self {instrument: NoteBlockInstrumentProperty::CowBell, note: NumberFrom0To24Property::new(1), powered: false}),
      554 => Some(Self {instrument: NoteBlockInstrumentProperty::CowBell, note: NumberFrom0To24Property::new(2), powered: true}),
      555 => Some(Self {instrument: NoteBlockInstrumentProperty::CowBell, note: NumberFrom0To24Property::new(2), powered: false}),
      556 => Some(Self {instrument: NoteBlockInstrumentProperty::CowBell, note: NumberFrom0To24Property::new(3), powered: true}),
      557 => Some(Self {instrument: NoteBlockInstrumentProperty::CowBell, note: NumberFrom0To24Property::new(3), powered: false}),
      558 => Some(Self {instrument: NoteBlockInstrumentProperty::CowBell, note: NumberFrom0To24Property::new(4), powered: true}),
      559 => Some(Self {instrument: NoteBlockInstrumentProperty::CowBell, note: NumberFrom0To24Property::new(4), powered: false}),
      560 => Some(Self {instrument: NoteBlockInstrumentProperty::CowBell, note: NumberFrom0To24Property::new(5), powered: true}),
      561 => Some(Self {instrument: NoteBlockInstrumentProperty::CowBell, note: NumberFrom0To24Property::new(5), powered: false}),
      562 => Some(Self {instrument: NoteBlockInstrumentProperty::CowBell, note: NumberFrom0To24Property::new(6), powered: true}),
      563 => Some(Self {instrument: NoteBlockInstrumentProperty::CowBell, note: NumberFrom0To24Property::new(6), powered: false}),
      564 => Some(Self {instrument: NoteBlockInstrumentProperty::CowBell, note: NumberFrom0To24Property::new(7), powered: true}),
      565 => Some(Self {instrument: NoteBlockInstrumentProperty::CowBell, note: NumberFrom0To24Property::new(7), powered: false}),
      566 => Some(Self {instrument: NoteBlockInstrumentProperty::CowBell, note: NumberFrom0To24Property::new(8), powered: true}),
      567 => Some(Self {instrument: NoteBlockInstrumentProperty::CowBell, note: NumberFrom0To24Property::new(8), powered: false}),
      568 => Some(Self {instrument: NoteBlockInstrumentProperty::CowBell, note: NumberFrom0To24Property::new(9), powered: true}),
      569 => Some(Self {instrument: NoteBlockInstrumentProperty::CowBell, note: NumberFrom0To24Property::new(9), powered: false}),
      570 => Some(Self {instrument: NoteBlockInstrumentProperty::CowBell, note: NumberFrom0To24Property::new(10), powered: true}),
      571 => Some(Self {instrument: NoteBlockInstrumentProperty::CowBell, note: NumberFrom0To24Property::new(10), powered: false}),
      572 => Some(Self {instrument: NoteBlockInstrumentProperty::CowBell, note: NumberFrom0To24Property::new(11), powered: true}),
      573 => Some(Self {instrument: NoteBlockInstrumentProperty::CowBell, note: NumberFrom0To24Property::new(11), powered: false}),
      574 => Some(Self {instrument: NoteBlockInstrumentProperty::CowBell, note: NumberFrom0To24Property::new(12), powered: true}),
      575 => Some(Self {instrument: NoteBlockInstrumentProperty::CowBell, note: NumberFrom0To24Property::new(12), powered: false}),
      576 => Some(Self {instrument: NoteBlockInstrumentProperty::CowBell, note: NumberFrom0To24Property::new(13), powered: true}),
      577 => Some(Self {instrument: NoteBlockInstrumentProperty::CowBell, note: NumberFrom0To24Property::new(13), powered: false}),
      578 => Some(Self {instrument: NoteBlockInstrumentProperty::CowBell, note: NumberFrom0To24Property::new(14), powered: true}),
      579 => Some(Self {instrument: NoteBlockInstrumentProperty::CowBell, note: NumberFrom0To24Property::new(14), powered: false}),
      580 => Some(Self {instrument: NoteBlockInstrumentProperty::CowBell, note: NumberFrom0To24Property::new(15), powered: true}),
      581 => Some(Self {instrument: NoteBlockInstrumentProperty::CowBell, note: NumberFrom0To24Property::new(15), powered: false}),
      582 => Some(Self {instrument: NoteBlockInstrumentProperty::CowBell, note: NumberFrom0To24Property::new(16), powered: true}),
      583 => Some(Self {instrument: NoteBlockInstrumentProperty::CowBell, note: NumberFrom0To24Property::new(16), powered: false}),
      584 => Some(Self {instrument: NoteBlockInstrumentProperty::CowBell, note: NumberFrom0To24Property::new(17), powered: true}),
      585 => Some(Self {instrument: NoteBlockInstrumentProperty::CowBell, note: NumberFrom0To24Property::new(17), powered: false}),
      586 => Some(Self {instrument: NoteBlockInstrumentProperty::CowBell, note: NumberFrom0To24Property::new(18), powered: true}),
      587 => Some(Self {instrument: NoteBlockInstrumentProperty::CowBell, note: NumberFrom0To24Property::new(18), powered: false}),
      588 => Some(Self {instrument: NoteBlockInstrumentProperty::CowBell, note: NumberFrom0To24Property::new(19), powered: true}),
      589 => Some(Self {instrument: NoteBlockInstrumentProperty::CowBell, note: NumberFrom0To24Property::new(19), powered: false}),
      590 => Some(Self {instrument: NoteBlockInstrumentProperty::CowBell, note: NumberFrom0To24Property::new(20), powered: true}),
      591 => Some(Self {instrument: NoteBlockInstrumentProperty::CowBell, note: NumberFrom0To24Property::new(20), powered: false}),
      592 => Some(Self {instrument: NoteBlockInstrumentProperty::CowBell, note: NumberFrom0To24Property::new(21), powered: true}),
      593 => Some(Self {instrument: NoteBlockInstrumentProperty::CowBell, note: NumberFrom0To24Property::new(21), powered: false}),
      594 => Some(Self {instrument: NoteBlockInstrumentProperty::CowBell, note: NumberFrom0To24Property::new(22), powered: true}),
      595 => Some(Self {instrument: NoteBlockInstrumentProperty::CowBell, note: NumberFrom0To24Property::new(22), powered: false}),
      596 => Some(Self {instrument: NoteBlockInstrumentProperty::CowBell, note: NumberFrom0To24Property::new(23), powered: true}),
      597 => Some(Self {instrument: NoteBlockInstrumentProperty::CowBell, note: NumberFrom0To24Property::new(23), powered: false}),
      598 => Some(Self {instrument: NoteBlockInstrumentProperty::CowBell, note: NumberFrom0To24Property::new(24), powered: true}),
      599 => Some(Self {instrument: NoteBlockInstrumentProperty::CowBell, note: NumberFrom0To24Property::new(24), powered: false}),
      600 => Some(Self {instrument: NoteBlockInstrumentProperty::Didgeridoo, note: NumberFrom0To24Property::new(0), powered: true}),
      601 => Some(Self {instrument: NoteBlockInstrumentProperty::Didgeridoo, note: NumberFrom0To24Property::new(0), powered: false}),
      602 => Some(Self {instrument: NoteBlockInstrumentProperty::Didgeridoo, note: NumberFrom0To24Property::new(1), powered: true}),
      603 => Some(Self {instrument: NoteBlockInstrumentProperty::Didgeridoo, note: NumberFrom0To24Property::new(1), powered: false}),
      604 => Some(Self {instrument: NoteBlockInstrumentProperty::Didgeridoo, note: NumberFrom0To24Property::new(2), powered: true}),
      605 => Some(Self {instrument: NoteBlockInstrumentProperty::Didgeridoo, note: NumberFrom0To24Property::new(2), powered: false}),
      606 => Some(Self {instrument: NoteBlockInstrumentProperty::Didgeridoo, note: NumberFrom0To24Property::new(3), powered: true}),
      607 => Some(Self {instrument: NoteBlockInstrumentProperty::Didgeridoo, note: NumberFrom0To24Property::new(3), powered: false}),
      608 => Some(Self {instrument: NoteBlockInstrumentProperty::Didgeridoo, note: NumberFrom0To24Property::new(4), powered: true}),
      609 => Some(Self {instrument: NoteBlockInstrumentProperty::Didgeridoo, note: NumberFrom0To24Property::new(4), powered: false}),
      610 => Some(Self {instrument: NoteBlockInstrumentProperty::Didgeridoo, note: NumberFrom0To24Property::new(5), powered: true}),
      611 => Some(Self {instrument: NoteBlockInstrumentProperty::Didgeridoo, note: NumberFrom0To24Property::new(5), powered: false}),
      612 => Some(Self {instrument: NoteBlockInstrumentProperty::Didgeridoo, note: NumberFrom0To24Property::new(6), powered: true}),
      613 => Some(Self {instrument: NoteBlockInstrumentProperty::Didgeridoo, note: NumberFrom0To24Property::new(6), powered: false}),
      614 => Some(Self {instrument: NoteBlockInstrumentProperty::Didgeridoo, note: NumberFrom0To24Property::new(7), powered: true}),
      615 => Some(Self {instrument: NoteBlockInstrumentProperty::Didgeridoo, note: NumberFrom0To24Property::new(7), powered: false}),
      616 => Some(Self {instrument: NoteBlockInstrumentProperty::Didgeridoo, note: NumberFrom0To24Property::new(8), powered: true}),
      617 => Some(Self {instrument: NoteBlockInstrumentProperty::Didgeridoo, note: NumberFrom0To24Property::new(8), powered: false}),
      618 => Some(Self {instrument: NoteBlockInstrumentProperty::Didgeridoo, note: NumberFrom0To24Property::new(9), powered: true}),
      619 => Some(Self {instrument: NoteBlockInstrumentProperty::Didgeridoo, note: NumberFrom0To24Property::new(9), powered: false}),
      620 => Some(Self {instrument: NoteBlockInstrumentProperty::Didgeridoo, note: NumberFrom0To24Property::new(10), powered: true}),
      621 => Some(Self {instrument: NoteBlockInstrumentProperty::Didgeridoo, note: NumberFrom0To24Property::new(10), powered: false}),
      622 => Some(Self {instrument: NoteBlockInstrumentProperty::Didgeridoo, note: NumberFrom0To24Property::new(11), powered: true}),
      623 => Some(Self {instrument: NoteBlockInstrumentProperty::Didgeridoo, note: NumberFrom0To24Property::new(11), powered: false}),
      624 => Some(Self {instrument: NoteBlockInstrumentProperty::Didgeridoo, note: NumberFrom0To24Property::new(12), powered: true}),
      625 => Some(Self {instrument: NoteBlockInstrumentProperty::Didgeridoo, note: NumberFrom0To24Property::new(12), powered: false}),
      626 => Some(Self {instrument: NoteBlockInstrumentProperty::Didgeridoo, note: NumberFrom0To24Property::new(13), powered: true}),
      627 => Some(Self {instrument: NoteBlockInstrumentProperty::Didgeridoo, note: NumberFrom0To24Property::new(13), powered: false}),
      628 => Some(Self {instrument: NoteBlockInstrumentProperty::Didgeridoo, note: NumberFrom0To24Property::new(14), powered: true}),
      629 => Some(Self {instrument: NoteBlockInstrumentProperty::Didgeridoo, note: NumberFrom0To24Property::new(14), powered: false}),
      630 => Some(Self {instrument: NoteBlockInstrumentProperty::Didgeridoo, note: NumberFrom0To24Property::new(15), powered: true}),
      631 => Some(Self {instrument: NoteBlockInstrumentProperty::Didgeridoo, note: NumberFrom0To24Property::new(15), powered: false}),
      632 => Some(Self {instrument: NoteBlockInstrumentProperty::Didgeridoo, note: NumberFrom0To24Property::new(16), powered: true}),
      633 => Some(Self {instrument: NoteBlockInstrumentProperty::Didgeridoo, note: NumberFrom0To24Property::new(16), powered: false}),
      634 => Some(Self {instrument: NoteBlockInstrumentProperty::Didgeridoo, note: NumberFrom0To24Property::new(17), powered: true}),
      635 => Some(Self {instrument: NoteBlockInstrumentProperty::Didgeridoo, note: NumberFrom0To24Property::new(17), powered: false}),
      636 => Some(Self {instrument: NoteBlockInstrumentProperty::Didgeridoo, note: NumberFrom0To24Property::new(18), powered: true}),
      637 => Some(Self {instrument: NoteBlockInstrumentProperty::Didgeridoo, note: NumberFrom0To24Property::new(18), powered: false}),
      638 => Some(Self {instrument: NoteBlockInstrumentProperty::Didgeridoo, note: NumberFrom0To24Property::new(19), powered: true}),
      639 => Some(Self {instrument: NoteBlockInstrumentProperty::Didgeridoo, note: NumberFrom0To24Property::new(19), powered: false}),
      640 => Some(Self {instrument: NoteBlockInstrumentProperty::Didgeridoo, note: NumberFrom0To24Property::new(20), powered: true}),
      641 => Some(Self {instrument: NoteBlockInstrumentProperty::Didgeridoo, note: NumberFrom0To24Property::new(20), powered: false}),
      642 => Some(Self {instrument: NoteBlockInstrumentProperty::Didgeridoo, note: NumberFrom0To24Property::new(21), powered: true}),
      643 => Some(Self {instrument: NoteBlockInstrumentProperty::Didgeridoo, note: NumberFrom0To24Property::new(21), powered: false}),
      644 => Some(Self {instrument: NoteBlockInstrumentProperty::Didgeridoo, note: NumberFrom0To24Property::new(22), powered: true}),
      645 => Some(Self {instrument: NoteBlockInstrumentProperty::Didgeridoo, note: NumberFrom0To24Property::new(22), powered: false}),
      646 => Some(Self {instrument: NoteBlockInstrumentProperty::Didgeridoo, note: NumberFrom0To24Property::new(23), powered: true}),
      647 => Some(Self {instrument: NoteBlockInstrumentProperty::Didgeridoo, note: NumberFrom0To24Property::new(23), powered: false}),
      648 => Some(Self {instrument: NoteBlockInstrumentProperty::Didgeridoo, note: NumberFrom0To24Property::new(24), powered: true}),
      649 => Some(Self {instrument: NoteBlockInstrumentProperty::Didgeridoo, note: NumberFrom0To24Property::new(24), powered: false}),
      650 => Some(Self {instrument: NoteBlockInstrumentProperty::Bit, note: NumberFrom0To24Property::new(0), powered: true}),
      651 => Some(Self {instrument: NoteBlockInstrumentProperty::Bit, note: NumberFrom0To24Property::new(0), powered: false}),
      652 => Some(Self {instrument: NoteBlockInstrumentProperty::Bit, note: NumberFrom0To24Property::new(1), powered: true}),
      653 => Some(Self {instrument: NoteBlockInstrumentProperty::Bit, note: NumberFrom0To24Property::new(1), powered: false}),
      654 => Some(Self {instrument: NoteBlockInstrumentProperty::Bit, note: NumberFrom0To24Property::new(2), powered: true}),
      655 => Some(Self {instrument: NoteBlockInstrumentProperty::Bit, note: NumberFrom0To24Property::new(2), powered: false}),
      656 => Some(Self {instrument: NoteBlockInstrumentProperty::Bit, note: NumberFrom0To24Property::new(3), powered: true}),
      657 => Some(Self {instrument: NoteBlockInstrumentProperty::Bit, note: NumberFrom0To24Property::new(3), powered: false}),
      658 => Some(Self {instrument: NoteBlockInstrumentProperty::Bit, note: NumberFrom0To24Property::new(4), powered: true}),
      659 => Some(Self {instrument: NoteBlockInstrumentProperty::Bit, note: NumberFrom0To24Property::new(4), powered: false}),
      660 => Some(Self {instrument: NoteBlockInstrumentProperty::Bit, note: NumberFrom0To24Property::new(5), powered: true}),
      661 => Some(Self {instrument: NoteBlockInstrumentProperty::Bit, note: NumberFrom0To24Property::new(5), powered: false}),
      662 => Some(Self {instrument: NoteBlockInstrumentProperty::Bit, note: NumberFrom0To24Property::new(6), powered: true}),
      663 => Some(Self {instrument: NoteBlockInstrumentProperty::Bit, note: NumberFrom0To24Property::new(6), powered: false}),
      664 => Some(Self {instrument: NoteBlockInstrumentProperty::Bit, note: NumberFrom0To24Property::new(7), powered: true}),
      665 => Some(Self {instrument: NoteBlockInstrumentProperty::Bit, note: NumberFrom0To24Property::new(7), powered: false}),
      666 => Some(Self {instrument: NoteBlockInstrumentProperty::Bit, note: NumberFrom0To24Property::new(8), powered: true}),
      667 => Some(Self {instrument: NoteBlockInstrumentProperty::Bit, note: NumberFrom0To24Property::new(8), powered: false}),
      668 => Some(Self {instrument: NoteBlockInstrumentProperty::Bit, note: NumberFrom0To24Property::new(9), powered: true}),
      669 => Some(Self {instrument: NoteBlockInstrumentProperty::Bit, note: NumberFrom0To24Property::new(9), powered: false}),
      670 => Some(Self {instrument: NoteBlockInstrumentProperty::Bit, note: NumberFrom0To24Property::new(10), powered: true}),
      671 => Some(Self {instrument: NoteBlockInstrumentProperty::Bit, note: NumberFrom0To24Property::new(10), powered: false}),
      672 => Some(Self {instrument: NoteBlockInstrumentProperty::Bit, note: NumberFrom0To24Property::new(11), powered: true}),
      673 => Some(Self {instrument: NoteBlockInstrumentProperty::Bit, note: NumberFrom0To24Property::new(11), powered: false}),
      674 => Some(Self {instrument: NoteBlockInstrumentProperty::Bit, note: NumberFrom0To24Property::new(12), powered: true}),
      675 => Some(Self {instrument: NoteBlockInstrumentProperty::Bit, note: NumberFrom0To24Property::new(12), powered: false}),
      676 => Some(Self {instrument: NoteBlockInstrumentProperty::Bit, note: NumberFrom0To24Property::new(13), powered: true}),
      677 => Some(Self {instrument: NoteBlockInstrumentProperty::Bit, note: NumberFrom0To24Property::new(13), powered: false}),
      678 => Some(Self {instrument: NoteBlockInstrumentProperty::Bit, note: NumberFrom0To24Property::new(14), powered: true}),
      679 => Some(Self {instrument: NoteBlockInstrumentProperty::Bit, note: NumberFrom0To24Property::new(14), powered: false}),
      680 => Some(Self {instrument: NoteBlockInstrumentProperty::Bit, note: NumberFrom0To24Property::new(15), powered: true}),
      681 => Some(Self {instrument: NoteBlockInstrumentProperty::Bit, note: NumberFrom0To24Property::new(15), powered: false}),
      682 => Some(Self {instrument: NoteBlockInstrumentProperty::Bit, note: NumberFrom0To24Property::new(16), powered: true}),
      683 => Some(Self {instrument: NoteBlockInstrumentProperty::Bit, note: NumberFrom0To24Property::new(16), powered: false}),
      684 => Some(Self {instrument: NoteBlockInstrumentProperty::Bit, note: NumberFrom0To24Property::new(17), powered: true}),
      685 => Some(Self {instrument: NoteBlockInstrumentProperty::Bit, note: NumberFrom0To24Property::new(17), powered: false}),
      686 => Some(Self {instrument: NoteBlockInstrumentProperty::Bit, note: NumberFrom0To24Property::new(18), powered: true}),
      687 => Some(Self {instrument: NoteBlockInstrumentProperty::Bit, note: NumberFrom0To24Property::new(18), powered: false}),
      688 => Some(Self {instrument: NoteBlockInstrumentProperty::Bit, note: NumberFrom0To24Property::new(19), powered: true}),
      689 => Some(Self {instrument: NoteBlockInstrumentProperty::Bit, note: NumberFrom0To24Property::new(19), powered: false}),
      690 => Some(Self {instrument: NoteBlockInstrumentProperty::Bit, note: NumberFrom0To24Property::new(20), powered: true}),
      691 => Some(Self {instrument: NoteBlockInstrumentProperty::Bit, note: NumberFrom0To24Property::new(20), powered: false}),
      692 => Some(Self {instrument: NoteBlockInstrumentProperty::Bit, note: NumberFrom0To24Property::new(21), powered: true}),
      693 => Some(Self {instrument: NoteBlockInstrumentProperty::Bit, note: NumberFrom0To24Property::new(21), powered: false}),
      694 => Some(Self {instrument: NoteBlockInstrumentProperty::Bit, note: NumberFrom0To24Property::new(22), powered: true}),
      695 => Some(Self {instrument: NoteBlockInstrumentProperty::Bit, note: NumberFrom0To24Property::new(22), powered: false}),
      696 => Some(Self {instrument: NoteBlockInstrumentProperty::Bit, note: NumberFrom0To24Property::new(23), powered: true}),
      697 => Some(Self {instrument: NoteBlockInstrumentProperty::Bit, note: NumberFrom0To24Property::new(23), powered: false}),
      698 => Some(Self {instrument: NoteBlockInstrumentProperty::Bit, note: NumberFrom0To24Property::new(24), powered: true}),
      699 => Some(Self {instrument: NoteBlockInstrumentProperty::Bit, note: NumberFrom0To24Property::new(24), powered: false}),
      700 => Some(Self {instrument: NoteBlockInstrumentProperty::Banjo, note: NumberFrom0To24Property::new(0), powered: true}),
      701 => Some(Self {instrument: NoteBlockInstrumentProperty::Banjo, note: NumberFrom0To24Property::new(0), powered: false}),
      702 => Some(Self {instrument: NoteBlockInstrumentProperty::Banjo, note: NumberFrom0To24Property::new(1), powered: true}),
      703 => Some(Self {instrument: NoteBlockInstrumentProperty::Banjo, note: NumberFrom0To24Property::new(1), powered: false}),
      704 => Some(Self {instrument: NoteBlockInstrumentProperty::Banjo, note: NumberFrom0To24Property::new(2), powered: true}),
      705 => Some(Self {instrument: NoteBlockInstrumentProperty::Banjo, note: NumberFrom0To24Property::new(2), powered: false}),
      706 => Some(Self {instrument: NoteBlockInstrumentProperty::Banjo, note: NumberFrom0To24Property::new(3), powered: true}),
      707 => Some(Self {instrument: NoteBlockInstrumentProperty::Banjo, note: NumberFrom0To24Property::new(3), powered: false}),
      708 => Some(Self {instrument: NoteBlockInstrumentProperty::Banjo, note: NumberFrom0To24Property::new(4), powered: true}),
      709 => Some(Self {instrument: NoteBlockInstrumentProperty::Banjo, note: NumberFrom0To24Property::new(4), powered: false}),
      710 => Some(Self {instrument: NoteBlockInstrumentProperty::Banjo, note: NumberFrom0To24Property::new(5), powered: true}),
      711 => Some(Self {instrument: NoteBlockInstrumentProperty::Banjo, note: NumberFrom0To24Property::new(5), powered: false}),
      712 => Some(Self {instrument: NoteBlockInstrumentProperty::Banjo, note: NumberFrom0To24Property::new(6), powered: true}),
      713 => Some(Self {instrument: NoteBlockInstrumentProperty::Banjo, note: NumberFrom0To24Property::new(6), powered: false}),
      714 => Some(Self {instrument: NoteBlockInstrumentProperty::Banjo, note: NumberFrom0To24Property::new(7), powered: true}),
      715 => Some(Self {instrument: NoteBlockInstrumentProperty::Banjo, note: NumberFrom0To24Property::new(7), powered: false}),
      716 => Some(Self {instrument: NoteBlockInstrumentProperty::Banjo, note: NumberFrom0To24Property::new(8), powered: true}),
      717 => Some(Self {instrument: NoteBlockInstrumentProperty::Banjo, note: NumberFrom0To24Property::new(8), powered: false}),
      718 => Some(Self {instrument: NoteBlockInstrumentProperty::Banjo, note: NumberFrom0To24Property::new(9), powered: true}),
      719 => Some(Self {instrument: NoteBlockInstrumentProperty::Banjo, note: NumberFrom0To24Property::new(9), powered: false}),
      720 => Some(Self {instrument: NoteBlockInstrumentProperty::Banjo, note: NumberFrom0To24Property::new(10), powered: true}),
      721 => Some(Self {instrument: NoteBlockInstrumentProperty::Banjo, note: NumberFrom0To24Property::new(10), powered: false}),
      722 => Some(Self {instrument: NoteBlockInstrumentProperty::Banjo, note: NumberFrom0To24Property::new(11), powered: true}),
      723 => Some(Self {instrument: NoteBlockInstrumentProperty::Banjo, note: NumberFrom0To24Property::new(11), powered: false}),
      724 => Some(Self {instrument: NoteBlockInstrumentProperty::Banjo, note: NumberFrom0To24Property::new(12), powered: true}),
      725 => Some(Self {instrument: NoteBlockInstrumentProperty::Banjo, note: NumberFrom0To24Property::new(12), powered: false}),
      726 => Some(Self {instrument: NoteBlockInstrumentProperty::Banjo, note: NumberFrom0To24Property::new(13), powered: true}),
      727 => Some(Self {instrument: NoteBlockInstrumentProperty::Banjo, note: NumberFrom0To24Property::new(13), powered: false}),
      728 => Some(Self {instrument: NoteBlockInstrumentProperty::Banjo, note: NumberFrom0To24Property::new(14), powered: true}),
      729 => Some(Self {instrument: NoteBlockInstrumentProperty::Banjo, note: NumberFrom0To24Property::new(14), powered: false}),
      730 => Some(Self {instrument: NoteBlockInstrumentProperty::Banjo, note: NumberFrom0To24Property::new(15), powered: true}),
      731 => Some(Self {instrument: NoteBlockInstrumentProperty::Banjo, note: NumberFrom0To24Property::new(15), powered: false}),
      732 => Some(Self {instrument: NoteBlockInstrumentProperty::Banjo, note: NumberFrom0To24Property::new(16), powered: true}),
      733 => Some(Self {instrument: NoteBlockInstrumentProperty::Banjo, note: NumberFrom0To24Property::new(16), powered: false}),
      734 => Some(Self {instrument: NoteBlockInstrumentProperty::Banjo, note: NumberFrom0To24Property::new(17), powered: true}),
      735 => Some(Self {instrument: NoteBlockInstrumentProperty::Banjo, note: NumberFrom0To24Property::new(17), powered: false}),
      736 => Some(Self {instrument: NoteBlockInstrumentProperty::Banjo, note: NumberFrom0To24Property::new(18), powered: true}),
      737 => Some(Self {instrument: NoteBlockInstrumentProperty::Banjo, note: NumberFrom0To24Property::new(18), powered: false}),
      738 => Some(Self {instrument: NoteBlockInstrumentProperty::Banjo, note: NumberFrom0To24Property::new(19), powered: true}),
      739 => Some(Self {instrument: NoteBlockInstrumentProperty::Banjo, note: NumberFrom0To24Property::new(19), powered: false}),
      740 => Some(Self {instrument: NoteBlockInstrumentProperty::Banjo, note: NumberFrom0To24Property::new(20), powered: true}),
      741 => Some(Self {instrument: NoteBlockInstrumentProperty::Banjo, note: NumberFrom0To24Property::new(20), powered: false}),
      742 => Some(Self {instrument: NoteBlockInstrumentProperty::Banjo, note: NumberFrom0To24Property::new(21), powered: true}),
      743 => Some(Self {instrument: NoteBlockInstrumentProperty::Banjo, note: NumberFrom0To24Property::new(21), powered: false}),
      744 => Some(Self {instrument: NoteBlockInstrumentProperty::Banjo, note: NumberFrom0To24Property::new(22), powered: true}),
      745 => Some(Self {instrument: NoteBlockInstrumentProperty::Banjo, note: NumberFrom0To24Property::new(22), powered: false}),
      746 => Some(Self {instrument: NoteBlockInstrumentProperty::Banjo, note: NumberFrom0To24Property::new(23), powered: true}),
      747 => Some(Self {instrument: NoteBlockInstrumentProperty::Banjo, note: NumberFrom0To24Property::new(23), powered: false}),
      748 => Some(Self {instrument: NoteBlockInstrumentProperty::Banjo, note: NumberFrom0To24Property::new(24), powered: true}),
      749 => Some(Self {instrument: NoteBlockInstrumentProperty::Banjo, note: NumberFrom0To24Property::new(24), powered: false}),
      750 => Some(Self {instrument: NoteBlockInstrumentProperty::Pling, note: NumberFrom0To24Property::new(0), powered: true}),
      751 => Some(Self {instrument: NoteBlockInstrumentProperty::Pling, note: NumberFrom0To24Property::new(0), powered: false}),
      752 => Some(Self {instrument: NoteBlockInstrumentProperty::Pling, note: NumberFrom0To24Property::new(1), powered: true}),
      753 => Some(Self {instrument: NoteBlockInstrumentProperty::Pling, note: NumberFrom0To24Property::new(1), powered: false}),
      754 => Some(Self {instrument: NoteBlockInstrumentProperty::Pling, note: NumberFrom0To24Property::new(2), powered: true}),
      755 => Some(Self {instrument: NoteBlockInstrumentProperty::Pling, note: NumberFrom0To24Property::new(2), powered: false}),
      756 => Some(Self {instrument: NoteBlockInstrumentProperty::Pling, note: NumberFrom0To24Property::new(3), powered: true}),
      757 => Some(Self {instrument: NoteBlockInstrumentProperty::Pling, note: NumberFrom0To24Property::new(3), powered: false}),
      758 => Some(Self {instrument: NoteBlockInstrumentProperty::Pling, note: NumberFrom0To24Property::new(4), powered: true}),
      759 => Some(Self {instrument: NoteBlockInstrumentProperty::Pling, note: NumberFrom0To24Property::new(4), powered: false}),
      760 => Some(Self {instrument: NoteBlockInstrumentProperty::Pling, note: NumberFrom0To24Property::new(5), powered: true}),
      761 => Some(Self {instrument: NoteBlockInstrumentProperty::Pling, note: NumberFrom0To24Property::new(5), powered: false}),
      762 => Some(Self {instrument: NoteBlockInstrumentProperty::Pling, note: NumberFrom0To24Property::new(6), powered: true}),
      763 => Some(Self {instrument: NoteBlockInstrumentProperty::Pling, note: NumberFrom0To24Property::new(6), powered: false}),
      764 => Some(Self {instrument: NoteBlockInstrumentProperty::Pling, note: NumberFrom0To24Property::new(7), powered: true}),
      765 => Some(Self {instrument: NoteBlockInstrumentProperty::Pling, note: NumberFrom0To24Property::new(7), powered: false}),
      766 => Some(Self {instrument: NoteBlockInstrumentProperty::Pling, note: NumberFrom0To24Property::new(8), powered: true}),
      767 => Some(Self {instrument: NoteBlockInstrumentProperty::Pling, note: NumberFrom0To24Property::new(8), powered: false}),
      768 => Some(Self {instrument: NoteBlockInstrumentProperty::Pling, note: NumberFrom0To24Property::new(9), powered: true}),
      769 => Some(Self {instrument: NoteBlockInstrumentProperty::Pling, note: NumberFrom0To24Property::new(9), powered: false}),
      770 => Some(Self {instrument: NoteBlockInstrumentProperty::Pling, note: NumberFrom0To24Property::new(10), powered: true}),
      771 => Some(Self {instrument: NoteBlockInstrumentProperty::Pling, note: NumberFrom0To24Property::new(10), powered: false}),
      772 => Some(Self {instrument: NoteBlockInstrumentProperty::Pling, note: NumberFrom0To24Property::new(11), powered: true}),
      773 => Some(Self {instrument: NoteBlockInstrumentProperty::Pling, note: NumberFrom0To24Property::new(11), powered: false}),
      774 => Some(Self {instrument: NoteBlockInstrumentProperty::Pling, note: NumberFrom0To24Property::new(12), powered: true}),
      775 => Some(Self {instrument: NoteBlockInstrumentProperty::Pling, note: NumberFrom0To24Property::new(12), powered: false}),
      776 => Some(Self {instrument: NoteBlockInstrumentProperty::Pling, note: NumberFrom0To24Property::new(13), powered: true}),
      777 => Some(Self {instrument: NoteBlockInstrumentProperty::Pling, note: NumberFrom0To24Property::new(13), powered: false}),
      778 => Some(Self {instrument: NoteBlockInstrumentProperty::Pling, note: NumberFrom0To24Property::new(14), powered: true}),
      779 => Some(Self {instrument: NoteBlockInstrumentProperty::Pling, note: NumberFrom0To24Property::new(14), powered: false}),
      780 => Some(Self {instrument: NoteBlockInstrumentProperty::Pling, note: NumberFrom0To24Property::new(15), powered: true}),
      781 => Some(Self {instrument: NoteBlockInstrumentProperty::Pling, note: NumberFrom0To24Property::new(15), powered: false}),
      782 => Some(Self {instrument: NoteBlockInstrumentProperty::Pling, note: NumberFrom0To24Property::new(16), powered: true}),
      783 => Some(Self {instrument: NoteBlockInstrumentProperty::Pling, note: NumberFrom0To24Property::new(16), powered: false}),
      784 => Some(Self {instrument: NoteBlockInstrumentProperty::Pling, note: NumberFrom0To24Property::new(17), powered: true}),
      785 => Some(Self {instrument: NoteBlockInstrumentProperty::Pling, note: NumberFrom0To24Property::new(17), powered: false}),
      786 => Some(Self {instrument: NoteBlockInstrumentProperty::Pling, note: NumberFrom0To24Property::new(18), powered: true}),
      787 => Some(Self {instrument: NoteBlockInstrumentProperty::Pling, note: NumberFrom0To24Property::new(18), powered: false}),
      788 => Some(Self {instrument: NoteBlockInstrumentProperty::Pling, note: NumberFrom0To24Property::new(19), powered: true}),
      789 => Some(Self {instrument: NoteBlockInstrumentProperty::Pling, note: NumberFrom0To24Property::new(19), powered: false}),
      790 => Some(Self {instrument: NoteBlockInstrumentProperty::Pling, note: NumberFrom0To24Property::new(20), powered: true}),
      791 => Some(Self {instrument: NoteBlockInstrumentProperty::Pling, note: NumberFrom0To24Property::new(20), powered: false}),
      792 => Some(Self {instrument: NoteBlockInstrumentProperty::Pling, note: NumberFrom0To24Property::new(21), powered: true}),
      793 => Some(Self {instrument: NoteBlockInstrumentProperty::Pling, note: NumberFrom0To24Property::new(21), powered: false}),
      794 => Some(Self {instrument: NoteBlockInstrumentProperty::Pling, note: NumberFrom0To24Property::new(22), powered: true}),
      795 => Some(Self {instrument: NoteBlockInstrumentProperty::Pling, note: NumberFrom0To24Property::new(22), powered: false}),
      796 => Some(Self {instrument: NoteBlockInstrumentProperty::Pling, note: NumberFrom0To24Property::new(23), powered: true}),
      797 => Some(Self {instrument: NoteBlockInstrumentProperty::Pling, note: NumberFrom0To24Property::new(23), powered: false}),
      798 => Some(Self {instrument: NoteBlockInstrumentProperty::Pling, note: NumberFrom0To24Property::new(24), powered: true}),
      799 => Some(Self {instrument: NoteBlockInstrumentProperty::Pling, note: NumberFrom0To24Property::new(24), powered: false}),
      _ => None,
    }
  }
  pub fn to_offset(self) -> usize {
    match self.instrument {
      NoteBlockInstrumentProperty::Harp => match self.note.value() {
        0 => match self.powered {
          true => 0,
          false => 1,
        },
        1 => match self.powered {
          true => 2,
          false => 3,
        },
        2 => match self.powered {
          true => 4,
          false => 5,
        },
        3 => match self.powered {
          true => 6,
          false => 7,
        },
        4 => match self.powered {
          true => 8,
          false => 9,
        },
        5 => match self.powered {
          true => 10,
          false => 11,
        },
        6 => match self.powered {
          true => 12,
          false => 13,
        },
        7 => match self.powered {
          true => 14,
          false => 15,
        },
        8 => match self.powered {
          true => 16,
          false => 17,
        },
        9 => match self.powered {
          true => 18,
          false => 19,
        },
        10 => match self.powered {
          true => 20,
          false => 21,
        },
        11 => match self.powered {
          true => 22,
          false => 23,
        },
        12 => match self.powered {
          true => 24,
          false => 25,
        },
        13 => match self.powered {
          true => 26,
          false => 27,
        },
        14 => match self.powered {
          true => 28,
          false => 29,
        },
        15 => match self.powered {
          true => 30,
          false => 31,
        },
        16 => match self.powered {
          true => 32,
          false => 33,
        },
        17 => match self.powered {
          true => 34,
          false => 35,
        },
        18 => match self.powered {
          true => 36,
          false => 37,
        },
        19 => match self.powered {
          true => 38,
          false => 39,
        },
        20 => match self.powered {
          true => 40,
          false => 41,
        },
        21 => match self.powered {
          true => 42,
          false => 43,
        },
        22 => match self.powered {
          true => 44,
          false => 45,
        },
        23 => match self.powered {
          true => 46,
          false => 47,
        },
        24 => match self.powered {
          true => 48,
          false => 49,
        },
        _ => panic!("Illegal Block State"),
      },
      NoteBlockInstrumentProperty::Basedrum => match self.note.value() {
        0 => match self.powered {
          true => 50,
          false => 51,
        },
        1 => match self.powered {
          true => 52,
          false => 53,
        },
        2 => match self.powered {
          true => 54,
          false => 55,
        },
        3 => match self.powered {
          true => 56,
          false => 57,
        },
        4 => match self.powered {
          true => 58,
          false => 59,
        },
        5 => match self.powered {
          true => 60,
          false => 61,
        },
        6 => match self.powered {
          true => 62,
          false => 63,
        },
        7 => match self.powered {
          true => 64,
          false => 65,
        },
        8 => match self.powered {
          true => 66,
          false => 67,
        },
        9 => match self.powered {
          true => 68,
          false => 69,
        },
        10 => match self.powered {
          true => 70,
          false => 71,
        },
        11 => match self.powered {
          true => 72,
          false => 73,
        },
        12 => match self.powered {
          true => 74,
          false => 75,
        },
        13 => match self.powered {
          true => 76,
          false => 77,
        },
        14 => match self.powered {
          true => 78,
          false => 79,
        },
        15 => match self.powered {
          true => 80,
          false => 81,
        },
        16 => match self.powered {
          true => 82,
          false => 83,
        },
        17 => match self.powered {
          true => 84,
          false => 85,
        },
        18 => match self.powered {
          true => 86,
          false => 87,
        },
        19 => match self.powered {
          true => 88,
          false => 89,
        },
        20 => match self.powered {
          true => 90,
          false => 91,
        },
        21 => match self.powered {
          true => 92,
          false => 93,
        },
        22 => match self.powered {
          true => 94,
          false => 95,
        },
        23 => match self.powered {
          true => 96,
          false => 97,
        },
        24 => match self.powered {
          true => 98,
          false => 99,
        },
        _ => panic!("Illegal Block State"),
      },
      NoteBlockInstrumentProperty::Snare => match self.note.value() {
        0 => match self.powered {
          true => 100,
          false => 101,
        },
        1 => match self.powered {
          true => 102,
          false => 103,
        },
        2 => match self.powered {
          true => 104,
          false => 105,
        },
        3 => match self.powered {
          true => 106,
          false => 107,
        },
        4 => match self.powered {
          true => 108,
          false => 109,
        },
        5 => match self.powered {
          true => 110,
          false => 111,
        },
        6 => match self.powered {
          true => 112,
          false => 113,
        },
        7 => match self.powered {
          true => 114,
          false => 115,
        },
        8 => match self.powered {
          true => 116,
          false => 117,
        },
        9 => match self.powered {
          true => 118,
          false => 119,
        },
        10 => match self.powered {
          true => 120,
          false => 121,
        },
        11 => match self.powered {
          true => 122,
          false => 123,
        },
        12 => match self.powered {
          true => 124,
          false => 125,
        },
        13 => match self.powered {
          true => 126,
          false => 127,
        },
        14 => match self.powered {
          true => 128,
          false => 129,
        },
        15 => match self.powered {
          true => 130,
          false => 131,
        },
        16 => match self.powered {
          true => 132,
          false => 133,
        },
        17 => match self.powered {
          true => 134,
          false => 135,
        },
        18 => match self.powered {
          true => 136,
          false => 137,
        },
        19 => match self.powered {
          true => 138,
          false => 139,
        },
        20 => match self.powered {
          true => 140,
          false => 141,
        },
        21 => match self.powered {
          true => 142,
          false => 143,
        },
        22 => match self.powered {
          true => 144,
          false => 145,
        },
        23 => match self.powered {
          true => 146,
          false => 147,
        },
        24 => match self.powered {
          true => 148,
          false => 149,
        },
        _ => panic!("Illegal Block State"),
      },
      NoteBlockInstrumentProperty::Hat => match self.note.value() {
        0 => match self.powered {
          true => 150,
          false => 151,
        },
        1 => match self.powered {
          true => 152,
          false => 153,
        },
        2 => match self.powered {
          true => 154,
          false => 155,
        },
        3 => match self.powered {
          true => 156,
          false => 157,
        },
        4 => match self.powered {
          true => 158,
          false => 159,
        },
        5 => match self.powered {
          true => 160,
          false => 161,
        },
        6 => match self.powered {
          true => 162,
          false => 163,
        },
        7 => match self.powered {
          true => 164,
          false => 165,
        },
        8 => match self.powered {
          true => 166,
          false => 167,
        },
        9 => match self.powered {
          true => 168,
          false => 169,
        },
        10 => match self.powered {
          true => 170,
          false => 171,
        },
        11 => match self.powered {
          true => 172,
          false => 173,
        },
        12 => match self.powered {
          true => 174,
          false => 175,
        },
        13 => match self.powered {
          true => 176,
          false => 177,
        },
        14 => match self.powered {
          true => 178,
          false => 179,
        },
        15 => match self.powered {
          true => 180,
          false => 181,
        },
        16 => match self.powered {
          true => 182,
          false => 183,
        },
        17 => match self.powered {
          true => 184,
          false => 185,
        },
        18 => match self.powered {
          true => 186,
          false => 187,
        },
        19 => match self.powered {
          true => 188,
          false => 189,
        },
        20 => match self.powered {
          true => 190,
          false => 191,
        },
        21 => match self.powered {
          true => 192,
          false => 193,
        },
        22 => match self.powered {
          true => 194,
          false => 195,
        },
        23 => match self.powered {
          true => 196,
          false => 197,
        },
        24 => match self.powered {
          true => 198,
          false => 199,
        },
        _ => panic!("Illegal Block State"),
      },
      NoteBlockInstrumentProperty::Bass => match self.note.value() {
        0 => match self.powered {
          true => 200,
          false => 201,
        },
        1 => match self.powered {
          true => 202,
          false => 203,
        },
        2 => match self.powered {
          true => 204,
          false => 205,
        },
        3 => match self.powered {
          true => 206,
          false => 207,
        },
        4 => match self.powered {
          true => 208,
          false => 209,
        },
        5 => match self.powered {
          true => 210,
          false => 211,
        },
        6 => match self.powered {
          true => 212,
          false => 213,
        },
        7 => match self.powered {
          true => 214,
          false => 215,
        },
        8 => match self.powered {
          true => 216,
          false => 217,
        },
        9 => match self.powered {
          true => 218,
          false => 219,
        },
        10 => match self.powered {
          true => 220,
          false => 221,
        },
        11 => match self.powered {
          true => 222,
          false => 223,
        },
        12 => match self.powered {
          true => 224,
          false => 225,
        },
        13 => match self.powered {
          true => 226,
          false => 227,
        },
        14 => match self.powered {
          true => 228,
          false => 229,
        },
        15 => match self.powered {
          true => 230,
          false => 231,
        },
        16 => match self.powered {
          true => 232,
          false => 233,
        },
        17 => match self.powered {
          true => 234,
          false => 235,
        },
        18 => match self.powered {
          true => 236,
          false => 237,
        },
        19 => match self.powered {
          true => 238,
          false => 239,
        },
        20 => match self.powered {
          true => 240,
          false => 241,
        },
        21 => match self.powered {
          true => 242,
          false => 243,
        },
        22 => match self.powered {
          true => 244,
          false => 245,
        },
        23 => match self.powered {
          true => 246,
          false => 247,
        },
        24 => match self.powered {
          true => 248,
          false => 249,
        },
        _ => panic!("Illegal Block State"),
      },
      NoteBlockInstrumentProperty::Flute => match self.note.value() {
        0 => match self.powered {
          true => 250,
          false => 251,
        },
        1 => match self.powered {
          true => 252,
          false => 253,
        },
        2 => match self.powered {
          true => 254,
          false => 255,
        },
        3 => match self.powered {
          true => 256,
          false => 257,
        },
        4 => match self.powered {
          true => 258,
          false => 259,
        },
        5 => match self.powered {
          true => 260,
          false => 261,
        },
        6 => match self.powered {
          true => 262,
          false => 263,
        },
        7 => match self.powered {
          true => 264,
          false => 265,
        },
        8 => match self.powered {
          true => 266,
          false => 267,
        },
        9 => match self.powered {
          true => 268,
          false => 269,
        },
        10 => match self.powered {
          true => 270,
          false => 271,
        },
        11 => match self.powered {
          true => 272,
          false => 273,
        },
        12 => match self.powered {
          true => 274,
          false => 275,
        },
        13 => match self.powered {
          true => 276,
          false => 277,
        },
        14 => match self.powered {
          true => 278,
          false => 279,
        },
        15 => match self.powered {
          true => 280,
          false => 281,
        },
        16 => match self.powered {
          true => 282,
          false => 283,
        },
        17 => match self.powered {
          true => 284,
          false => 285,
        },
        18 => match self.powered {
          true => 286,
          false => 287,
        },
        19 => match self.powered {
          true => 288,
          false => 289,
        },
        20 => match self.powered {
          true => 290,
          false => 291,
        },
        21 => match self.powered {
          true => 292,
          false => 293,
        },
        22 => match self.powered {
          true => 294,
          false => 295,
        },
        23 => match self.powered {
          true => 296,
          false => 297,
        },
        24 => match self.powered {
          true => 298,
          false => 299,
        },
        _ => panic!("Illegal Block State"),
      },
      NoteBlockInstrumentProperty::Bell => match self.note.value() {
        0 => match self.powered {
          true => 300,
          false => 301,
        },
        1 => match self.powered {
          true => 302,
          false => 303,
        },
        2 => match self.powered {
          true => 304,
          false => 305,
        },
        3 => match self.powered {
          true => 306,
          false => 307,
        },
        4 => match self.powered {
          true => 308,
          false => 309,
        },
        5 => match self.powered {
          true => 310,
          false => 311,
        },
        6 => match self.powered {
          true => 312,
          false => 313,
        },
        7 => match self.powered {
          true => 314,
          false => 315,
        },
        8 => match self.powered {
          true => 316,
          false => 317,
        },
        9 => match self.powered {
          true => 318,
          false => 319,
        },
        10 => match self.powered {
          true => 320,
          false => 321,
        },
        11 => match self.powered {
          true => 322,
          false => 323,
        },
        12 => match self.powered {
          true => 324,
          false => 325,
        },
        13 => match self.powered {
          true => 326,
          false => 327,
        },
        14 => match self.powered {
          true => 328,
          false => 329,
        },
        15 => match self.powered {
          true => 330,
          false => 331,
        },
        16 => match self.powered {
          true => 332,
          false => 333,
        },
        17 => match self.powered {
          true => 334,
          false => 335,
        },
        18 => match self.powered {
          true => 336,
          false => 337,
        },
        19 => match self.powered {
          true => 338,
          false => 339,
        },
        20 => match self.powered {
          true => 340,
          false => 341,
        },
        21 => match self.powered {
          true => 342,
          false => 343,
        },
        22 => match self.powered {
          true => 344,
          false => 345,
        },
        23 => match self.powered {
          true => 346,
          false => 347,
        },
        24 => match self.powered {
          true => 348,
          false => 349,
        },
        _ => panic!("Illegal Block State"),
      },
      NoteBlockInstrumentProperty::Guitar => match self.note.value() {
        0 => match self.powered {
          true => 350,
          false => 351,
        },
        1 => match self.powered {
          true => 352,
          false => 353,
        },
        2 => match self.powered {
          true => 354,
          false => 355,
        },
        3 => match self.powered {
          true => 356,
          false => 357,
        },
        4 => match self.powered {
          true => 358,
          false => 359,
        },
        5 => match self.powered {
          true => 360,
          false => 361,
        },
        6 => match self.powered {
          true => 362,
          false => 363,
        },
        7 => match self.powered {
          true => 364,
          false => 365,
        },
        8 => match self.powered {
          true => 366,
          false => 367,
        },
        9 => match self.powered {
          true => 368,
          false => 369,
        },
        10 => match self.powered {
          true => 370,
          false => 371,
        },
        11 => match self.powered {
          true => 372,
          false => 373,
        },
        12 => match self.powered {
          true => 374,
          false => 375,
        },
        13 => match self.powered {
          true => 376,
          false => 377,
        },
        14 => match self.powered {
          true => 378,
          false => 379,
        },
        15 => match self.powered {
          true => 380,
          false => 381,
        },
        16 => match self.powered {
          true => 382,
          false => 383,
        },
        17 => match self.powered {
          true => 384,
          false => 385,
        },
        18 => match self.powered {
          true => 386,
          false => 387,
        },
        19 => match self.powered {
          true => 388,
          false => 389,
        },
        20 => match self.powered {
          true => 390,
          false => 391,
        },
        21 => match self.powered {
          true => 392,
          false => 393,
        },
        22 => match self.powered {
          true => 394,
          false => 395,
        },
        23 => match self.powered {
          true => 396,
          false => 397,
        },
        24 => match self.powered {
          true => 398,
          false => 399,
        },
        _ => panic!("Illegal Block State"),
      },
      NoteBlockInstrumentProperty::Chime => match self.note.value() {
        0 => match self.powered {
          true => 400,
          false => 401,
        },
        1 => match self.powered {
          true => 402,
          false => 403,
        },
        2 => match self.powered {
          true => 404,
          false => 405,
        },
        3 => match self.powered {
          true => 406,
          false => 407,
        },
        4 => match self.powered {
          true => 408,
          false => 409,
        },
        5 => match self.powered {
          true => 410,
          false => 411,
        },
        6 => match self.powered {
          true => 412,
          false => 413,
        },
        7 => match self.powered {
          true => 414,
          false => 415,
        },
        8 => match self.powered {
          true => 416,
          false => 417,
        },
        9 => match self.powered {
          true => 418,
          false => 419,
        },
        10 => match self.powered {
          true => 420,
          false => 421,
        },
        11 => match self.powered {
          true => 422,
          false => 423,
        },
        12 => match self.powered {
          true => 424,
          false => 425,
        },
        13 => match self.powered {
          true => 426,
          false => 427,
        },
        14 => match self.powered {
          true => 428,
          false => 429,
        },
        15 => match self.powered {
          true => 430,
          false => 431,
        },
        16 => match self.powered {
          true => 432,
          false => 433,
        },
        17 => match self.powered {
          true => 434,
          false => 435,
        },
        18 => match self.powered {
          true => 436,
          false => 437,
        },
        19 => match self.powered {
          true => 438,
          false => 439,
        },
        20 => match self.powered {
          true => 440,
          false => 441,
        },
        21 => match self.powered {
          true => 442,
          false => 443,
        },
        22 => match self.powered {
          true => 444,
          false => 445,
        },
        23 => match self.powered {
          true => 446,
          false => 447,
        },
        24 => match self.powered {
          true => 448,
          false => 449,
        },
        _ => panic!("Illegal Block State"),
      },
      NoteBlockInstrumentProperty::Xylophone => match self.note.value() {
        0 => match self.powered {
          true => 450,
          false => 451,
        },
        1 => match self.powered {
          true => 452,
          false => 453,
        },
        2 => match self.powered {
          true => 454,
          false => 455,
        },
        3 => match self.powered {
          true => 456,
          false => 457,
        },
        4 => match self.powered {
          true => 458,
          false => 459,
        },
        5 => match self.powered {
          true => 460,
          false => 461,
        },
        6 => match self.powered {
          true => 462,
          false => 463,
        },
        7 => match self.powered {
          true => 464,
          false => 465,
        },
        8 => match self.powered {
          true => 466,
          false => 467,
        },
        9 => match self.powered {
          true => 468,
          false => 469,
        },
        10 => match self.powered {
          true => 470,
          false => 471,
        },
        11 => match self.powered {
          true => 472,
          false => 473,
        },
        12 => match self.powered {
          true => 474,
          false => 475,
        },
        13 => match self.powered {
          true => 476,
          false => 477,
        },
        14 => match self.powered {
          true => 478,
          false => 479,
        },
        15 => match self.powered {
          true => 480,
          false => 481,
        },
        16 => match self.powered {
          true => 482,
          false => 483,
        },
        17 => match self.powered {
          true => 484,
          false => 485,
        },
        18 => match self.powered {
          true => 486,
          false => 487,
        },
        19 => match self.powered {
          true => 488,
          false => 489,
        },
        20 => match self.powered {
          true => 490,
          false => 491,
        },
        21 => match self.powered {
          true => 492,
          false => 493,
        },
        22 => match self.powered {
          true => 494,
          false => 495,
        },
        23 => match self.powered {
          true => 496,
          false => 497,
        },
        24 => match self.powered {
          true => 498,
          false => 499,
        },
        _ => panic!("Illegal Block State"),
      },
      NoteBlockInstrumentProperty::IronXylophone => match self.note.value() {
        0 => match self.powered {
          true => 500,
          false => 501,
        },
        1 => match self.powered {
          true => 502,
          false => 503,
        },
        2 => match self.powered {
          true => 504,
          false => 505,
        },
        3 => match self.powered {
          true => 506,
          false => 507,
        },
        4 => match self.powered {
          true => 508,
          false => 509,
        },
        5 => match self.powered {
          true => 510,
          false => 511,
        },
        6 => match self.powered {
          true => 512,
          false => 513,
        },
        7 => match self.powered {
          true => 514,
          false => 515,
        },
        8 => match self.powered {
          true => 516,
          false => 517,
        },
        9 => match self.powered {
          true => 518,
          false => 519,
        },
        10 => match self.powered {
          true => 520,
          false => 521,
        },
        11 => match self.powered {
          true => 522,
          false => 523,
        },
        12 => match self.powered {
          true => 524,
          false => 525,
        },
        13 => match self.powered {
          true => 526,
          false => 527,
        },
        14 => match self.powered {
          true => 528,
          false => 529,
        },
        15 => match self.powered {
          true => 530,
          false => 531,
        },
        16 => match self.powered {
          true => 532,
          false => 533,
        },
        17 => match self.powered {
          true => 534,
          false => 535,
        },
        18 => match self.powered {
          true => 536,
          false => 537,
        },
        19 => match self.powered {
          true => 538,
          false => 539,
        },
        20 => match self.powered {
          true => 540,
          false => 541,
        },
        21 => match self.powered {
          true => 542,
          false => 543,
        },
        22 => match self.powered {
          true => 544,
          false => 545,
        },
        23 => match self.powered {
          true => 546,
          false => 547,
        },
        24 => match self.powered {
          true => 548,
          false => 549,
        },
        _ => panic!("Illegal Block State"),
      },
      NoteBlockInstrumentProperty::CowBell => match self.note.value() {
        0 => match self.powered {
          true => 550,
          false => 551,
        },
        1 => match self.powered {
          true => 552,
          false => 553,
        },
        2 => match self.powered {
          true => 554,
          false => 555,
        },
        3 => match self.powered {
          true => 556,
          false => 557,
        },
        4 => match self.powered {
          true => 558,
          false => 559,
        },
        5 => match self.powered {
          true => 560,
          false => 561,
        },
        6 => match self.powered {
          true => 562,
          false => 563,
        },
        7 => match self.powered {
          true => 564,
          false => 565,
        },
        8 => match self.powered {
          true => 566,
          false => 567,
        },
        9 => match self.powered {
          true => 568,
          false => 569,
        },
        10 => match self.powered {
          true => 570,
          false => 571,
        },
        11 => match self.powered {
          true => 572,
          false => 573,
        },
        12 => match self.powered {
          true => 574,
          false => 575,
        },
        13 => match self.powered {
          true => 576,
          false => 577,
        },
        14 => match self.powered {
          true => 578,
          false => 579,
        },
        15 => match self.powered {
          true => 580,
          false => 581,
        },
        16 => match self.powered {
          true => 582,
          false => 583,
        },
        17 => match self.powered {
          true => 584,
          false => 585,
        },
        18 => match self.powered {
          true => 586,
          false => 587,
        },
        19 => match self.powered {
          true => 588,
          false => 589,
        },
        20 => match self.powered {
          true => 590,
          false => 591,
        },
        21 => match self.powered {
          true => 592,
          false => 593,
        },
        22 => match self.powered {
          true => 594,
          false => 595,
        },
        23 => match self.powered {
          true => 596,
          false => 597,
        },
        24 => match self.powered {
          true => 598,
          false => 599,
        },
        _ => panic!("Illegal Block State"),
      },
      NoteBlockInstrumentProperty::Didgeridoo => match self.note.value() {
        0 => match self.powered {
          true => 600,
          false => 601,
        },
        1 => match self.powered {
          true => 602,
          false => 603,
        },
        2 => match self.powered {
          true => 604,
          false => 605,
        },
        3 => match self.powered {
          true => 606,
          false => 607,
        },
        4 => match self.powered {
          true => 608,
          false => 609,
        },
        5 => match self.powered {
          true => 610,
          false => 611,
        },
        6 => match self.powered {
          true => 612,
          false => 613,
        },
        7 => match self.powered {
          true => 614,
          false => 615,
        },
        8 => match self.powered {
          true => 616,
          false => 617,
        },
        9 => match self.powered {
          true => 618,
          false => 619,
        },
        10 => match self.powered {
          true => 620,
          false => 621,
        },
        11 => match self.powered {
          true => 622,
          false => 623,
        },
        12 => match self.powered {
          true => 624,
          false => 625,
        },
        13 => match self.powered {
          true => 626,
          false => 627,
        },
        14 => match self.powered {
          true => 628,
          false => 629,
        },
        15 => match self.powered {
          true => 630,
          false => 631,
        },
        16 => match self.powered {
          true => 632,
          false => 633,
        },
        17 => match self.powered {
          true => 634,
          false => 635,
        },
        18 => match self.powered {
          true => 636,
          false => 637,
        },
        19 => match self.powered {
          true => 638,
          false => 639,
        },
        20 => match self.powered {
          true => 640,
          false => 641,
        },
        21 => match self.powered {
          true => 642,
          false => 643,
        },
        22 => match self.powered {
          true => 644,
          false => 645,
        },
        23 => match self.powered {
          true => 646,
          false => 647,
        },
        24 => match self.powered {
          true => 648,
          false => 649,
        },
        _ => panic!("Illegal Block State"),
      },
      NoteBlockInstrumentProperty::Bit => match self.note.value() {
        0 => match self.powered {
          true => 650,
          false => 651,
        },
        1 => match self.powered {
          true => 652,
          false => 653,
        },
        2 => match self.powered {
          true => 654,
          false => 655,
        },
        3 => match self.powered {
          true => 656,
          false => 657,
        },
        4 => match self.powered {
          true => 658,
          false => 659,
        },
        5 => match self.powered {
          true => 660,
          false => 661,
        },
        6 => match self.powered {
          true => 662,
          false => 663,
        },
        7 => match self.powered {
          true => 664,
          false => 665,
        },
        8 => match self.powered {
          true => 666,
          false => 667,
        },
        9 => match self.powered {
          true => 668,
          false => 669,
        },
        10 => match self.powered {
          true => 670,
          false => 671,
        },
        11 => match self.powered {
          true => 672,
          false => 673,
        },
        12 => match self.powered {
          true => 674,
          false => 675,
        },
        13 => match self.powered {
          true => 676,
          false => 677,
        },
        14 => match self.powered {
          true => 678,
          false => 679,
        },
        15 => match self.powered {
          true => 680,
          false => 681,
        },
        16 => match self.powered {
          true => 682,
          false => 683,
        },
        17 => match self.powered {
          true => 684,
          false => 685,
        },
        18 => match self.powered {
          true => 686,
          false => 687,
        },
        19 => match self.powered {
          true => 688,
          false => 689,
        },
        20 => match self.powered {
          true => 690,
          false => 691,
        },
        21 => match self.powered {
          true => 692,
          false => 693,
        },
        22 => match self.powered {
          true => 694,
          false => 695,
        },
        23 => match self.powered {
          true => 696,
          false => 697,
        },
        24 => match self.powered {
          true => 698,
          false => 699,
        },
        _ => panic!("Illegal Block State"),
      },
      NoteBlockInstrumentProperty::Banjo => match self.note.value() {
        0 => match self.powered {
          true => 700,
          false => 701,
        },
        1 => match self.powered {
          true => 702,
          false => 703,
        },
        2 => match self.powered {
          true => 704,
          false => 705,
        },
        3 => match self.powered {
          true => 706,
          false => 707,
        },
        4 => match self.powered {
          true => 708,
          false => 709,
        },
        5 => match self.powered {
          true => 710,
          false => 711,
        },
        6 => match self.powered {
          true => 712,
          false => 713,
        },
        7 => match self.powered {
          true => 714,
          false => 715,
        },
        8 => match self.powered {
          true => 716,
          false => 717,
        },
        9 => match self.powered {
          true => 718,
          false => 719,
        },
        10 => match self.powered {
          true => 720,
          false => 721,
        },
        11 => match self.powered {
          true => 722,
          false => 723,
        },
        12 => match self.powered {
          true => 724,
          false => 725,
        },
        13 => match self.powered {
          true => 726,
          false => 727,
        },
        14 => match self.powered {
          true => 728,
          false => 729,
        },
        15 => match self.powered {
          true => 730,
          false => 731,
        },
        16 => match self.powered {
          true => 732,
          false => 733,
        },
        17 => match self.powered {
          true => 734,
          false => 735,
        },
        18 => match self.powered {
          true => 736,
          false => 737,
        },
        19 => match self.powered {
          true => 738,
          false => 739,
        },
        20 => match self.powered {
          true => 740,
          false => 741,
        },
        21 => match self.powered {
          true => 742,
          false => 743,
        },
        22 => match self.powered {
          true => 744,
          false => 745,
        },
        23 => match self.powered {
          true => 746,
          false => 747,
        },
        24 => match self.powered {
          true => 748,
          false => 749,
        },
        _ => panic!("Illegal Block State"),
      },
      NoteBlockInstrumentProperty::Pling => match self.note.value() {
        0 => match self.powered {
          true => 750,
          false => 751,
        },
        1 => match self.powered {
          true => 752,
          false => 753,
        },
        2 => match self.powered {
          true => 754,
          false => 755,
        },
        3 => match self.powered {
          true => 756,
          false => 757,
        },
        4 => match self.powered {
          true => 758,
          false => 759,
        },
        5 => match self.powered {
          true => 760,
          false => 761,
        },
        6 => match self.powered {
          true => 762,
          false => 763,
        },
        7 => match self.powered {
          true => 764,
          false => 765,
        },
        8 => match self.powered {
          true => 766,
          false => 767,
        },
        9 => match self.powered {
          true => 768,
          false => 769,
        },
        10 => match self.powered {
          true => 770,
          false => 771,
        },
        11 => match self.powered {
          true => 772,
          false => 773,
        },
        12 => match self.powered {
          true => 774,
          false => 775,
        },
        13 => match self.powered {
          true => 776,
          false => 777,
        },
        14 => match self.powered {
          true => 778,
          false => 779,
        },
        15 => match self.powered {
          true => 780,
          false => 781,
        },
        16 => match self.powered {
          true => 782,
          false => 783,
        },
        17 => match self.powered {
          true => 784,
          false => 785,
        },
        18 => match self.powered {
          true => 786,
          false => 787,
        },
        19 => match self.powered {
          true => 788,
          false => 789,
        },
        20 => match self.powered {
          true => 790,
          false => 791,
        },
        21 => match self.powered {
          true => 792,
          false => 793,
        },
        22 => match self.powered {
          true => 794,
          false => 795,
        },
        23 => match self.powered {
          true => 796,
          false => 797,
        },
        24 => match self.powered {
          true => 798,
          false => 799,
        },
        _ => panic!("Illegal Block State"),
      },
    }
  }
}
impl Default for NoteBlockData {
  fn default() -> Self {
    Self {instrument: NoteBlockInstrumentProperty::Harp, note: NumberFrom0To24Property::new(0), powered: false}
  }
}
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]
pub struct BedData {
  pub facing: CardinalFacingProperty,
  pub occupied: bool,
  pub part: BedPartProperty,
}
impl BedData {
  pub fn from_offset(offset: usize) -> Option<Self> {
    match offset {
      0 => Some(Self {facing: CardinalFacingProperty::North, occupied: true, part: BedPartProperty::Head}),
      1 => Some(Self {facing: CardinalFacingProperty::North, occupied: true, part: BedPartProperty::Foot}),
      2 => Some(Self {facing: CardinalFacingProperty::North, occupied: false, part: BedPartProperty::Head}),
      3 => Some(Self {facing: CardinalFacingProperty::North, occupied: false, part: BedPartProperty::Foot}),
      4 => Some(Self {facing: CardinalFacingProperty::South, occupied: true, part: BedPartProperty::Head}),
      5 => Some(Self {facing: CardinalFacingProperty::South, occupied: true, part: BedPartProperty::Foot}),
      6 => Some(Self {facing: CardinalFacingProperty::South, occupied: false, part: BedPartProperty::Head}),
      7 => Some(Self {facing: CardinalFacingProperty::South, occupied: false, part: BedPartProperty::Foot}),
      8 => Some(Self {facing: CardinalFacingProperty::West, occupied: true, part: BedPartProperty::Head}),
      9 => Some(Self {facing: CardinalFacingProperty::West, occupied: true, part: BedPartProperty::Foot}),
      10 => Some(Self {facing: CardinalFacingProperty::West, occupied: false, part: BedPartProperty::Head}),
      11 => Some(Self {facing: CardinalFacingProperty::West, occupied: false, part: BedPartProperty::Foot}),
      12 => Some(Self {facing: CardinalFacingProperty::East, occupied: true, part: BedPartProperty::Head}),
      13 => Some(Self {facing: CardinalFacingProperty::East, occupied: true, part: BedPartProperty::Foot}),
      14 => Some(Self {facing: CardinalFacingProperty::East, occupied: false, part: BedPartProperty::Head}),
      15 => Some(Self {facing: CardinalFacingProperty::East, occupied: false, part: BedPartProperty::Foot}),
      _ => None,
    }
  }
  pub fn to_offset(self) -> usize {
    match self.facing {
      CardinalFacingProperty::North => match self.occupied {
        true => match self.part {
          BedPartProperty::Head => 0,
          BedPartProperty::Foot => 1,
        },
        false => match self.part {
          BedPartProperty::Head => 2,
          BedPartProperty::Foot => 3,
        },
      },
      CardinalFacingProperty::South => match self.occupied {
        true => match self.part {
          BedPartProperty::Head => 4,
          BedPartProperty::Foot => 5,
        },
        false => match self.part {
          BedPartProperty::Head => 6,
          BedPartProperty::Foot => 7,
        },
      },
      CardinalFacingProperty::West => match self.occupied {
        true => match self.part {
          BedPartProperty::Head => 8,
          BedPartProperty::Foot => 9,
        },
        false => match self.part {
          BedPartProperty::Head => 10,
          BedPartProperty::Foot => 11,
        },
      },
      CardinalFacingProperty::East => match self.occupied {
        true => match self.part {
          BedPartProperty::Head => 12,
          BedPartProperty::Foot => 13,
        },
        false => match self.part {
          BedPartProperty::Head => 14,
          BedPartProperty::Foot => 15,
        },
      },
    }
  }
}
impl Default for BedData {
  fn default() -> Self {
    Self {facing: CardinalFacingProperty::North, occupied: false, part: BedPartProperty::Foot}
  }
}
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]
pub struct PoweredRailData {
  pub powered: bool,
  pub shape: PoweredRailShapeProperty,
}
impl PoweredRailData {
  pub fn from_offset(offset: usize) -> Option<Self> {
    match offset {
      0 => Some(Self {powered: true, shape: PoweredRailShapeProperty::NorthSouth}),
      1 => Some(Self {powered: true, shape: PoweredRailShapeProperty::EastWest}),
      2 => Some(Self {powered: true, shape: PoweredRailShapeProperty::AscendingEast}),
      3 => Some(Self {powered: true, shape: PoweredRailShapeProperty::AscendingWest}),
      4 => Some(Self {powered: true, shape: PoweredRailShapeProperty::AscendingNorth}),
      5 => Some(Self {powered: true, shape: PoweredRailShapeProperty::AscendingSouth}),
      6 => Some(Self {powered: false, shape: PoweredRailShapeProperty::NorthSouth}),
      7 => Some(Self {powered: false, shape: PoweredRailShapeProperty::EastWest}),
      8 => Some(Self {powered: false, shape: PoweredRailShapeProperty::AscendingEast}),
      9 => Some(Self {powered: false, shape: PoweredRailShapeProperty::AscendingWest}),
      10 => Some(Self {powered: false, shape: PoweredRailShapeProperty::AscendingNorth}),
      11 => Some(Self {powered: false, shape: PoweredRailShapeProperty::AscendingSouth}),
      _ => None,
    }
  }
  pub fn to_offset(self) -> usize {
    match self.powered {
      true => match self.shape {
        PoweredRailShapeProperty::NorthSouth => 0,
        PoweredRailShapeProperty::EastWest => 1,
        PoweredRailShapeProperty::AscendingEast => 2,
        PoweredRailShapeProperty::AscendingWest => 3,
        PoweredRailShapeProperty::AscendingNorth => 4,
        PoweredRailShapeProperty::AscendingSouth => 5,
      },
      false => match self.shape {
        PoweredRailShapeProperty::NorthSouth => 6,
        PoweredRailShapeProperty::EastWest => 7,
        PoweredRailShapeProperty::AscendingEast => 8,
        PoweredRailShapeProperty::AscendingWest => 9,
        PoweredRailShapeProperty::AscendingNorth => 10,
        PoweredRailShapeProperty::AscendingSouth => 11,
      },
    }
  }
}
impl Default for PoweredRailData {
  fn default() -> Self {
    Self {powered: false, shape: PoweredRailShapeProperty::NorthSouth}
  }
}
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]
pub struct DetectorRailData {
  pub powered: bool,
  pub shape: DetectorRailShapeProperty,
}
impl DetectorRailData {
  pub fn from_offset(offset: usize) -> Option<Self> {
    match offset {
      0 => Some(Self {powered: true, shape: DetectorRailShapeProperty::NorthSouth}),
      1 => Some(Self {powered: true, shape: DetectorRailShapeProperty::EastWest}),
      2 => Some(Self {powered: true, shape: DetectorRailShapeProperty::AscendingEast}),
      3 => Some(Self {powered: true, shape: DetectorRailShapeProperty::AscendingWest}),
      4 => Some(Self {powered: true, shape: DetectorRailShapeProperty::AscendingNorth}),
      5 => Some(Self {powered: true, shape: DetectorRailShapeProperty::AscendingSouth}),
      6 => Some(Self {powered: false, shape: DetectorRailShapeProperty::NorthSouth}),
      7 => Some(Self {powered: false, shape: DetectorRailShapeProperty::EastWest}),
      8 => Some(Self {powered: false, shape: DetectorRailShapeProperty::AscendingEast}),
      9 => Some(Self {powered: false, shape: DetectorRailShapeProperty::AscendingWest}),
      10 => Some(Self {powered: false, shape: DetectorRailShapeProperty::AscendingNorth}),
      11 => Some(Self {powered: false, shape: DetectorRailShapeProperty::AscendingSouth}),
      _ => None,
    }
  }
  pub fn to_offset(self) -> usize {
    match self.powered {
      true => match self.shape {
        DetectorRailShapeProperty::NorthSouth => 0,
        DetectorRailShapeProperty::EastWest => 1,
        DetectorRailShapeProperty::AscendingEast => 2,
        DetectorRailShapeProperty::AscendingWest => 3,
        DetectorRailShapeProperty::AscendingNorth => 4,
        DetectorRailShapeProperty::AscendingSouth => 5,
      },
      false => match self.shape {
        DetectorRailShapeProperty::NorthSouth => 6,
        DetectorRailShapeProperty::EastWest => 7,
        DetectorRailShapeProperty::AscendingEast => 8,
        DetectorRailShapeProperty::AscendingWest => 9,
        DetectorRailShapeProperty::AscendingNorth => 10,
        DetectorRailShapeProperty::AscendingSouth => 11,
      },
    }
  }
}
impl Default for DetectorRailData {
  fn default() -> Self {
    Self {powered: false, shape: DetectorRailShapeProperty::NorthSouth}
  }
}
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]
pub struct PistonData {
  pub extended: bool,
  pub facing: BlockFacingProperty,
}
impl PistonData {
  pub fn from_offset(offset: usize) -> Option<Self> {
    match offset {
      0 => Some(Self {extended: true, facing: BlockFacingProperty::North}),
      1 => Some(Self {extended: true, facing: BlockFacingProperty::East}),
      2 => Some(Self {extended: true, facing: BlockFacingProperty::South}),
      3 => Some(Self {extended: true, facing: BlockFacingProperty::West}),
      4 => Some(Self {extended: true, facing: BlockFacingProperty::Up}),
      5 => Some(Self {extended: true, facing: BlockFacingProperty::Down}),
      6 => Some(Self {extended: false, facing: BlockFacingProperty::North}),
      7 => Some(Self {extended: false, facing: BlockFacingProperty::East}),
      8 => Some(Self {extended: false, facing: BlockFacingProperty::South}),
      9 => Some(Self {extended: false, facing: BlockFacingProperty::West}),
      10 => Some(Self {extended: false, facing: BlockFacingProperty::Up}),
      11 => Some(Self {extended: false, facing: BlockFacingProperty::Down}),
      _ => None,
    }
  }
  pub fn to_offset(self) -> usize {
    match self.extended {
      true => match self.facing {
        BlockFacingProperty::North => 0,
        BlockFacingProperty::East => 1,
        BlockFacingProperty::South => 2,
        BlockFacingProperty::West => 3,
        BlockFacingProperty::Up => 4,
        BlockFacingProperty::Down => 5,
      },
      false => match self.facing {
        BlockFacingProperty::North => 6,
        BlockFacingProperty::East => 7,
        BlockFacingProperty::South => 8,
        BlockFacingProperty::West => 9,
        BlockFacingProperty::Up => 10,
        BlockFacingProperty::Down => 11,
      },
    }
  }
}
impl Default for PistonData {
  fn default() -> Self {
    Self {extended: false, facing: BlockFacingProperty::North}
  }
}
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]
pub struct TallSeagrassData {
  pub half: TallSeagrassHalfProperty,
}
impl TallSeagrassData {
  pub fn from_offset(offset: usize) -> Option<Self> {
    match offset {
      0 => Some(Self {half: TallSeagrassHalfProperty::Upper}),
      1 => Some(Self {half: TallSeagrassHalfProperty::Lower}),
      _ => None,
    }
  }
  pub fn to_offset(self) -> usize {
    match self.half {
      TallSeagrassHalfProperty::Upper => 0,
      TallSeagrassHalfProperty::Lower => 1,
    }
  }
}
impl Default for TallSeagrassData {
  fn default() -> Self {
    Self {half: TallSeagrassHalfProperty::Lower}
  }
}
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]
pub struct PistonHeadData {
  pub facing: BlockFacingProperty,
  pub short: bool,
  pub r#type: PistonHeadTypeProperty,
}
impl PistonHeadData {
  pub fn from_offset(offset: usize) -> Option<Self> {
    match offset {
      0 => Some(Self {facing: BlockFacingProperty::North, short: true, r#type: PistonHeadTypeProperty::Normal}),
      1 => Some(Self {facing: BlockFacingProperty::North, short: true, r#type: PistonHeadTypeProperty::Sticky}),
      2 => Some(Self {facing: BlockFacingProperty::North, short: false, r#type: PistonHeadTypeProperty::Normal}),
      3 => Some(Self {facing: BlockFacingProperty::North, short: false, r#type: PistonHeadTypeProperty::Sticky}),
      4 => Some(Self {facing: BlockFacingProperty::East, short: true, r#type: PistonHeadTypeProperty::Normal}),
      5 => Some(Self {facing: BlockFacingProperty::East, short: true, r#type: PistonHeadTypeProperty::Sticky}),
      6 => Some(Self {facing: BlockFacingProperty::East, short: false, r#type: PistonHeadTypeProperty::Normal}),
      7 => Some(Self {facing: BlockFacingProperty::East, short: false, r#type: PistonHeadTypeProperty::Sticky}),
      8 => Some(Self {facing: BlockFacingProperty::South, short: true, r#type: PistonHeadTypeProperty::Normal}),
      9 => Some(Self {facing: BlockFacingProperty::South, short: true, r#type: PistonHeadTypeProperty::Sticky}),
      10 => Some(Self {facing: BlockFacingProperty::South, short: false, r#type: PistonHeadTypeProperty::Normal}),
      11 => Some(Self {facing: BlockFacingProperty::South, short: false, r#type: PistonHeadTypeProperty::Sticky}),
      12 => Some(Self {facing: BlockFacingProperty::West, short: true, r#type: PistonHeadTypeProperty::Normal}),
      13 => Some(Self {facing: BlockFacingProperty::West, short: true, r#type: PistonHeadTypeProperty::Sticky}),
      14 => Some(Self {facing: BlockFacingProperty::West, short: false, r#type: PistonHeadTypeProperty::Normal}),
      15 => Some(Self {facing: BlockFacingProperty::West, short: false, r#type: PistonHeadTypeProperty::Sticky}),
      16 => Some(Self {facing: BlockFacingProperty::Up, short: true, r#type: PistonHeadTypeProperty::Normal}),
      17 => Some(Self {facing: BlockFacingProperty::Up, short: true, r#type: PistonHeadTypeProperty::Sticky}),
      18 => Some(Self {facing: BlockFacingProperty::Up, short: false, r#type: PistonHeadTypeProperty::Normal}),
      19 => Some(Self {facing: BlockFacingProperty::Up, short: false, r#type: PistonHeadTypeProperty::Sticky}),
      20 => Some(Self {facing: BlockFacingProperty::Down, short: true, r#type: PistonHeadTypeProperty::Normal}),
      21 => Some(Self {facing: BlockFacingProperty::Down, short: true, r#type: PistonHeadTypeProperty::Sticky}),
      22 => Some(Self {facing: BlockFacingProperty::Down, short: false, r#type: PistonHeadTypeProperty::Normal}),
      23 => Some(Self {facing: BlockFacingProperty::Down, short: false, r#type: PistonHeadTypeProperty::Sticky}),
      _ => None,
    }
  }
  pub fn to_offset(self) -> usize {
    match self.facing {
      BlockFacingProperty::North => match self.short {
        true => match self.r#type {
          PistonHeadTypeProperty::Normal => 0,
          PistonHeadTypeProperty::Sticky => 1,
        },
        false => match self.r#type {
          PistonHeadTypeProperty::Normal => 2,
          PistonHeadTypeProperty::Sticky => 3,
        },
      },
      BlockFacingProperty::East => match self.short {
        true => match self.r#type {
          PistonHeadTypeProperty::Normal => 4,
          PistonHeadTypeProperty::Sticky => 5,
        },
        false => match self.r#type {
          PistonHeadTypeProperty::Normal => 6,
          PistonHeadTypeProperty::Sticky => 7,
        },
      },
      BlockFacingProperty::South => match self.short {
        true => match self.r#type {
          PistonHeadTypeProperty::Normal => 8,
          PistonHeadTypeProperty::Sticky => 9,
        },
        false => match self.r#type {
          PistonHeadTypeProperty::Normal => 10,
          PistonHeadTypeProperty::Sticky => 11,
        },
      },
      BlockFacingProperty::West => match self.short {
        true => match self.r#type {
          PistonHeadTypeProperty::Normal => 12,
          PistonHeadTypeProperty::Sticky => 13,
        },
        false => match self.r#type {
          PistonHeadTypeProperty::Normal => 14,
          PistonHeadTypeProperty::Sticky => 15,
        },
      },
      BlockFacingProperty::Up => match self.short {
        true => match self.r#type {
          PistonHeadTypeProperty::Normal => 16,
          PistonHeadTypeProperty::Sticky => 17,
        },
        false => match self.r#type {
          PistonHeadTypeProperty::Normal => 18,
          PistonHeadTypeProperty::Sticky => 19,
        },
      },
      BlockFacingProperty::Down => match self.short {
        true => match self.r#type {
          PistonHeadTypeProperty::Normal => 20,
          PistonHeadTypeProperty::Sticky => 21,
        },
        false => match self.r#type {
          PistonHeadTypeProperty::Normal => 22,
          PistonHeadTypeProperty::Sticky => 23,
        },
      },
    }
  }
}
impl Default for PistonHeadData {
  fn default() -> Self {
    Self {facing: BlockFacingProperty::North, short: false, r#type: PistonHeadTypeProperty::Normal}
  }
}
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]
pub struct TntData {
  pub unstable: bool,
}
impl TntData {
  pub fn from_offset(offset: usize) -> Option<Self> {
    match offset {
      0 => Some(Self {unstable: true}),
      1 => Some(Self {unstable: false}),
      _ => None,
    }
  }
  pub fn to_offset(self) -> usize {
    match self.unstable {
      true => 0,
      false => 1,
    }
  }
}
impl Default for TntData {
  fn default() -> Self {
    Self {unstable: false}
  }
}
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]
pub struct CardinalData {
  pub facing: CardinalFacingProperty,
}
impl CardinalData {
  pub fn from_offset(offset: usize) -> Option<Self> {
    match offset {
      0 => Some(Self {facing: CardinalFacingProperty::North}),
      1 => Some(Self {facing: CardinalFacingProperty::South}),
      2 => Some(Self {facing: CardinalFacingProperty::West}),
      3 => Some(Self {facing: CardinalFacingProperty::East}),
      _ => None,
    }
  }
  pub fn to_offset(self) -> usize {
    match self.facing {
      CardinalFacingProperty::North => 0,
      CardinalFacingProperty::South => 1,
      CardinalFacingProperty::West => 2,
      CardinalFacingProperty::East => 3,
    }
  }
}
impl Default for CardinalData {
  fn default() -> Self {
    Self {facing: CardinalFacingProperty::North}
  }
}
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]
pub struct FireData {
  pub age: NumberFrom0To15Property,
  pub east: bool,
  pub north: bool,
  pub south: bool,
  pub up: bool,
  pub west: bool,
}
impl FireData {
  pub fn from_offset(offset: usize) -> Option<Self> {
    match offset {
      0 => Some(Self {age: NumberFrom0To15Property::new(0), east: true, north: true, south: true, up: true, west: true}),
      1 => Some(Self {age: NumberFrom0To15Property::new(0), east: true, north: true, south: true, up: true, west: false}),
      2 => Some(Self {age: NumberFrom0To15Property::new(0), east: true, north: true, south: true, up: false, west: true}),
      3 => Some(Self {age: NumberFrom0To15Property::new(0), east: true, north: true, south: true, up: false, west: false}),
      4 => Some(Self {age: NumberFrom0To15Property::new(0), east: true, north: true, south: false, up: true, west: true}),
      5 => Some(Self {age: NumberFrom0To15Property::new(0), east: true, north: true, south: false, up: true, west: false}),
      6 => Some(Self {age: NumberFrom0To15Property::new(0), east: true, north: true, south: false, up: false, west: true}),
      7 => Some(Self {age: NumberFrom0To15Property::new(0), east: true, north: true, south: false, up: false, west: false}),
      8 => Some(Self {age: NumberFrom0To15Property::new(0), east: true, north: false, south: true, up: true, west: true}),
      9 => Some(Self {age: NumberFrom0To15Property::new(0), east: true, north: false, south: true, up: true, west: false}),
      10 => Some(Self {age: NumberFrom0To15Property::new(0), east: true, north: false, south: true, up: false, west: true}),
      11 => Some(Self {age: NumberFrom0To15Property::new(0), east: true, north: false, south: true, up: false, west: false}),
      12 => Some(Self {age: NumberFrom0To15Property::new(0), east: true, north: false, south: false, up: true, west: true}),
      13 => Some(Self {age: NumberFrom0To15Property::new(0), east: true, north: false, south: false, up: true, west: false}),
      14 => Some(Self {age: NumberFrom0To15Property::new(0), east: true, north: false, south: false, up: false, west: true}),
      15 => Some(Self {age: NumberFrom0To15Property::new(0), east: true, north: false, south: false, up: false, west: false}),
      16 => Some(Self {age: NumberFrom0To15Property::new(0), east: false, north: true, south: true, up: true, west: true}),
      17 => Some(Self {age: NumberFrom0To15Property::new(0), east: false, north: true, south: true, up: true, west: false}),
      18 => Some(Self {age: NumberFrom0To15Property::new(0), east: false, north: true, south: true, up: false, west: true}),
      19 => Some(Self {age: NumberFrom0To15Property::new(0), east: false, north: true, south: true, up: false, west: false}),
      20 => Some(Self {age: NumberFrom0To15Property::new(0), east: false, north: true, south: false, up: true, west: true}),
      21 => Some(Self {age: NumberFrom0To15Property::new(0), east: false, north: true, south: false, up: true, west: false}),
      22 => Some(Self {age: NumberFrom0To15Property::new(0), east: false, north: true, south: false, up: false, west: true}),
      23 => Some(Self {age: NumberFrom0To15Property::new(0), east: false, north: true, south: false, up: false, west: false}),
      24 => Some(Self {age: NumberFrom0To15Property::new(0), east: false, north: false, south: true, up: true, west: true}),
      25 => Some(Self {age: NumberFrom0To15Property::new(0), east: false, north: false, south: true, up: true, west: false}),
      26 => Some(Self {age: NumberFrom0To15Property::new(0), east: false, north: false, south: true, up: false, west: true}),
      27 => Some(Self {age: NumberFrom0To15Property::new(0), east: false, north: false, south: true, up: false, west: false}),
      28 => Some(Self {age: NumberFrom0To15Property::new(0), east: false, north: false, south: false, up: true, west: true}),
      29 => Some(Self {age: NumberFrom0To15Property::new(0), east: false, north: false, south: false, up: true, west: false}),
      30 => Some(Self {age: NumberFrom0To15Property::new(0), east: false, north: false, south: false, up: false, west: true}),
      31 => Some(Self {age: NumberFrom0To15Property::new(0), east: false, north: false, south: false, up: false, west: false}),
      32 => Some(Self {age: NumberFrom0To15Property::new(1), east: true, north: true, south: true, up: true, west: true}),
      33 => Some(Self {age: NumberFrom0To15Property::new(1), east: true, north: true, south: true, up: true, west: false}),
      34 => Some(Self {age: NumberFrom0To15Property::new(1), east: true, north: true, south: true, up: false, west: true}),
      35 => Some(Self {age: NumberFrom0To15Property::new(1), east: true, north: true, south: true, up: false, west: false}),
      36 => Some(Self {age: NumberFrom0To15Property::new(1), east: true, north: true, south: false, up: true, west: true}),
      37 => Some(Self {age: NumberFrom0To15Property::new(1), east: true, north: true, south: false, up: true, west: false}),
      38 => Some(Self {age: NumberFrom0To15Property::new(1), east: true, north: true, south: false, up: false, west: true}),
      39 => Some(Self {age: NumberFrom0To15Property::new(1), east: true, north: true, south: false, up: false, west: false}),
      40 => Some(Self {age: NumberFrom0To15Property::new(1), east: true, north: false, south: true, up: true, west: true}),
      41 => Some(Self {age: NumberFrom0To15Property::new(1), east: true, north: false, south: true, up: true, west: false}),
      42 => Some(Self {age: NumberFrom0To15Property::new(1), east: true, north: false, south: true, up: false, west: true}),
      43 => Some(Self {age: NumberFrom0To15Property::new(1), east: true, north: false, south: true, up: false, west: false}),
      44 => Some(Self {age: NumberFrom0To15Property::new(1), east: true, north: false, south: false, up: true, west: true}),
      45 => Some(Self {age: NumberFrom0To15Property::new(1), east: true, north: false, south: false, up: true, west: false}),
      46 => Some(Self {age: NumberFrom0To15Property::new(1), east: true, north: false, south: false, up: false, west: true}),
      47 => Some(Self {age: NumberFrom0To15Property::new(1), east: true, north: false, south: false, up: false, west: false}),
      48 => Some(Self {age: NumberFrom0To15Property::new(1), east: false, north: true, south: true, up: true, west: true}),
      49 => Some(Self {age: NumberFrom0To15Property::new(1), east: false, north: true, south: true, up: true, west: false}),
      50 => Some(Self {age: NumberFrom0To15Property::new(1), east: false, north: true, south: true, up: false, west: true}),
      51 => Some(Self {age: NumberFrom0To15Property::new(1), east: false, north: true, south: true, up: false, west: false}),
      52 => Some(Self {age: NumberFrom0To15Property::new(1), east: false, north: true, south: false, up: true, west: true}),
      53 => Some(Self {age: NumberFrom0To15Property::new(1), east: false, north: true, south: false, up: true, west: false}),
      54 => Some(Self {age: NumberFrom0To15Property::new(1), east: false, north: true, south: false, up: false, west: true}),
      55 => Some(Self {age: NumberFrom0To15Property::new(1), east: false, north: true, south: false, up: false, west: false}),
      56 => Some(Self {age: NumberFrom0To15Property::new(1), east: false, north: false, south: true, up: true, west: true}),
      57 => Some(Self {age: NumberFrom0To15Property::new(1), east: false, north: false, south: true, up: true, west: false}),
      58 => Some(Self {age: NumberFrom0To15Property::new(1), east: false, north: false, south: true, up: false, west: true}),
      59 => Some(Self {age: NumberFrom0To15Property::new(1), east: false, north: false, south: true, up: false, west: false}),
      60 => Some(Self {age: NumberFrom0To15Property::new(1), east: false, north: false, south: false, up: true, west: true}),
      61 => Some(Self {age: NumberFrom0To15Property::new(1), east: false, north: false, south: false, up: true, west: false}),
      62 => Some(Self {age: NumberFrom0To15Property::new(1), east: false, north: false, south: false, up: false, west: true}),
      63 => Some(Self {age: NumberFrom0To15Property::new(1), east: false, north: false, south: false, up: false, west: false}),
      64 => Some(Self {age: NumberFrom0To15Property::new(2), east: true, north: true, south: true, up: true, west: true}),
      65 => Some(Self {age: NumberFrom0To15Property::new(2), east: true, north: true, south: true, up: true, west: false}),
      66 => Some(Self {age: NumberFrom0To15Property::new(2), east: true, north: true, south: true, up: false, west: true}),
      67 => Some(Self {age: NumberFrom0To15Property::new(2), east: true, north: true, south: true, up: false, west: false}),
      68 => Some(Self {age: NumberFrom0To15Property::new(2), east: true, north: true, south: false, up: true, west: true}),
      69 => Some(Self {age: NumberFrom0To15Property::new(2), east: true, north: true, south: false, up: true, west: false}),
      70 => Some(Self {age: NumberFrom0To15Property::new(2), east: true, north: true, south: false, up: false, west: true}),
      71 => Some(Self {age: NumberFrom0To15Property::new(2), east: true, north: true, south: false, up: false, west: false}),
      72 => Some(Self {age: NumberFrom0To15Property::new(2), east: true, north: false, south: true, up: true, west: true}),
      73 => Some(Self {age: NumberFrom0To15Property::new(2), east: true, north: false, south: true, up: true, west: false}),
      74 => Some(Self {age: NumberFrom0To15Property::new(2), east: true, north: false, south: true, up: false, west: true}),
      75 => Some(Self {age: NumberFrom0To15Property::new(2), east: true, north: false, south: true, up: false, west: false}),
      76 => Some(Self {age: NumberFrom0To15Property::new(2), east: true, north: false, south: false, up: true, west: true}),
      77 => Some(Self {age: NumberFrom0To15Property::new(2), east: true, north: false, south: false, up: true, west: false}),
      78 => Some(Self {age: NumberFrom0To15Property::new(2), east: true, north: false, south: false, up: false, west: true}),
      79 => Some(Self {age: NumberFrom0To15Property::new(2), east: true, north: false, south: false, up: false, west: false}),
      80 => Some(Self {age: NumberFrom0To15Property::new(2), east: false, north: true, south: true, up: true, west: true}),
      81 => Some(Self {age: NumberFrom0To15Property::new(2), east: false, north: true, south: true, up: true, west: false}),
      82 => Some(Self {age: NumberFrom0To15Property::new(2), east: false, north: true, south: true, up: false, west: true}),
      83 => Some(Self {age: NumberFrom0To15Property::new(2), east: false, north: true, south: true, up: false, west: false}),
      84 => Some(Self {age: NumberFrom0To15Property::new(2), east: false, north: true, south: false, up: true, west: true}),
      85 => Some(Self {age: NumberFrom0To15Property::new(2), east: false, north: true, south: false, up: true, west: false}),
      86 => Some(Self {age: NumberFrom0To15Property::new(2), east: false, north: true, south: false, up: false, west: true}),
      87 => Some(Self {age: NumberFrom0To15Property::new(2), east: false, north: true, south: false, up: false, west: false}),
      88 => Some(Self {age: NumberFrom0To15Property::new(2), east: false, north: false, south: true, up: true, west: true}),
      89 => Some(Self {age: NumberFrom0To15Property::new(2), east: false, north: false, south: true, up: true, west: false}),
      90 => Some(Self {age: NumberFrom0To15Property::new(2), east: false, north: false, south: true, up: false, west: true}),
      91 => Some(Self {age: NumberFrom0To15Property::new(2), east: false, north: false, south: true, up: false, west: false}),
      92 => Some(Self {age: NumberFrom0To15Property::new(2), east: false, north: false, south: false, up: true, west: true}),
      93 => Some(Self {age: NumberFrom0To15Property::new(2), east: false, north: false, south: false, up: true, west: false}),
      94 => Some(Self {age: NumberFrom0To15Property::new(2), east: false, north: false, south: false, up: false, west: true}),
      95 => Some(Self {age: NumberFrom0To15Property::new(2), east: false, north: false, south: false, up: false, west: false}),
      96 => Some(Self {age: NumberFrom0To15Property::new(3), east: true, north: true, south: true, up: true, west: true}),
      97 => Some(Self {age: NumberFrom0To15Property::new(3), east: true, north: true, south: true, up: true, west: false}),
      98 => Some(Self {age: NumberFrom0To15Property::new(3), east: true, north: true, south: true, up: false, west: true}),
      99 => Some(Self {age: NumberFrom0To15Property::new(3), east: true, north: true, south: true, up: false, west: false}),
      100 => Some(Self {age: NumberFrom0To15Property::new(3), east: true, north: true, south: false, up: true, west: true}),
      101 => Some(Self {age: NumberFrom0To15Property::new(3), east: true, north: true, south: false, up: true, west: false}),
      102 => Some(Self {age: NumberFrom0To15Property::new(3), east: true, north: true, south: false, up: false, west: true}),
      103 => Some(Self {age: NumberFrom0To15Property::new(3), east: true, north: true, south: false, up: false, west: false}),
      104 => Some(Self {age: NumberFrom0To15Property::new(3), east: true, north: false, south: true, up: true, west: true}),
      105 => Some(Self {age: NumberFrom0To15Property::new(3), east: true, north: false, south: true, up: true, west: false}),
      106 => Some(Self {age: NumberFrom0To15Property::new(3), east: true, north: false, south: true, up: false, west: true}),
      107 => Some(Self {age: NumberFrom0To15Property::new(3), east: true, north: false, south: true, up: false, west: false}),
      108 => Some(Self {age: NumberFrom0To15Property::new(3), east: true, north: false, south: false, up: true, west: true}),
      109 => Some(Self {age: NumberFrom0To15Property::new(3), east: true, north: false, south: false, up: true, west: false}),
      110 => Some(Self {age: NumberFrom0To15Property::new(3), east: true, north: false, south: false, up: false, west: true}),
      111 => Some(Self {age: NumberFrom0To15Property::new(3), east: true, north: false, south: false, up: false, west: false}),
      112 => Some(Self {age: NumberFrom0To15Property::new(3), east: false, north: true, south: true, up: true, west: true}),
      113 => Some(Self {age: NumberFrom0To15Property::new(3), east: false, north: true, south: true, up: true, west: false}),
      114 => Some(Self {age: NumberFrom0To15Property::new(3), east: false, north: true, south: true, up: false, west: true}),
      115 => Some(Self {age: NumberFrom0To15Property::new(3), east: false, north: true, south: true, up: false, west: false}),
      116 => Some(Self {age: NumberFrom0To15Property::new(3), east: false, north: true, south: false, up: true, west: true}),
      117 => Some(Self {age: NumberFrom0To15Property::new(3), east: false, north: true, south: false, up: true, west: false}),
      118 => Some(Self {age: NumberFrom0To15Property::new(3), east: false, north: true, south: false, up: false, west: true}),
      119 => Some(Self {age: NumberFrom0To15Property::new(3), east: false, north: true, south: false, up: false, west: false}),
      120 => Some(Self {age: NumberFrom0To15Property::new(3), east: false, north: false, south: true, up: true, west: true}),
      121 => Some(Self {age: NumberFrom0To15Property::new(3), east: false, north: false, south: true, up: true, west: false}),
      122 => Some(Self {age: NumberFrom0To15Property::new(3), east: false, north: false, south: true, up: false, west: true}),
      123 => Some(Self {age: NumberFrom0To15Property::new(3), east: false, north: false, south: true, up: false, west: false}),
      124 => Some(Self {age: NumberFrom0To15Property::new(3), east: false, north: false, south: false, up: true, west: true}),
      125 => Some(Self {age: NumberFrom0To15Property::new(3), east: false, north: false, south: false, up: true, west: false}),
      126 => Some(Self {age: NumberFrom0To15Property::new(3), east: false, north: false, south: false, up: false, west: true}),
      127 => Some(Self {age: NumberFrom0To15Property::new(3), east: false, north: false, south: false, up: false, west: false}),
      128 => Some(Self {age: NumberFrom0To15Property::new(4), east: true, north: true, south: true, up: true, west: true}),
      129 => Some(Self {age: NumberFrom0To15Property::new(4), east: true, north: true, south: true, up: true, west: false}),
      130 => Some(Self {age: NumberFrom0To15Property::new(4), east: true, north: true, south: true, up: false, west: true}),
      131 => Some(Self {age: NumberFrom0To15Property::new(4), east: true, north: true, south: true, up: false, west: false}),
      132 => Some(Self {age: NumberFrom0To15Property::new(4), east: true, north: true, south: false, up: true, west: true}),
      133 => Some(Self {age: NumberFrom0To15Property::new(4), east: true, north: true, south: false, up: true, west: false}),
      134 => Some(Self {age: NumberFrom0To15Property::new(4), east: true, north: true, south: false, up: false, west: true}),
      135 => Some(Self {age: NumberFrom0To15Property::new(4), east: true, north: true, south: false, up: false, west: false}),
      136 => Some(Self {age: NumberFrom0To15Property::new(4), east: true, north: false, south: true, up: true, west: true}),
      137 => Some(Self {age: NumberFrom0To15Property::new(4), east: true, north: false, south: true, up: true, west: false}),
      138 => Some(Self {age: NumberFrom0To15Property::new(4), east: true, north: false, south: true, up: false, west: true}),
      139 => Some(Self {age: NumberFrom0To15Property::new(4), east: true, north: false, south: true, up: false, west: false}),
      140 => Some(Self {age: NumberFrom0To15Property::new(4), east: true, north: false, south: false, up: true, west: true}),
      141 => Some(Self {age: NumberFrom0To15Property::new(4), east: true, north: false, south: false, up: true, west: false}),
      142 => Some(Self {age: NumberFrom0To15Property::new(4), east: true, north: false, south: false, up: false, west: true}),
      143 => Some(Self {age: NumberFrom0To15Property::new(4), east: true, north: false, south: false, up: false, west: false}),
      144 => Some(Self {age: NumberFrom0To15Property::new(4), east: false, north: true, south: true, up: true, west: true}),
      145 => Some(Self {age: NumberFrom0To15Property::new(4), east: false, north: true, south: true, up: true, west: false}),
      146 => Some(Self {age: NumberFrom0To15Property::new(4), east: false, north: true, south: true, up: false, west: true}),
      147 => Some(Self {age: NumberFrom0To15Property::new(4), east: false, north: true, south: true, up: false, west: false}),
      148 => Some(Self {age: NumberFrom0To15Property::new(4), east: false, north: true, south: false, up: true, west: true}),
      149 => Some(Self {age: NumberFrom0To15Property::new(4), east: false, north: true, south: false, up: true, west: false}),
      150 => Some(Self {age: NumberFrom0To15Property::new(4), east: false, north: true, south: false, up: false, west: true}),
      151 => Some(Self {age: NumberFrom0To15Property::new(4), east: false, north: true, south: false, up: false, west: false}),
      152 => Some(Self {age: NumberFrom0To15Property::new(4), east: false, north: false, south: true, up: true, west: true}),
      153 => Some(Self {age: NumberFrom0To15Property::new(4), east: false, north: false, south: true, up: true, west: false}),
      154 => Some(Self {age: NumberFrom0To15Property::new(4), east: false, north: false, south: true, up: false, west: true}),
      155 => Some(Self {age: NumberFrom0To15Property::new(4), east: false, north: false, south: true, up: false, west: false}),
      156 => Some(Self {age: NumberFrom0To15Property::new(4), east: false, north: false, south: false, up: true, west: true}),
      157 => Some(Self {age: NumberFrom0To15Property::new(4), east: false, north: false, south: false, up: true, west: false}),
      158 => Some(Self {age: NumberFrom0To15Property::new(4), east: false, north: false, south: false, up: false, west: true}),
      159 => Some(Self {age: NumberFrom0To15Property::new(4), east: false, north: false, south: false, up: false, west: false}),
      160 => Some(Self {age: NumberFrom0To15Property::new(5), east: true, north: true, south: true, up: true, west: true}),
      161 => Some(Self {age: NumberFrom0To15Property::new(5), east: true, north: true, south: true, up: true, west: false}),
      162 => Some(Self {age: NumberFrom0To15Property::new(5), east: true, north: true, south: true, up: false, west: true}),
      163 => Some(Self {age: NumberFrom0To15Property::new(5), east: true, north: true, south: true, up: false, west: false}),
      164 => Some(Self {age: NumberFrom0To15Property::new(5), east: true, north: true, south: false, up: true, west: true}),
      165 => Some(Self {age: NumberFrom0To15Property::new(5), east: true, north: true, south: false, up: true, west: false}),
      166 => Some(Self {age: NumberFrom0To15Property::new(5), east: true, north: true, south: false, up: false, west: true}),
      167 => Some(Self {age: NumberFrom0To15Property::new(5), east: true, north: true, south: false, up: false, west: false}),
      168 => Some(Self {age: NumberFrom0To15Property::new(5), east: true, north: false, south: true, up: true, west: true}),
      169 => Some(Self {age: NumberFrom0To15Property::new(5), east: true, north: false, south: true, up: true, west: false}),
      170 => Some(Self {age: NumberFrom0To15Property::new(5), east: true, north: false, south: true, up: false, west: true}),
      171 => Some(Self {age: NumberFrom0To15Property::new(5), east: true, north: false, south: true, up: false, west: false}),
      172 => Some(Self {age: NumberFrom0To15Property::new(5), east: true, north: false, south: false, up: true, west: true}),
      173 => Some(Self {age: NumberFrom0To15Property::new(5), east: true, north: false, south: false, up: true, west: false}),
      174 => Some(Self {age: NumberFrom0To15Property::new(5), east: true, north: false, south: false, up: false, west: true}),
      175 => Some(Self {age: NumberFrom0To15Property::new(5), east: true, north: false, south: false, up: false, west: false}),
      176 => Some(Self {age: NumberFrom0To15Property::new(5), east: false, north: true, south: true, up: true, west: true}),
      177 => Some(Self {age: NumberFrom0To15Property::new(5), east: false, north: true, south: true, up: true, west: false}),
      178 => Some(Self {age: NumberFrom0To15Property::new(5), east: false, north: true, south: true, up: false, west: true}),
      179 => Some(Self {age: NumberFrom0To15Property::new(5), east: false, north: true, south: true, up: false, west: false}),
      180 => Some(Self {age: NumberFrom0To15Property::new(5), east: false, north: true, south: false, up: true, west: true}),
      181 => Some(Self {age: NumberFrom0To15Property::new(5), east: false, north: true, south: false, up: true, west: false}),
      182 => Some(Self {age: NumberFrom0To15Property::new(5), east: false, north: true, south: false, up: false, west: true}),
      183 => Some(Self {age: NumberFrom0To15Property::new(5), east: false, north: true, south: false, up: false, west: false}),
      184 => Some(Self {age: NumberFrom0To15Property::new(5), east: false, north: false, south: true, up: true, west: true}),
      185 => Some(Self {age: NumberFrom0To15Property::new(5), east: false, north: false, south: true, up: true, west: false}),
      186 => Some(Self {age: NumberFrom0To15Property::new(5), east: false, north: false, south: true, up: false, west: true}),
      187 => Some(Self {age: NumberFrom0To15Property::new(5), east: false, north: false, south: true, up: false, west: false}),
      188 => Some(Self {age: NumberFrom0To15Property::new(5), east: false, north: false, south: false, up: true, west: true}),
      189 => Some(Self {age: NumberFrom0To15Property::new(5), east: false, north: false, south: false, up: true, west: false}),
      190 => Some(Self {age: NumberFrom0To15Property::new(5), east: false, north: false, south: false, up: false, west: true}),
      191 => Some(Self {age: NumberFrom0To15Property::new(5), east: false, north: false, south: false, up: false, west: false}),
      192 => Some(Self {age: NumberFrom0To15Property::new(6), east: true, north: true, south: true, up: true, west: true}),
      193 => Some(Self {age: NumberFrom0To15Property::new(6), east: true, north: true, south: true, up: true, west: false}),
      194 => Some(Self {age: NumberFrom0To15Property::new(6), east: true, north: true, south: true, up: false, west: true}),
      195 => Some(Self {age: NumberFrom0To15Property::new(6), east: true, north: true, south: true, up: false, west: false}),
      196 => Some(Self {age: NumberFrom0To15Property::new(6), east: true, north: true, south: false, up: true, west: true}),
      197 => Some(Self {age: NumberFrom0To15Property::new(6), east: true, north: true, south: false, up: true, west: false}),
      198 => Some(Self {age: NumberFrom0To15Property::new(6), east: true, north: true, south: false, up: false, west: true}),
      199 => Some(Self {age: NumberFrom0To15Property::new(6), east: true, north: true, south: false, up: false, west: false}),
      200 => Some(Self {age: NumberFrom0To15Property::new(6), east: true, north: false, south: true, up: true, west: true}),
      201 => Some(Self {age: NumberFrom0To15Property::new(6), east: true, north: false, south: true, up: true, west: false}),
      202 => Some(Self {age: NumberFrom0To15Property::new(6), east: true, north: false, south: true, up: false, west: true}),
      203 => Some(Self {age: NumberFrom0To15Property::new(6), east: true, north: false, south: true, up: false, west: false}),
      204 => Some(Self {age: NumberFrom0To15Property::new(6), east: true, north: false, south: false, up: true, west: true}),
      205 => Some(Self {age: NumberFrom0To15Property::new(6), east: true, north: false, south: false, up: true, west: false}),
      206 => Some(Self {age: NumberFrom0To15Property::new(6), east: true, north: false, south: false, up: false, west: true}),
      207 => Some(Self {age: NumberFrom0To15Property::new(6), east: true, north: false, south: false, up: false, west: false}),
      208 => Some(Self {age: NumberFrom0To15Property::new(6), east: false, north: true, south: true, up: true, west: true}),
      209 => Some(Self {age: NumberFrom0To15Property::new(6), east: false, north: true, south: true, up: true, west: false}),
      210 => Some(Self {age: NumberFrom0To15Property::new(6), east: false, north: true, south: true, up: false, west: true}),
      211 => Some(Self {age: NumberFrom0To15Property::new(6), east: false, north: true, south: true, up: false, west: false}),
      212 => Some(Self {age: NumberFrom0To15Property::new(6), east: false, north: true, south: false, up: true, west: true}),
      213 => Some(Self {age: NumberFrom0To15Property::new(6), east: false, north: true, south: false, up: true, west: false}),
      214 => Some(Self {age: NumberFrom0To15Property::new(6), east: false, north: true, south: false, up: false, west: true}),
      215 => Some(Self {age: NumberFrom0To15Property::new(6), east: false, north: true, south: false, up: false, west: false}),
      216 => Some(Self {age: NumberFrom0To15Property::new(6), east: false, north: false, south: true, up: true, west: true}),
      217 => Some(Self {age: NumberFrom0To15Property::new(6), east: false, north: false, south: true, up: true, west: false}),
      218 => Some(Self {age: NumberFrom0To15Property::new(6), east: false, north: false, south: true, up: false, west: true}),
      219 => Some(Self {age: NumberFrom0To15Property::new(6), east: false, north: false, south: true, up: false, west: false}),
      220 => Some(Self {age: NumberFrom0To15Property::new(6), east: false, north: false, south: false, up: true, west: true}),
      221 => Some(Self {age: NumberFrom0To15Property::new(6), east: false, north: false, south: false, up: true, west: false}),
      222 => Some(Self {age: NumberFrom0To15Property::new(6), east: false, north: false, south: false, up: false, west: true}),
      223 => Some(Self {age: NumberFrom0To15Property::new(6), east: false, north: false, south: false, up: false, west: false}),
      224 => Some(Self {age: NumberFrom0To15Property::new(7), east: true, north: true, south: true, up: true, west: true}),
      225 => Some(Self {age: NumberFrom0To15Property::new(7), east: true, north: true, south: true, up: true, west: false}),
      226 => Some(Self {age: NumberFrom0To15Property::new(7), east: true, north: true, south: true, up: false, west: true}),
      227 => Some(Self {age: NumberFrom0To15Property::new(7), east: true, north: true, south: true, up: false, west: false}),
      228 => Some(Self {age: NumberFrom0To15Property::new(7), east: true, north: true, south: false, up: true, west: true}),
      229 => Some(Self {age: NumberFrom0To15Property::new(7), east: true, north: true, south: false, up: true, west: false}),
      230 => Some(Self {age: NumberFrom0To15Property::new(7), east: true, north: true, south: false, up: false, west: true}),
      231 => Some(Self {age: NumberFrom0To15Property::new(7), east: true, north: true, south: false, up: false, west: false}),
      232 => Some(Self {age: NumberFrom0To15Property::new(7), east: true, north: false, south: true, up: true, west: true}),
      233 => Some(Self {age: NumberFrom0To15Property::new(7), east: true, north: false, south: true, up: true, west: false}),
      234 => Some(Self {age: NumberFrom0To15Property::new(7), east: true, north: false, south: true, up: false, west: true}),
      235 => Some(Self {age: NumberFrom0To15Property::new(7), east: true, north: false, south: true, up: false, west: false}),
      236 => Some(Self {age: NumberFrom0To15Property::new(7), east: true, north: false, south: false, up: true, west: true}),
      237 => Some(Self {age: NumberFrom0To15Property::new(7), east: true, north: false, south: false, up: true, west: false}),
      238 => Some(Self {age: NumberFrom0To15Property::new(7), east: true, north: false, south: false, up: false, west: true}),
      239 => Some(Self {age: NumberFrom0To15Property::new(7), east: true, north: false, south: false, up: false, west: false}),
      240 => Some(Self {age: NumberFrom0To15Property::new(7), east: false, north: true, south: true, up: true, west: true}),
      241 => Some(Self {age: NumberFrom0To15Property::new(7), east: false, north: true, south: true, up: true, west: false}),
      242 => Some(Self {age: NumberFrom0To15Property::new(7), east: false, north: true, south: true, up: false, west: true}),
      243 => Some(Self {age: NumberFrom0To15Property::new(7), east: false, north: true, south: true, up: false, west: false}),
      244 => Some(Self {age: NumberFrom0To15Property::new(7), east: false, north: true, south: false, up: true, west: true}),
      245 => Some(Self {age: NumberFrom0To15Property::new(7), east: false, north: true, south: false, up: true, west: false}),
      246 => Some(Self {age: NumberFrom0To15Property::new(7), east: false, north: true, south: false, up: false, west: true}),
      247 => Some(Self {age: NumberFrom0To15Property::new(7), east: false, north: true, south: false, up: false, west: false}),
      248 => Some(Self {age: NumberFrom0To15Property::new(7), east: false, north: false, south: true, up: true, west: true}),
      249 => Some(Self {age: NumberFrom0To15Property::new(7), east: false, north: false, south: true, up: true, west: false}),
      250 => Some(Self {age: NumberFrom0To15Property::new(7), east: false, north: false, south: true, up: false, west: true}),
      251 => Some(Self {age: NumberFrom0To15Property::new(7), east: false, north: false, south: true, up: false, west: false}),
      252 => Some(Self {age: NumberFrom0To15Property::new(7), east: false, north: false, south: false, up: true, west: true}),
      253 => Some(Self {age: NumberFrom0To15Property::new(7), east: false, north: false, south: false, up: true, west: false}),
      254 => Some(Self {age: NumberFrom0To15Property::new(7), east: false, north: false, south: false, up: false, west: true}),
      255 => Some(Self {age: NumberFrom0To15Property::new(7), east: false, north: false, south: false, up: false, west: false}),
      256 => Some(Self {age: NumberFrom0To15Property::new(8), east: true, north: true, south: true, up: true, west: true}),
      257 => Some(Self {age: NumberFrom0To15Property::new(8), east: true, north: true, south: true, up: true, west: false}),
      258 => Some(Self {age: NumberFrom0To15Property::new(8), east: true, north: true, south: true, up: false, west: true}),
      259 => Some(Self {age: NumberFrom0To15Property::new(8), east: true, north: true, south: true, up: false, west: false}),
      260 => Some(Self {age: NumberFrom0To15Property::new(8), east: true, north: true, south: false, up: true, west: true}),
      261 => Some(Self {age: NumberFrom0To15Property::new(8), east: true, north: true, south: false, up: true, west: false}),
      262 => Some(Self {age: NumberFrom0To15Property::new(8), east: true, north: true, south: false, up: false, west: true}),
      263 => Some(Self {age: NumberFrom0To15Property::new(8), east: true, north: true, south: false, up: false, west: false}),
      264 => Some(Self {age: NumberFrom0To15Property::new(8), east: true, north: false, south: true, up: true, west: true}),
      265 => Some(Self {age: NumberFrom0To15Property::new(8), east: true, north: false, south: true, up: true, west: false}),
      266 => Some(Self {age: NumberFrom0To15Property::new(8), east: true, north: false, south: true, up: false, west: true}),
      267 => Some(Self {age: NumberFrom0To15Property::new(8), east: true, north: false, south: true, up: false, west: false}),
      268 => Some(Self {age: NumberFrom0To15Property::new(8), east: true, north: false, south: false, up: true, west: true}),
      269 => Some(Self {age: NumberFrom0To15Property::new(8), east: true, north: false, south: false, up: true, west: false}),
      270 => Some(Self {age: NumberFrom0To15Property::new(8), east: true, north: false, south: false, up: false, west: true}),
      271 => Some(Self {age: NumberFrom0To15Property::new(8), east: true, north: false, south: false, up: false, west: false}),
      272 => Some(Self {age: NumberFrom0To15Property::new(8), east: false, north: true, south: true, up: true, west: true}),
      273 => Some(Self {age: NumberFrom0To15Property::new(8), east: false, north: true, south: true, up: true, west: false}),
      274 => Some(Self {age: NumberFrom0To15Property::new(8), east: false, north: true, south: true, up: false, west: true}),
      275 => Some(Self {age: NumberFrom0To15Property::new(8), east: false, north: true, south: true, up: false, west: false}),
      276 => Some(Self {age: NumberFrom0To15Property::new(8), east: false, north: true, south: false, up: true, west: true}),
      277 => Some(Self {age: NumberFrom0To15Property::new(8), east: false, north: true, south: false, up: true, west: false}),
      278 => Some(Self {age: NumberFrom0To15Property::new(8), east: false, north: true, south: false, up: false, west: true}),
      279 => Some(Self {age: NumberFrom0To15Property::new(8), east: false, north: true, south: false, up: false, west: false}),
      280 => Some(Self {age: NumberFrom0To15Property::new(8), east: false, north: false, south: true, up: true, west: true}),
      281 => Some(Self {age: NumberFrom0To15Property::new(8), east: false, north: false, south: true, up: true, west: false}),
      282 => Some(Self {age: NumberFrom0To15Property::new(8), east: false, north: false, south: true, up: false, west: true}),
      283 => Some(Self {age: NumberFrom0To15Property::new(8), east: false, north: false, south: true, up: false, west: false}),
      284 => Some(Self {age: NumberFrom0To15Property::new(8), east: false, north: false, south: false, up: true, west: true}),
      285 => Some(Self {age: NumberFrom0To15Property::new(8), east: false, north: false, south: false, up: true, west: false}),
      286 => Some(Self {age: NumberFrom0To15Property::new(8), east: false, north: false, south: false, up: false, west: true}),
      287 => Some(Self {age: NumberFrom0To15Property::new(8), east: false, north: false, south: false, up: false, west: false}),
      288 => Some(Self {age: NumberFrom0To15Property::new(9), east: true, north: true, south: true, up: true, west: true}),
      289 => Some(Self {age: NumberFrom0To15Property::new(9), east: true, north: true, south: true, up: true, west: false}),
      290 => Some(Self {age: NumberFrom0To15Property::new(9), east: true, north: true, south: true, up: false, west: true}),
      291 => Some(Self {age: NumberFrom0To15Property::new(9), east: true, north: true, south: true, up: false, west: false}),
      292 => Some(Self {age: NumberFrom0To15Property::new(9), east: true, north: true, south: false, up: true, west: true}),
      293 => Some(Self {age: NumberFrom0To15Property::new(9), east: true, north: true, south: false, up: true, west: false}),
      294 => Some(Self {age: NumberFrom0To15Property::new(9), east: true, north: true, south: false, up: false, west: true}),
      295 => Some(Self {age: NumberFrom0To15Property::new(9), east: true, north: true, south: false, up: false, west: false}),
      296 => Some(Self {age: NumberFrom0To15Property::new(9), east: true, north: false, south: true, up: true, west: true}),
      297 => Some(Self {age: NumberFrom0To15Property::new(9), east: true, north: false, south: true, up: true, west: false}),
      298 => Some(Self {age: NumberFrom0To15Property::new(9), east: true, north: false, south: true, up: false, west: true}),
      299 => Some(Self {age: NumberFrom0To15Property::new(9), east: true, north: false, south: true, up: false, west: false}),
      300 => Some(Self {age: NumberFrom0To15Property::new(9), east: true, north: false, south: false, up: true, west: true}),
      301 => Some(Self {age: NumberFrom0To15Property::new(9), east: true, north: false, south: false, up: true, west: false}),
      302 => Some(Self {age: NumberFrom0To15Property::new(9), east: true, north: false, south: false, up: false, west: true}),
      303 => Some(Self {age: NumberFrom0To15Property::new(9), east: true, north: false, south: false, up: false, west: false}),
      304 => Some(Self {age: NumberFrom0To15Property::new(9), east: false, north: true, south: true, up: true, west: true}),
      305 => Some(Self {age: NumberFrom0To15Property::new(9), east: false, north: true, south: true, up: true, west: false}),
      306 => Some(Self {age: NumberFrom0To15Property::new(9), east: false, north: true, south: true, up: false, west: true}),
      307 => Some(Self {age: NumberFrom0To15Property::new(9), east: false, north: true, south: true, up: false, west: false}),
      308 => Some(Self {age: NumberFrom0To15Property::new(9), east: false, north: true, south: false, up: true, west: true}),
      309 => Some(Self {age: NumberFrom0To15Property::new(9), east: false, north: true, south: false, up: true, west: false}),
      310 => Some(Self {age: NumberFrom0To15Property::new(9), east: false, north: true, south: false, up: false, west: true}),
      311 => Some(Self {age: NumberFrom0To15Property::new(9), east: false, north: true, south: false, up: false, west: false}),
      312 => Some(Self {age: NumberFrom0To15Property::new(9), east: false, north: false, south: true, up: true, west: true}),
      313 => Some(Self {age: NumberFrom0To15Property::new(9), east: false, north: false, south: true, up: true, west: false}),
      314 => Some(Self {age: NumberFrom0To15Property::new(9), east: false, north: false, south: true, up: false, west: true}),
      315 => Some(Self {age: NumberFrom0To15Property::new(9), east: false, north: false, south: true, up: false, west: false}),
      316 => Some(Self {age: NumberFrom0To15Property::new(9), east: false, north: false, south: false, up: true, west: true}),
      317 => Some(Self {age: NumberFrom0To15Property::new(9), east: false, north: false, south: false, up: true, west: false}),
      318 => Some(Self {age: NumberFrom0To15Property::new(9), east: false, north: false, south: false, up: false, west: true}),
      319 => Some(Self {age: NumberFrom0To15Property::new(9), east: false, north: false, south: false, up: false, west: false}),
      320 => Some(Self {age: NumberFrom0To15Property::new(10), east: true, north: true, south: true, up: true, west: true}),
      321 => Some(Self {age: NumberFrom0To15Property::new(10), east: true, north: true, south: true, up: true, west: false}),
      322 => Some(Self {age: NumberFrom0To15Property::new(10), east: true, north: true, south: true, up: false, west: true}),
      323 => Some(Self {age: NumberFrom0To15Property::new(10), east: true, north: true, south: true, up: false, west: false}),
      324 => Some(Self {age: NumberFrom0To15Property::new(10), east: true, north: true, south: false, up: true, west: true}),
      325 => Some(Self {age: NumberFrom0To15Property::new(10), east: true, north: true, south: false, up: true, west: false}),
      326 => Some(Self {age: NumberFrom0To15Property::new(10), east: true, north: true, south: false, up: false, west: true}),
      327 => Some(Self {age: NumberFrom0To15Property::new(10), east: true, north: true, south: false, up: false, west: false}),
      328 => Some(Self {age: NumberFrom0To15Property::new(10), east: true, north: false, south: true, up: true, west: true}),
      329 => Some(Self {age: NumberFrom0To15Property::new(10), east: true, north: false, south: true, up: true, west: false}),
      330 => Some(Self {age: NumberFrom0To15Property::new(10), east: true, north: false, south: true, up: false, west: true}),
      331 => Some(Self {age: NumberFrom0To15Property::new(10), east: true, north: false, south: true, up: false, west: false}),
      332 => Some(Self {age: NumberFrom0To15Property::new(10), east: true, north: false, south: false, up: true, west: true}),
      333 => Some(Self {age: NumberFrom0To15Property::new(10), east: true, north: false, south: false, up: true, west: false}),
      334 => Some(Self {age: NumberFrom0To15Property::new(10), east: true, north: false, south: false, up: false, west: true}),
      335 => Some(Self {age: NumberFrom0To15Property::new(10), east: true, north: false, south: false, up: false, west: false}),
      336 => Some(Self {age: NumberFrom0To15Property::new(10), east: false, north: true, south: true, up: true, west: true}),
      337 => Some(Self {age: NumberFrom0To15Property::new(10), east: false, north: true, south: true, up: true, west: false}),
      338 => Some(Self {age: NumberFrom0To15Property::new(10), east: false, north: true, south: true, up: false, west: true}),
      339 => Some(Self {age: NumberFrom0To15Property::new(10), east: false, north: true, south: true, up: false, west: false}),
      340 => Some(Self {age: NumberFrom0To15Property::new(10), east: false, north: true, south: false, up: true, west: true}),
      341 => Some(Self {age: NumberFrom0To15Property::new(10), east: false, north: true, south: false, up: true, west: false}),
      342 => Some(Self {age: NumberFrom0To15Property::new(10), east: false, north: true, south: false, up: false, west: true}),
      343 => Some(Self {age: NumberFrom0To15Property::new(10), east: false, north: true, south: false, up: false, west: false}),
      344 => Some(Self {age: NumberFrom0To15Property::new(10), east: false, north: false, south: true, up: true, west: true}),
      345 => Some(Self {age: NumberFrom0To15Property::new(10), east: false, north: false, south: true, up: true, west: false}),
      346 => Some(Self {age: NumberFrom0To15Property::new(10), east: false, north: false, south: true, up: false, west: true}),
      347 => Some(Self {age: NumberFrom0To15Property::new(10), east: false, north: false, south: true, up: false, west: false}),
      348 => Some(Self {age: NumberFrom0To15Property::new(10), east: false, north: false, south: false, up: true, west: true}),
      349 => Some(Self {age: NumberFrom0To15Property::new(10), east: false, north: false, south: false, up: true, west: false}),
      350 => Some(Self {age: NumberFrom0To15Property::new(10), east: false, north: false, south: false, up: false, west: true}),
      351 => Some(Self {age: NumberFrom0To15Property::new(10), east: false, north: false, south: false, up: false, west: false}),
      352 => Some(Self {age: NumberFrom0To15Property::new(11), east: true, north: true, south: true, up: true, west: true}),
      353 => Some(Self {age: NumberFrom0To15Property::new(11), east: true, north: true, south: true, up: true, west: false}),
      354 => Some(Self {age: NumberFrom0To15Property::new(11), east: true, north: true, south: true, up: false, west: true}),
      355 => Some(Self {age: NumberFrom0To15Property::new(11), east: true, north: true, south: true, up: false, west: false}),
      356 => Some(Self {age: NumberFrom0To15Property::new(11), east: true, north: true, south: false, up: true, west: true}),
      357 => Some(Self {age: NumberFrom0To15Property::new(11), east: true, north: true, south: false, up: true, west: false}),
      358 => Some(Self {age: NumberFrom0To15Property::new(11), east: true, north: true, south: false, up: false, west: true}),
      359 => Some(Self {age: NumberFrom0To15Property::new(11), east: true, north: true, south: false, up: false, west: false}),
      360 => Some(Self {age: NumberFrom0To15Property::new(11), east: true, north: false, south: true, up: true, west: true}),
      361 => Some(Self {age: NumberFrom0To15Property::new(11), east: true, north: false, south: true, up: true, west: false}),
      362 => Some(Self {age: NumberFrom0To15Property::new(11), east: true, north: false, south: true, up: false, west: true}),
      363 => Some(Self {age: NumberFrom0To15Property::new(11), east: true, north: false, south: true, up: false, west: false}),
      364 => Some(Self {age: NumberFrom0To15Property::new(11), east: true, north: false, south: false, up: true, west: true}),
      365 => Some(Self {age: NumberFrom0To15Property::new(11), east: true, north: false, south: false, up: true, west: false}),
      366 => Some(Self {age: NumberFrom0To15Property::new(11), east: true, north: false, south: false, up: false, west: true}),
      367 => Some(Self {age: NumberFrom0To15Property::new(11), east: true, north: false, south: false, up: false, west: false}),
      368 => Some(Self {age: NumberFrom0To15Property::new(11), east: false, north: true, south: true, up: true, west: true}),
      369 => Some(Self {age: NumberFrom0To15Property::new(11), east: false, north: true, south: true, up: true, west: false}),
      370 => Some(Self {age: NumberFrom0To15Property::new(11), east: false, north: true, south: true, up: false, west: true}),
      371 => Some(Self {age: NumberFrom0To15Property::new(11), east: false, north: true, south: true, up: false, west: false}),
      372 => Some(Self {age: NumberFrom0To15Property::new(11), east: false, north: true, south: false, up: true, west: true}),
      373 => Some(Self {age: NumberFrom0To15Property::new(11), east: false, north: true, south: false, up: true, west: false}),
      374 => Some(Self {age: NumberFrom0To15Property::new(11), east: false, north: true, south: false, up: false, west: true}),
      375 => Some(Self {age: NumberFrom0To15Property::new(11), east: false, north: true, south: false, up: false, west: false}),
      376 => Some(Self {age: NumberFrom0To15Property::new(11), east: false, north: false, south: true, up: true, west: true}),
      377 => Some(Self {age: NumberFrom0To15Property::new(11), east: false, north: false, south: true, up: true, west: false}),
      378 => Some(Self {age: NumberFrom0To15Property::new(11), east: false, north: false, south: true, up: false, west: true}),
      379 => Some(Self {age: NumberFrom0To15Property::new(11), east: false, north: false, south: true, up: false, west: false}),
      380 => Some(Self {age: NumberFrom0To15Property::new(11), east: false, north: false, south: false, up: true, west: true}),
      381 => Some(Self {age: NumberFrom0To15Property::new(11), east: false, north: false, south: false, up: true, west: false}),
      382 => Some(Self {age: NumberFrom0To15Property::new(11), east: false, north: false, south: false, up: false, west: true}),
      383 => Some(Self {age: NumberFrom0To15Property::new(11), east: false, north: false, south: false, up: false, west: false}),
      384 => Some(Self {age: NumberFrom0To15Property::new(12), east: true, north: true, south: true, up: true, west: true}),
      385 => Some(Self {age: NumberFrom0To15Property::new(12), east: true, north: true, south: true, up: true, west: false}),
      386 => Some(Self {age: NumberFrom0To15Property::new(12), east: true, north: true, south: true, up: false, west: true}),
      387 => Some(Self {age: NumberFrom0To15Property::new(12), east: true, north: true, south: true, up: false, west: false}),
      388 => Some(Self {age: NumberFrom0To15Property::new(12), east: true, north: true, south: false, up: true, west: true}),
      389 => Some(Self {age: NumberFrom0To15Property::new(12), east: true, north: true, south: false, up: true, west: false}),
      390 => Some(Self {age: NumberFrom0To15Property::new(12), east: true, north: true, south: false, up: false, west: true}),
      391 => Some(Self {age: NumberFrom0To15Property::new(12), east: true, north: true, south: false, up: false, west: false}),
      392 => Some(Self {age: NumberFrom0To15Property::new(12), east: true, north: false, south: true, up: true, west: true}),
      393 => Some(Self {age: NumberFrom0To15Property::new(12), east: true, north: false, south: true, up: true, west: false}),
      394 => Some(Self {age: NumberFrom0To15Property::new(12), east: true, north: false, south: true, up: false, west: true}),
      395 => Some(Self {age: NumberFrom0To15Property::new(12), east: true, north: false, south: true, up: false, west: false}),
      396 => Some(Self {age: NumberFrom0To15Property::new(12), east: true, north: false, south: false, up: true, west: true}),
      397 => Some(Self {age: NumberFrom0To15Property::new(12), east: true, north: false, south: false, up: true, west: false}),
      398 => Some(Self {age: NumberFrom0To15Property::new(12), east: true, north: false, south: false, up: false, west: true}),
      399 => Some(Self {age: NumberFrom0To15Property::new(12), east: true, north: false, south: false, up: false, west: false}),
      400 => Some(Self {age: NumberFrom0To15Property::new(12), east: false, north: true, south: true, up: true, west: true}),
      401 => Some(Self {age: NumberFrom0To15Property::new(12), east: false, north: true, south: true, up: true, west: false}),
      402 => Some(Self {age: NumberFrom0To15Property::new(12), east: false, north: true, south: true, up: false, west: true}),
      403 => Some(Self {age: NumberFrom0To15Property::new(12), east: false, north: true, south: true, up: false, west: false}),
      404 => Some(Self {age: NumberFrom0To15Property::new(12), east: false, north: true, south: false, up: true, west: true}),
      405 => Some(Self {age: NumberFrom0To15Property::new(12), east: false, north: true, south: false, up: true, west: false}),
      406 => Some(Self {age: NumberFrom0To15Property::new(12), east: false, north: true, south: false, up: false, west: true}),
      407 => Some(Self {age: NumberFrom0To15Property::new(12), east: false, north: true, south: false, up: false, west: false}),
      408 => Some(Self {age: NumberFrom0To15Property::new(12), east: false, north: false, south: true, up: true, west: true}),
      409 => Some(Self {age: NumberFrom0To15Property::new(12), east: false, north: false, south: true, up: true, west: false}),
      410 => Some(Self {age: NumberFrom0To15Property::new(12), east: false, north: false, south: true, up: false, west: true}),
      411 => Some(Self {age: NumberFrom0To15Property::new(12), east: false, north: false, south: true, up: false, west: false}),
      412 => Some(Self {age: NumberFrom0To15Property::new(12), east: false, north: false, south: false, up: true, west: true}),
      413 => Some(Self {age: NumberFrom0To15Property::new(12), east: false, north: false, south: false, up: true, west: false}),
      414 => Some(Self {age: NumberFrom0To15Property::new(12), east: false, north: false, south: false, up: false, west: true}),
      415 => Some(Self {age: NumberFrom0To15Property::new(12), east: false, north: false, south: false, up: false, west: false}),
      416 => Some(Self {age: NumberFrom0To15Property::new(13), east: true, north: true, south: true, up: true, west: true}),
      417 => Some(Self {age: NumberFrom0To15Property::new(13), east: true, north: true, south: true, up: true, west: false}),
      418 => Some(Self {age: NumberFrom0To15Property::new(13), east: true, north: true, south: true, up: false, west: true}),
      419 => Some(Self {age: NumberFrom0To15Property::new(13), east: true, north: true, south: true, up: false, west: false}),
      420 => Some(Self {age: NumberFrom0To15Property::new(13), east: true, north: true, south: false, up: true, west: true}),
      421 => Some(Self {age: NumberFrom0To15Property::new(13), east: true, north: true, south: false, up: true, west: false}),
      422 => Some(Self {age: NumberFrom0To15Property::new(13), east: true, north: true, south: false, up: false, west: true}),
      423 => Some(Self {age: NumberFrom0To15Property::new(13), east: true, north: true, south: false, up: false, west: false}),
      424 => Some(Self {age: NumberFrom0To15Property::new(13), east: true, north: false, south: true, up: true, west: true}),
      425 => Some(Self {age: NumberFrom0To15Property::new(13), east: true, north: false, south: true, up: true, west: false}),
      426 => Some(Self {age: NumberFrom0To15Property::new(13), east: true, north: false, south: true, up: false, west: true}),
      427 => Some(Self {age: NumberFrom0To15Property::new(13), east: true, north: false, south: true, up: false, west: false}),
      428 => Some(Self {age: NumberFrom0To15Property::new(13), east: true, north: false, south: false, up: true, west: true}),
      429 => Some(Self {age: NumberFrom0To15Property::new(13), east: true, north: false, south: false, up: true, west: false}),
      430 => Some(Self {age: NumberFrom0To15Property::new(13), east: true, north: false, south: false, up: false, west: true}),
      431 => Some(Self {age: NumberFrom0To15Property::new(13), east: true, north: false, south: false, up: false, west: false}),
      432 => Some(Self {age: NumberFrom0To15Property::new(13), east: false, north: true, south: true, up: true, west: true}),
      433 => Some(Self {age: NumberFrom0To15Property::new(13), east: false, north: true, south: true, up: true, west: false}),
      434 => Some(Self {age: NumberFrom0To15Property::new(13), east: false, north: true, south: true, up: false, west: true}),
      435 => Some(Self {age: NumberFrom0To15Property::new(13), east: false, north: true, south: true, up: false, west: false}),
      436 => Some(Self {age: NumberFrom0To15Property::new(13), east: false, north: true, south: false, up: true, west: true}),
      437 => Some(Self {age: NumberFrom0To15Property::new(13), east: false, north: true, south: false, up: true, west: false}),
      438 => Some(Self {age: NumberFrom0To15Property::new(13), east: false, north: true, south: false, up: false, west: true}),
      439 => Some(Self {age: NumberFrom0To15Property::new(13), east: false, north: true, south: false, up: false, west: false}),
      440 => Some(Self {age: NumberFrom0To15Property::new(13), east: false, north: false, south: true, up: true, west: true}),
      441 => Some(Self {age: NumberFrom0To15Property::new(13), east: false, north: false, south: true, up: true, west: false}),
      442 => Some(Self {age: NumberFrom0To15Property::new(13), east: false, north: false, south: true, up: false, west: true}),
      443 => Some(Self {age: NumberFrom0To15Property::new(13), east: false, north: false, south: true, up: false, west: false}),
      444 => Some(Self {age: NumberFrom0To15Property::new(13), east: false, north: false, south: false, up: true, west: true}),
      445 => Some(Self {age: NumberFrom0To15Property::new(13), east: false, north: false, south: false, up: true, west: false}),
      446 => Some(Self {age: NumberFrom0To15Property::new(13), east: false, north: false, south: false, up: false, west: true}),
      447 => Some(Self {age: NumberFrom0To15Property::new(13), east: false, north: false, south: false, up: false, west: false}),
      448 => Some(Self {age: NumberFrom0To15Property::new(14), east: true, north: true, south: true, up: true, west: true}),
      449 => Some(Self {age: NumberFrom0To15Property::new(14), east: true, north: true, south: true, up: true, west: false}),
      450 => Some(Self {age: NumberFrom0To15Property::new(14), east: true, north: true, south: true, up: false, west: true}),
      451 => Some(Self {age: NumberFrom0To15Property::new(14), east: true, north: true, south: true, up: false, west: false}),
      452 => Some(Self {age: NumberFrom0To15Property::new(14), east: true, north: true, south: false, up: true, west: true}),
      453 => Some(Self {age: NumberFrom0To15Property::new(14), east: true, north: true, south: false, up: true, west: false}),
      454 => Some(Self {age: NumberFrom0To15Property::new(14), east: true, north: true, south: false, up: false, west: true}),
      455 => Some(Self {age: NumberFrom0To15Property::new(14), east: true, north: true, south: false, up: false, west: false}),
      456 => Some(Self {age: NumberFrom0To15Property::new(14), east: true, north: false, south: true, up: true, west: true}),
      457 => Some(Self {age: NumberFrom0To15Property::new(14), east: true, north: false, south: true, up: true, west: false}),
      458 => Some(Self {age: NumberFrom0To15Property::new(14), east: true, north: false, south: true, up: false, west: true}),
      459 => Some(Self {age: NumberFrom0To15Property::new(14), east: true, north: false, south: true, up: false, west: false}),
      460 => Some(Self {age: NumberFrom0To15Property::new(14), east: true, north: false, south: false, up: true, west: true}),
      461 => Some(Self {age: NumberFrom0To15Property::new(14), east: true, north: false, south: false, up: true, west: false}),
      462 => Some(Self {age: NumberFrom0To15Property::new(14), east: true, north: false, south: false, up: false, west: true}),
      463 => Some(Self {age: NumberFrom0To15Property::new(14), east: true, north: false, south: false, up: false, west: false}),
      464 => Some(Self {age: NumberFrom0To15Property::new(14), east: false, north: true, south: true, up: true, west: true}),
      465 => Some(Self {age: NumberFrom0To15Property::new(14), east: false, north: true, south: true, up: true, west: false}),
      466 => Some(Self {age: NumberFrom0To15Property::new(14), east: false, north: true, south: true, up: false, west: true}),
      467 => Some(Self {age: NumberFrom0To15Property::new(14), east: false, north: true, south: true, up: false, west: false}),
      468 => Some(Self {age: NumberFrom0To15Property::new(14), east: false, north: true, south: false, up: true, west: true}),
      469 => Some(Self {age: NumberFrom0To15Property::new(14), east: false, north: true, south: false, up: true, west: false}),
      470 => Some(Self {age: NumberFrom0To15Property::new(14), east: false, north: true, south: false, up: false, west: true}),
      471 => Some(Self {age: NumberFrom0To15Property::new(14), east: false, north: true, south: false, up: false, west: false}),
      472 => Some(Self {age: NumberFrom0To15Property::new(14), east: false, north: false, south: true, up: true, west: true}),
      473 => Some(Self {age: NumberFrom0To15Property::new(14), east: false, north: false, south: true, up: true, west: false}),
      474 => Some(Self {age: NumberFrom0To15Property::new(14), east: false, north: false, south: true, up: false, west: true}),
      475 => Some(Self {age: NumberFrom0To15Property::new(14), east: false, north: false, south: true, up: false, west: false}),
      476 => Some(Self {age: NumberFrom0To15Property::new(14), east: false, north: false, south: false, up: true, west: true}),
      477 => Some(Self {age: NumberFrom0To15Property::new(14), east: false, north: false, south: false, up: true, west: false}),
      478 => Some(Self {age: NumberFrom0To15Property::new(14), east: false, north: false, south: false, up: false, west: true}),
      479 => Some(Self {age: NumberFrom0To15Property::new(14), east: false, north: false, south: false, up: false, west: false}),
      480 => Some(Self {age: NumberFrom0To15Property::new(15), east: true, north: true, south: true, up: true, west: true}),
      481 => Some(Self {age: NumberFrom0To15Property::new(15), east: true, north: true, south: true, up: true, west: false}),
      482 => Some(Self {age: NumberFrom0To15Property::new(15), east: true, north: true, south: true, up: false, west: true}),
      483 => Some(Self {age: NumberFrom0To15Property::new(15), east: true, north: true, south: true, up: false, west: false}),
      484 => Some(Self {age: NumberFrom0To15Property::new(15), east: true, north: true, south: false, up: true, west: true}),
      485 => Some(Self {age: NumberFrom0To15Property::new(15), east: true, north: true, south: false, up: true, west: false}),
      486 => Some(Self {age: NumberFrom0To15Property::new(15), east: true, north: true, south: false, up: false, west: true}),
      487 => Some(Self {age: NumberFrom0To15Property::new(15), east: true, north: true, south: false, up: false, west: false}),
      488 => Some(Self {age: NumberFrom0To15Property::new(15), east: true, north: false, south: true, up: true, west: true}),
      489 => Some(Self {age: NumberFrom0To15Property::new(15), east: true, north: false, south: true, up: true, west: false}),
      490 => Some(Self {age: NumberFrom0To15Property::new(15), east: true, north: false, south: true, up: false, west: true}),
      491 => Some(Self {age: NumberFrom0To15Property::new(15), east: true, north: false, south: true, up: false, west: false}),
      492 => Some(Self {age: NumberFrom0To15Property::new(15), east: true, north: false, south: false, up: true, west: true}),
      493 => Some(Self {age: NumberFrom0To15Property::new(15), east: true, north: false, south: false, up: true, west: false}),
      494 => Some(Self {age: NumberFrom0To15Property::new(15), east: true, north: false, south: false, up: false, west: true}),
      495 => Some(Self {age: NumberFrom0To15Property::new(15), east: true, north: false, south: false, up: false, west: false}),
      496 => Some(Self {age: NumberFrom0To15Property::new(15), east: false, north: true, south: true, up: true, west: true}),
      497 => Some(Self {age: NumberFrom0To15Property::new(15), east: false, north: true, south: true, up: true, west: false}),
      498 => Some(Self {age: NumberFrom0To15Property::new(15), east: false, north: true, south: true, up: false, west: true}),
      499 => Some(Self {age: NumberFrom0To15Property::new(15), east: false, north: true, south: true, up: false, west: false}),
      500 => Some(Self {age: NumberFrom0To15Property::new(15), east: false, north: true, south: false, up: true, west: true}),
      501 => Some(Self {age: NumberFrom0To15Property::new(15), east: false, north: true, south: false, up: true, west: false}),
      502 => Some(Self {age: NumberFrom0To15Property::new(15), east: false, north: true, south: false, up: false, west: true}),
      503 => Some(Self {age: NumberFrom0To15Property::new(15), east: false, north: true, south: false, up: false, west: false}),
      504 => Some(Self {age: NumberFrom0To15Property::new(15), east: false, north: false, south: true, up: true, west: true}),
      505 => Some(Self {age: NumberFrom0To15Property::new(15), east: false, north: false, south: true, up: true, west: false}),
      506 => Some(Self {age: NumberFrom0To15Property::new(15), east: false, north: false, south: true, up: false, west: true}),
      507 => Some(Self {age: NumberFrom0To15Property::new(15), east: false, north: false, south: true, up: false, west: false}),
      508 => Some(Self {age: NumberFrom0To15Property::new(15), east: false, north: false, south: false, up: true, west: true}),
      509 => Some(Self {age: NumberFrom0To15Property::new(15), east: false, north: false, south: false, up: true, west: false}),
      510 => Some(Self {age: NumberFrom0To15Property::new(15), east: false, north: false, south: false, up: false, west: true}),
      511 => Some(Self {age: NumberFrom0To15Property::new(15), east: false, north: false, south: false, up: false, west: false}),
      _ => None,
    }
  }
  pub fn to_offset(self) -> usize {
    match self.age.value() {
      0 => match self.east {
        true => match self.north {
          true => match self.south {
            true => match self.up {
              true => match self.west {
                true => 0,
                false => 1,
              },
              false => match self.west {
                true => 2,
                false => 3,
              },
            },
            false => match self.up {
              true => match self.west {
                true => 4,
                false => 5,
              },
              false => match self.west {
                true => 6,
                false => 7,
              },
            },
          },
          false => match self.south {
            true => match self.up {
              true => match self.west {
                true => 8,
                false => 9,
              },
              false => match self.west {
                true => 10,
                false => 11,
              },
            },
            false => match self.up {
              true => match self.west {
                true => 12,
                false => 13,
              },
              false => match self.west {
                true => 14,
                false => 15,
              },
            },
          },
        },
        false => match self.north {
          true => match self.south {
            true => match self.up {
              true => match self.west {
                true => 16,
                false => 17,
              },
              false => match self.west {
                true => 18,
                false => 19,
              },
            },
            false => match self.up {
              true => match self.west {
                true => 20,
                false => 21,
              },
              false => match self.west {
                true => 22,
                false => 23,
              },
            },
          },
          false => match self.south {
            true => match self.up {
              true => match self.west {
                true => 24,
                false => 25,
              },
              false => match self.west {
                true => 26,
                false => 27,
              },
            },
            false => match self.up {
              true => match self.west {
                true => 28,
                false => 29,
              },
              false => match self.west {
                true => 30,
                false => 31,
              },
            },
          },
        },
      },
      1 => match self.east {
        true => match self.north {
          true => match self.south {
            true => match self.up {
              true => match self.west {
                true => 32,
                false => 33,
              },
              false => match self.west {
                true => 34,
                false => 35,
              },
            },
            false => match self.up {
              true => match self.west {
                true => 36,
                false => 37,
              },
              false => match self.west {
                true => 38,
                false => 39,
              },
            },
          },
          false => match self.south {
            true => match self.up {
              true => match self.west {
                true => 40,
                false => 41,
              },
              false => match self.west {
                true => 42,
                false => 43,
              },
            },
            false => match self.up {
              true => match self.west {
                true => 44,
                false => 45,
              },
              false => match self.west {
                true => 46,
                false => 47,
              },
            },
          },
        },
        false => match self.north {
          true => match self.south {
            true => match self.up {
              true => match self.west {
                true => 48,
                false => 49,
              },
              false => match self.west {
                true => 50,
                false => 51,
              },
            },
            false => match self.up {
              true => match self.west {
                true => 52,
                false => 53,
              },
              false => match self.west {
                true => 54,
                false => 55,
              },
            },
          },
          false => match self.south {
            true => match self.up {
              true => match self.west {
                true => 56,
                false => 57,
              },
              false => match self.west {
                true => 58,
                false => 59,
              },
            },
            false => match self.up {
              true => match self.west {
                true => 60,
                false => 61,
              },
              false => match self.west {
                true => 62,
                false => 63,
              },
            },
          },
        },
      },
      2 => match self.east {
        true => match self.north {
          true => match self.south {
            true => match self.up {
              true => match self.west {
                true => 64,
                false => 65,
              },
              false => match self.west {
                true => 66,
                false => 67,
              },
            },
            false => match self.up {
              true => match self.west {
                true => 68,
                false => 69,
              },
              false => match self.west {
                true => 70,
                false => 71,
              },
            },
          },
          false => match self.south {
            true => match self.up {
              true => match self.west {
                true => 72,
                false => 73,
              },
              false => match self.west {
                true => 74,
                false => 75,
              },
            },
            false => match self.up {
              true => match self.west {
                true => 76,
                false => 77,
              },
              false => match self.west {
                true => 78,
                false => 79,
              },
            },
          },
        },
        false => match self.north {
          true => match self.south {
            true => match self.up {
              true => match self.west {
                true => 80,
                false => 81,
              },
              false => match self.west {
                true => 82,
                false => 83,
              },
            },
            false => match self.up {
              true => match self.west {
                true => 84,
                false => 85,
              },
              false => match self.west {
                true => 86,
                false => 87,
              },
            },
          },
          false => match self.south {
            true => match self.up {
              true => match self.west {
                true => 88,
                false => 89,
              },
              false => match self.west {
                true => 90,
                false => 91,
              },
            },
            false => match self.up {
              true => match self.west {
                true => 92,
                false => 93,
              },
              false => match self.west {
                true => 94,
                false => 95,
              },
            },
          },
        },
      },
      3 => match self.east {
        true => match self.north {
          true => match self.south {
            true => match self.up {
              true => match self.west {
                true => 96,
                false => 97,
              },
              false => match self.west {
                true => 98,
                false => 99,
              },
            },
            false => match self.up {
              true => match self.west {
                true => 100,
                false => 101,
              },
              false => match self.west {
                true => 102,
                false => 103,
              },
            },
          },
          false => match self.south {
            true => match self.up {
              true => match self.west {
                true => 104,
                false => 105,
              },
              false => match self.west {
                true => 106,
                false => 107,
              },
            },
            false => match self.up {
              true => match self.west {
                true => 108,
                false => 109,
              },
              false => match self.west {
                true => 110,
                false => 111,
              },
            },
          },
        },
        false => match self.north {
          true => match self.south {
            true => match self.up {
              true => match self.west {
                true => 112,
                false => 113,
              },
              false => match self.west {
                true => 114,
                false => 115,
              },
            },
            false => match self.up {
              true => match self.west {
                true => 116,
                false => 117,
              },
              false => match self.west {
                true => 118,
                false => 119,
              },
            },
          },
          false => match self.south {
            true => match self.up {
              true => match self.west {
                true => 120,
                false => 121,
              },
              false => match self.west {
                true => 122,
                false => 123,
              },
            },
            false => match self.up {
              true => match self.west {
                true => 124,
                false => 125,
              },
              false => match self.west {
                true => 126,
                false => 127,
              },
            },
          },
        },
      },
      4 => match self.east {
        true => match self.north {
          true => match self.south {
            true => match self.up {
              true => match self.west {
                true => 128,
                false => 129,
              },
              false => match self.west {
                true => 130,
                false => 131,
              },
            },
            false => match self.up {
              true => match self.west {
                true => 132,
                false => 133,
              },
              false => match self.west {
                true => 134,
                false => 135,
              },
            },
          },
          false => match self.south {
            true => match self.up {
              true => match self.west {
                true => 136,
                false => 137,
              },
              false => match self.west {
                true => 138,
                false => 139,
              },
            },
            false => match self.up {
              true => match self.west {
                true => 140,
                false => 141,
              },
              false => match self.west {
                true => 142,
                false => 143,
              },
            },
          },
        },
        false => match self.north {
          true => match self.south {
            true => match self.up {
              true => match self.west {
                true => 144,
                false => 145,
              },
              false => match self.west {
                true => 146,
                false => 147,
              },
            },
            false => match self.up {
              true => match self.west {
                true => 148,
                false => 149,
              },
              false => match self.west {
                true => 150,
                false => 151,
              },
            },
          },
          false => match self.south {
            true => match self.up {
              true => match self.west {
                true => 152,
                false => 153,
              },
              false => match self.west {
                true => 154,
                false => 155,
              },
            },
            false => match self.up {
              true => match self.west {
                true => 156,
                false => 157,
              },
              false => match self.west {
                true => 158,
                false => 159,
              },
            },
          },
        },
      },
      5 => match self.east {
        true => match self.north {
          true => match self.south {
            true => match self.up {
              true => match self.west {
                true => 160,
                false => 161,
              },
              false => match self.west {
                true => 162,
                false => 163,
              },
            },
            false => match self.up {
              true => match self.west {
                true => 164,
                false => 165,
              },
              false => match self.west {
                true => 166,
                false => 167,
              },
            },
          },
          false => match self.south {
            true => match self.up {
              true => match self.west {
                true => 168,
                false => 169,
              },
              false => match self.west {
                true => 170,
                false => 171,
              },
            },
            false => match self.up {
              true => match self.west {
                true => 172,
                false => 173,
              },
              false => match self.west {
                true => 174,
                false => 175,
              },
            },
          },
        },
        false => match self.north {
          true => match self.south {
            true => match self.up {
              true => match self.west {
                true => 176,
                false => 177,
              },
              false => match self.west {
                true => 178,
                false => 179,
              },
            },
            false => match self.up {
              true => match self.west {
                true => 180,
                false => 181,
              },
              false => match self.west {
                true => 182,
                false => 183,
              },
            },
          },
          false => match self.south {
            true => match self.up {
              true => match self.west {
                true => 184,
                false => 185,
              },
              false => match self.west {
                true => 186,
                false => 187,
              },
            },
            false => match self.up {
              true => match self.west {
                true => 188,
                false => 189,
              },
              false => match self.west {
                true => 190,
                false => 191,
              },
            },
          },
        },
      },
      6 => match self.east {
        true => match self.north {
          true => match self.south {
            true => match self.up {
              true => match self.west {
                true => 192,
                false => 193,
              },
              false => match self.west {
                true => 194,
                false => 195,
              },
            },
            false => match self.up {
              true => match self.west {
                true => 196,
                false => 197,
              },
              false => match self.west {
                true => 198,
                false => 199,
              },
            },
          },
          false => match self.south {
            true => match self.up {
              true => match self.west {
                true => 200,
                false => 201,
              },
              false => match self.west {
                true => 202,
                false => 203,
              },
            },
            false => match self.up {
              true => match self.west {
                true => 204,
                false => 205,
              },
              false => match self.west {
                true => 206,
                false => 207,
              },
            },
          },
        },
        false => match self.north {
          true => match self.south {
            true => match self.up {
              true => match self.west {
                true => 208,
                false => 209,
              },
              false => match self.west {
                true => 210,
                false => 211,
              },
            },
            false => match self.up {
              true => match self.west {
                true => 212,
                false => 213,
              },
              false => match self.west {
                true => 214,
                false => 215,
              },
            },
          },
          false => match self.south {
            true => match self.up {
              true => match self.west {
                true => 216,
                false => 217,
              },
              false => match self.west {
                true => 218,
                false => 219,
              },
            },
            false => match self.up {
              true => match self.west {
                true => 220,
                false => 221,
              },
              false => match self.west {
                true => 222,
                false => 223,
              },
            },
          },
        },
      },
      7 => match self.east {
        true => match self.north {
          true => match self.south {
            true => match self.up {
              true => match self.west {
                true => 224,
                false => 225,
              },
              false => match self.west {
                true => 226,
                false => 227,
              },
            },
            false => match self.up {
              true => match self.west {
                true => 228,
                false => 229,
              },
              false => match self.west {
                true => 230,
                false => 231,
              },
            },
          },
          false => match self.south {
            true => match self.up {
              true => match self.west {
                true => 232,
                false => 233,
              },
              false => match self.west {
                true => 234,
                false => 235,
              },
            },
            false => match self.up {
              true => match self.west {
                true => 236,
                false => 237,
              },
              false => match self.west {
                true => 238,
                false => 239,
              },
            },
          },
        },
        false => match self.north {
          true => match self.south {
            true => match self.up {
              true => match self.west {
                true => 240,
                false => 241,
              },
              false => match self.west {
                true => 242,
                false => 243,
              },
            },
            false => match self.up {
              true => match self.west {
                true => 244,
                false => 245,
              },
              false => match self.west {
                true => 246,
                false => 247,
              },
            },
          },
          false => match self.south {
            true => match self.up {
              true => match self.west {
                true => 248,
                false => 249,
              },
              false => match self.west {
                true => 250,
                false => 251,
              },
            },
            false => match self.up {
              true => match self.west {
                true => 252,
                false => 253,
              },
              false => match self.west {
                true => 254,
                false => 255,
              },
            },
          },
        },
      },
      8 => match self.east {
        true => match self.north {
          true => match self.south {
            true => match self.up {
              true => match self.west {
                true => 256,
                false => 257,
              },
              false => match self.west {
                true => 258,
                false => 259,
              },
            },
            false => match self.up {
              true => match self.west {
                true => 260,
                false => 261,
              },
              false => match self.west {
                true => 262,
                false => 263,
              },
            },
          },
          false => match self.south {
            true => match self.up {
              true => match self.west {
                true => 264,
                false => 265,
              },
              false => match self.west {
                true => 266,
                false => 267,
              },
            },
            false => match self.up {
              true => match self.west {
                true => 268,
                false => 269,
              },
              false => match self.west {
                true => 270,
                false => 271,
              },
            },
          },
        },
        false => match self.north {
          true => match self.south {
            true => match self.up {
              true => match self.west {
                true => 272,
                false => 273,
              },
              false => match self.west {
                true => 274,
                false => 275,
              },
            },
            false => match self.up {
              true => match self.west {
                true => 276,
                false => 277,
              },
              false => match self.west {
                true => 278,
                false => 279,
              },
            },
          },
          false => match self.south {
            true => match self.up {
              true => match self.west {
                true => 280,
                false => 281,
              },
              false => match self.west {
                true => 282,
                false => 283,
              },
            },
            false => match self.up {
              true => match self.west {
                true => 284,
                false => 285,
              },
              false => match self.west {
                true => 286,
                false => 287,
              },
            },
          },
        },
      },
      9 => match self.east {
        true => match self.north {
          true => match self.south {
            true => match self.up {
              true => match self.west {
                true => 288,
                false => 289,
              },
              false => match self.west {
                true => 290,
                false => 291,
              },
            },
            false => match self.up {
              true => match self.west {
                true => 292,
                false => 293,
              },
              false => match self.west {
                true => 294,
                false => 295,
              },
            },
          },
          false => match self.south {
            true => match self.up {
              true => match self.west {
                true => 296,
                false => 297,
              },
              false => match self.west {
                true => 298,
                false => 299,
              },
            },
            false => match self.up {
              true => match self.west {
                true => 300,
                false => 301,
              },
              false => match self.west {
                true => 302,
                false => 303,
              },
            },
          },
        },
        false => match self.north {
          true => match self.south {
            true => match self.up {
              true => match self.west {
                true => 304,
                false => 305,
              },
              false => match self.west {
                true => 306,
                false => 307,
              },
            },
            false => match self.up {
              true => match self.west {
                true => 308,
                false => 309,
              },
              false => match self.west {
                true => 310,
                false => 311,
              },
            },
          },
          false => match self.south {
            true => match self.up {
              true => match self.west {
                true => 312,
                false => 313,
              },
              false => match self.west {
                true => 314,
                false => 315,
              },
            },
            false => match self.up {
              true => match self.west {
                true => 316,
                false => 317,
              },
              false => match self.west {
                true => 318,
                false => 319,
              },
            },
          },
        },
      },
      10 => match self.east {
        true => match self.north {
          true => match self.south {
            true => match self.up {
              true => match self.west {
                true => 320,
                false => 321,
              },
              false => match self.west {
                true => 322,
                false => 323,
              },
            },
            false => match self.up {
              true => match self.west {
                true => 324,
                false => 325,
              },
              false => match self.west {
                true => 326,
                false => 327,
              },
            },
          },
          false => match self.south {
            true => match self.up {
              true => match self.west {
                true => 328,
                false => 329,
              },
              false => match self.west {
                true => 330,
                false => 331,
              },
            },
            false => match self.up {
              true => match self.west {
                true => 332,
                false => 333,
              },
              false => match self.west {
                true => 334,
                false => 335,
              },
            },
          },
        },
        false => match self.north {
          true => match self.south {
            true => match self.up {
              true => match self.west {
                true => 336,
                false => 337,
              },
              false => match self.west {
                true => 338,
                false => 339,
              },
            },
            false => match self.up {
              true => match self.west {
                true => 340,
                false => 341,
              },
              false => match self.west {
                true => 342,
                false => 343,
              },
            },
          },
          false => match self.south {
            true => match self.up {
              true => match self.west {
                true => 344,
                false => 345,
              },
              false => match self.west {
                true => 346,
                false => 347,
              },
            },
            false => match self.up {
              true => match self.west {
                true => 348,
                false => 349,
              },
              false => match self.west {
                true => 350,
                false => 351,
              },
            },
          },
        },
      },
      11 => match self.east {
        true => match self.north {
          true => match self.south {
            true => match self.up {
              true => match self.west {
                true => 352,
                false => 353,
              },
              false => match self.west {
                true => 354,
                false => 355,
              },
            },
            false => match self.up {
              true => match self.west {
                true => 356,
                false => 357,
              },
              false => match self.west {
                true => 358,
                false => 359,
              },
            },
          },
          false => match self.south {
            true => match self.up {
              true => match self.west {
                true => 360,
                false => 361,
              },
              false => match self.west {
                true => 362,
                false => 363,
              },
            },
            false => match self.up {
              true => match self.west {
                true => 364,
                false => 365,
              },
              false => match self.west {
                true => 366,
                false => 367,
              },
            },
          },
        },
        false => match self.north {
          true => match self.south {
            true => match self.up {
              true => match self.west {
                true => 368,
                false => 369,
              },
              false => match self.west {
                true => 370,
                false => 371,
              },
            },
            false => match self.up {
              true => match self.west {
                true => 372,
                false => 373,
              },
              false => match self.west {
                true => 374,
                false => 375,
              },
            },
          },
          false => match self.south {
            true => match self.up {
              true => match self.west {
                true => 376,
                false => 377,
              },
              false => match self.west {
                true => 378,
                false => 379,
              },
            },
            false => match self.up {
              true => match self.west {
                true => 380,
                false => 381,
              },
              false => match self.west {
                true => 382,
                false => 383,
              },
            },
          },
        },
      },
      12 => match self.east {
        true => match self.north {
          true => match self.south {
            true => match self.up {
              true => match self.west {
                true => 384,
                false => 385,
              },
              false => match self.west {
                true => 386,
                false => 387,
              },
            },
            false => match self.up {
              true => match self.west {
                true => 388,
                false => 389,
              },
              false => match self.west {
                true => 390,
                false => 391,
              },
            },
          },
          false => match self.south {
            true => match self.up {
              true => match self.west {
                true => 392,
                false => 393,
              },
              false => match self.west {
                true => 394,
                false => 395,
              },
            },
            false => match self.up {
              true => match self.west {
                true => 396,
                false => 397,
              },
              false => match self.west {
                true => 398,
                false => 399,
              },
            },
          },
        },
        false => match self.north {
          true => match self.south {
            true => match self.up {
              true => match self.west {
                true => 400,
                false => 401,
              },
              false => match self.west {
                true => 402,
                false => 403,
              },
            },
            false => match self.up {
              true => match self.west {
                true => 404,
                false => 405,
              },
              false => match self.west {
                true => 406,
                false => 407,
              },
            },
          },
          false => match self.south {
            true => match self.up {
              true => match self.west {
                true => 408,
                false => 409,
              },
              false => match self.west {
                true => 410,
                false => 411,
              },
            },
            false => match self.up {
              true => match self.west {
                true => 412,
                false => 413,
              },
              false => match self.west {
                true => 414,
                false => 415,
              },
            },
          },
        },
      },
      13 => match self.east {
        true => match self.north {
          true => match self.south {
            true => match self.up {
              true => match self.west {
                true => 416,
                false => 417,
              },
              false => match self.west {
                true => 418,
                false => 419,
              },
            },
            false => match self.up {
              true => match self.west {
                true => 420,
                false => 421,
              },
              false => match self.west {
                true => 422,
                false => 423,
              },
            },
          },
          false => match self.south {
            true => match self.up {
              true => match self.west {
                true => 424,
                false => 425,
              },
              false => match self.west {
                true => 426,
                false => 427,
              },
            },
            false => match self.up {
              true => match self.west {
                true => 428,
                false => 429,
              },
              false => match self.west {
                true => 430,
                false => 431,
              },
            },
          },
        },
        false => match self.north {
          true => match self.south {
            true => match self.up {
              true => match self.west {
                true => 432,
                false => 433,
              },
              false => match self.west {
                true => 434,
                false => 435,
              },
            },
            false => match self.up {
              true => match self.west {
                true => 436,
                false => 437,
              },
              false => match self.west {
                true => 438,
                false => 439,
              },
            },
          },
          false => match self.south {
            true => match self.up {
              true => match self.west {
                true => 440,
                false => 441,
              },
              false => match self.west {
                true => 442,
                false => 443,
              },
            },
            false => match self.up {
              true => match self.west {
                true => 444,
                false => 445,
              },
              false => match self.west {
                true => 446,
                false => 447,
              },
            },
          },
        },
      },
      14 => match self.east {
        true => match self.north {
          true => match self.south {
            true => match self.up {
              true => match self.west {
                true => 448,
                false => 449,
              },
              false => match self.west {
                true => 450,
                false => 451,
              },
            },
            false => match self.up {
              true => match self.west {
                true => 452,
                false => 453,
              },
              false => match self.west {
                true => 454,
                false => 455,
              },
            },
          },
          false => match self.south {
            true => match self.up {
              true => match self.west {
                true => 456,
                false => 457,
              },
              false => match self.west {
                true => 458,
                false => 459,
              },
            },
            false => match self.up {
              true => match self.west {
                true => 460,
                false => 461,
              },
              false => match self.west {
                true => 462,
                false => 463,
              },
            },
          },
        },
        false => match self.north {
          true => match self.south {
            true => match self.up {
              true => match self.west {
                true => 464,
                false => 465,
              },
              false => match self.west {
                true => 466,
                false => 467,
              },
            },
            false => match self.up {
              true => match self.west {
                true => 468,
                false => 469,
              },
              false => match self.west {
                true => 470,
                false => 471,
              },
            },
          },
          false => match self.south {
            true => match self.up {
              true => match self.west {
                true => 472,
                false => 473,
              },
              false => match self.west {
                true => 474,
                false => 475,
              },
            },
            false => match self.up {
              true => match self.west {
                true => 476,
                false => 477,
              },
              false => match self.west {
                true => 478,
                false => 479,
              },
            },
          },
        },
      },
      15 => match self.east {
        true => match self.north {
          true => match self.south {
            true => match self.up {
              true => match self.west {
                true => 480,
                false => 481,
              },
              false => match self.west {
                true => 482,
                false => 483,
              },
            },
            false => match self.up {
              true => match self.west {
                true => 484,
                false => 485,
              },
              false => match self.west {
                true => 486,
                false => 487,
              },
            },
          },
          false => match self.south {
            true => match self.up {
              true => match self.west {
                true => 488,
                false => 489,
              },
              false => match self.west {
                true => 490,
                false => 491,
              },
            },
            false => match self.up {
              true => match self.west {
                true => 492,
                false => 493,
              },
              false => match self.west {
                true => 494,
                false => 495,
              },
            },
          },
        },
        false => match self.north {
          true => match self.south {
            true => match self.up {
              true => match self.west {
                true => 496,
                false => 497,
              },
              false => match self.west {
                true => 498,
                false => 499,
              },
            },
            false => match self.up {
              true => match self.west {
                true => 500,
                false => 501,
              },
              false => match self.west {
                true => 502,
                false => 503,
              },
            },
          },
          false => match self.south {
            true => match self.up {
              true => match self.west {
                true => 504,
                false => 505,
              },
              false => match self.west {
                true => 506,
                false => 507,
              },
            },
            false => match self.up {
              true => match self.west {
                true => 508,
                false => 509,
              },
              false => match self.west {
                true => 510,
                false => 511,
              },
            },
          },
        },
      },
      _ => panic!("Illegal Block State"),
    }
  }
}
impl Default for FireData {
  fn default() -> Self {
    Self {age: NumberFrom0To15Property::new(0), east: false, north: false, south: false, up: false, west: false}
  }
}
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]
pub struct StairsData {
  pub facing: CardinalFacingProperty,
  pub half: StairsHalfProperty,
  pub shape: StairsShapeProperty,
  pub waterlogged: bool,
}
impl StairsData {
  pub fn from_offset(offset: usize) -> Option<Self> {
    match offset {
      0 => Some(Self {facing: CardinalFacingProperty::North, half: StairsHalfProperty::Top, shape: StairsShapeProperty::Straight, waterlogged: true}),
      1 => Some(Self {facing: CardinalFacingProperty::North, half: StairsHalfProperty::Top, shape: StairsShapeProperty::Straight, waterlogged: false}),
      2 => Some(Self {facing: CardinalFacingProperty::North, half: StairsHalfProperty::Top, shape: StairsShapeProperty::InnerLeft, waterlogged: true}),
      3 => Some(Self {facing: CardinalFacingProperty::North, half: StairsHalfProperty::Top, shape: StairsShapeProperty::InnerLeft, waterlogged: false}),
      4 => Some(Self {facing: CardinalFacingProperty::North, half: StairsHalfProperty::Top, shape: StairsShapeProperty::InnerRight, waterlogged: true}),
      5 => Some(Self {facing: CardinalFacingProperty::North, half: StairsHalfProperty::Top, shape: StairsShapeProperty::InnerRight, waterlogged: false}),
      6 => Some(Self {facing: CardinalFacingProperty::North, half: StairsHalfProperty::Top, shape: StairsShapeProperty::OuterLeft, waterlogged: true}),
      7 => Some(Self {facing: CardinalFacingProperty::North, half: StairsHalfProperty::Top, shape: StairsShapeProperty::OuterLeft, waterlogged: false}),
      8 => Some(Self {facing: CardinalFacingProperty::North, half: StairsHalfProperty::Top, shape: StairsShapeProperty::OuterRight, waterlogged: true}),
      9 => Some(Self {facing: CardinalFacingProperty::North, half: StairsHalfProperty::Top, shape: StairsShapeProperty::OuterRight, waterlogged: false}),
      10 => Some(Self {facing: CardinalFacingProperty::North, half: StairsHalfProperty::Bottom, shape: StairsShapeProperty::Straight, waterlogged: true}),
      11 => Some(Self {facing: CardinalFacingProperty::North, half: StairsHalfProperty::Bottom, shape: StairsShapeProperty::Straight, waterlogged: false}),
      12 => Some(Self {facing: CardinalFacingProperty::North, half: StairsHalfProperty::Bottom, shape: StairsShapeProperty::InnerLeft, waterlogged: true}),
      13 => Some(Self {facing: CardinalFacingProperty::North, half: StairsHalfProperty::Bottom, shape: StairsShapeProperty::InnerLeft, waterlogged: false}),
      14 => Some(Self {facing: CardinalFacingProperty::North, half: StairsHalfProperty::Bottom, shape: StairsShapeProperty::InnerRight, waterlogged: true}),
      15 => Some(Self {facing: CardinalFacingProperty::North, half: StairsHalfProperty::Bottom, shape: StairsShapeProperty::InnerRight, waterlogged: false}),
      16 => Some(Self {facing: CardinalFacingProperty::North, half: StairsHalfProperty::Bottom, shape: StairsShapeProperty::OuterLeft, waterlogged: true}),
      17 => Some(Self {facing: CardinalFacingProperty::North, half: StairsHalfProperty::Bottom, shape: StairsShapeProperty::OuterLeft, waterlogged: false}),
      18 => Some(Self {facing: CardinalFacingProperty::North, half: StairsHalfProperty::Bottom, shape: StairsShapeProperty::OuterRight, waterlogged: true}),
      19 => Some(Self {facing: CardinalFacingProperty::North, half: StairsHalfProperty::Bottom, shape: StairsShapeProperty::OuterRight, waterlogged: false}),
      20 => Some(Self {facing: CardinalFacingProperty::South, half: StairsHalfProperty::Top, shape: StairsShapeProperty::Straight, waterlogged: true}),
      21 => Some(Self {facing: CardinalFacingProperty::South, half: StairsHalfProperty::Top, shape: StairsShapeProperty::Straight, waterlogged: false}),
      22 => Some(Self {facing: CardinalFacingProperty::South, half: StairsHalfProperty::Top, shape: StairsShapeProperty::InnerLeft, waterlogged: true}),
      23 => Some(Self {facing: CardinalFacingProperty::South, half: StairsHalfProperty::Top, shape: StairsShapeProperty::InnerLeft, waterlogged: false}),
      24 => Some(Self {facing: CardinalFacingProperty::South, half: StairsHalfProperty::Top, shape: StairsShapeProperty::InnerRight, waterlogged: true}),
      25 => Some(Self {facing: CardinalFacingProperty::South, half: StairsHalfProperty::Top, shape: StairsShapeProperty::InnerRight, waterlogged: false}),
      26 => Some(Self {facing: CardinalFacingProperty::South, half: StairsHalfProperty::Top, shape: StairsShapeProperty::OuterLeft, waterlogged: true}),
      27 => Some(Self {facing: CardinalFacingProperty::South, half: StairsHalfProperty::Top, shape: StairsShapeProperty::OuterLeft, waterlogged: false}),
      28 => Some(Self {facing: CardinalFacingProperty::South, half: StairsHalfProperty::Top, shape: StairsShapeProperty::OuterRight, waterlogged: true}),
      29 => Some(Self {facing: CardinalFacingProperty::South, half: StairsHalfProperty::Top, shape: StairsShapeProperty::OuterRight, waterlogged: false}),
      30 => Some(Self {facing: CardinalFacingProperty::South, half: StairsHalfProperty::Bottom, shape: StairsShapeProperty::Straight, waterlogged: true}),
      31 => Some(Self {facing: CardinalFacingProperty::South, half: StairsHalfProperty::Bottom, shape: StairsShapeProperty::Straight, waterlogged: false}),
      32 => Some(Self {facing: CardinalFacingProperty::South, half: StairsHalfProperty::Bottom, shape: StairsShapeProperty::InnerLeft, waterlogged: true}),
      33 => Some(Self {facing: CardinalFacingProperty::South, half: StairsHalfProperty::Bottom, shape: StairsShapeProperty::InnerLeft, waterlogged: false}),
      34 => Some(Self {facing: CardinalFacingProperty::South, half: StairsHalfProperty::Bottom, shape: StairsShapeProperty::InnerRight, waterlogged: true}),
      35 => Some(Self {facing: CardinalFacingProperty::South, half: StairsHalfProperty::Bottom, shape: StairsShapeProperty::InnerRight, waterlogged: false}),
      36 => Some(Self {facing: CardinalFacingProperty::South, half: StairsHalfProperty::Bottom, shape: StairsShapeProperty::OuterLeft, waterlogged: true}),
      37 => Some(Self {facing: CardinalFacingProperty::South, half: StairsHalfProperty::Bottom, shape: StairsShapeProperty::OuterLeft, waterlogged: false}),
      38 => Some(Self {facing: CardinalFacingProperty::South, half: StairsHalfProperty::Bottom, shape: StairsShapeProperty::OuterRight, waterlogged: true}),
      39 => Some(Self {facing: CardinalFacingProperty::South, half: StairsHalfProperty::Bottom, shape: StairsShapeProperty::OuterRight, waterlogged: false}),
      40 => Some(Self {facing: CardinalFacingProperty::West, half: StairsHalfProperty::Top, shape: StairsShapeProperty::Straight, waterlogged: true}),
      41 => Some(Self {facing: CardinalFacingProperty::West, half: StairsHalfProperty::Top, shape: StairsShapeProperty::Straight, waterlogged: false}),
      42 => Some(Self {facing: CardinalFacingProperty::West, half: StairsHalfProperty::Top, shape: StairsShapeProperty::InnerLeft, waterlogged: true}),
      43 => Some(Self {facing: CardinalFacingProperty::West, half: StairsHalfProperty::Top, shape: StairsShapeProperty::InnerLeft, waterlogged: false}),
      44 => Some(Self {facing: CardinalFacingProperty::West, half: StairsHalfProperty::Top, shape: StairsShapeProperty::InnerRight, waterlogged: true}),
      45 => Some(Self {facing: CardinalFacingProperty::West, half: StairsHalfProperty::Top, shape: StairsShapeProperty::InnerRight, waterlogged: false}),
      46 => Some(Self {facing: CardinalFacingProperty::West, half: StairsHalfProperty::Top, shape: StairsShapeProperty::OuterLeft, waterlogged: true}),
      47 => Some(Self {facing: CardinalFacingProperty::West, half: StairsHalfProperty::Top, shape: StairsShapeProperty::OuterLeft, waterlogged: false}),
      48 => Some(Self {facing: CardinalFacingProperty::West, half: StairsHalfProperty::Top, shape: StairsShapeProperty::OuterRight, waterlogged: true}),
      49 => Some(Self {facing: CardinalFacingProperty::West, half: StairsHalfProperty::Top, shape: StairsShapeProperty::OuterRight, waterlogged: false}),
      50 => Some(Self {facing: CardinalFacingProperty::West, half: StairsHalfProperty::Bottom, shape: StairsShapeProperty::Straight, waterlogged: true}),
      51 => Some(Self {facing: CardinalFacingProperty::West, half: StairsHalfProperty::Bottom, shape: StairsShapeProperty::Straight, waterlogged: false}),
      52 => Some(Self {facing: CardinalFacingProperty::West, half: StairsHalfProperty::Bottom, shape: StairsShapeProperty::InnerLeft, waterlogged: true}),
      53 => Some(Self {facing: CardinalFacingProperty::West, half: StairsHalfProperty::Bottom, shape: StairsShapeProperty::InnerLeft, waterlogged: false}),
      54 => Some(Self {facing: CardinalFacingProperty::West, half: StairsHalfProperty::Bottom, shape: StairsShapeProperty::InnerRight, waterlogged: true}),
      55 => Some(Self {facing: CardinalFacingProperty::West, half: StairsHalfProperty::Bottom, shape: StairsShapeProperty::InnerRight, waterlogged: false}),
      56 => Some(Self {facing: CardinalFacingProperty::West, half: StairsHalfProperty::Bottom, shape: StairsShapeProperty::OuterLeft, waterlogged: true}),
      57 => Some(Self {facing: CardinalFacingProperty::West, half: StairsHalfProperty::Bottom, shape: StairsShapeProperty::OuterLeft, waterlogged: false}),
      58 => Some(Self {facing: CardinalFacingProperty::West, half: StairsHalfProperty::Bottom, shape: StairsShapeProperty::OuterRight, waterlogged: true}),
      59 => Some(Self {facing: CardinalFacingProperty::West, half: StairsHalfProperty::Bottom, shape: StairsShapeProperty::OuterRight, waterlogged: false}),
      60 => Some(Self {facing: CardinalFacingProperty::East, half: StairsHalfProperty::Top, shape: StairsShapeProperty::Straight, waterlogged: true}),
      61 => Some(Self {facing: CardinalFacingProperty::East, half: StairsHalfProperty::Top, shape: StairsShapeProperty::Straight, waterlogged: false}),
      62 => Some(Self {facing: CardinalFacingProperty::East, half: StairsHalfProperty::Top, shape: StairsShapeProperty::InnerLeft, waterlogged: true}),
      63 => Some(Self {facing: CardinalFacingProperty::East, half: StairsHalfProperty::Top, shape: StairsShapeProperty::InnerLeft, waterlogged: false}),
      64 => Some(Self {facing: CardinalFacingProperty::East, half: StairsHalfProperty::Top, shape: StairsShapeProperty::InnerRight, waterlogged: true}),
      65 => Some(Self {facing: CardinalFacingProperty::East, half: StairsHalfProperty::Top, shape: StairsShapeProperty::InnerRight, waterlogged: false}),
      66 => Some(Self {facing: CardinalFacingProperty::East, half: StairsHalfProperty::Top, shape: StairsShapeProperty::OuterLeft, waterlogged: true}),
      67 => Some(Self {facing: CardinalFacingProperty::East, half: StairsHalfProperty::Top, shape: StairsShapeProperty::OuterLeft, waterlogged: false}),
      68 => Some(Self {facing: CardinalFacingProperty::East, half: StairsHalfProperty::Top, shape: StairsShapeProperty::OuterRight, waterlogged: true}),
      69 => Some(Self {facing: CardinalFacingProperty::East, half: StairsHalfProperty::Top, shape: StairsShapeProperty::OuterRight, waterlogged: false}),
      70 => Some(Self {facing: CardinalFacingProperty::East, half: StairsHalfProperty::Bottom, shape: StairsShapeProperty::Straight, waterlogged: true}),
      71 => Some(Self {facing: CardinalFacingProperty::East, half: StairsHalfProperty::Bottom, shape: StairsShapeProperty::Straight, waterlogged: false}),
      72 => Some(Self {facing: CardinalFacingProperty::East, half: StairsHalfProperty::Bottom, shape: StairsShapeProperty::InnerLeft, waterlogged: true}),
      73 => Some(Self {facing: CardinalFacingProperty::East, half: StairsHalfProperty::Bottom, shape: StairsShapeProperty::InnerLeft, waterlogged: false}),
      74 => Some(Self {facing: CardinalFacingProperty::East, half: StairsHalfProperty::Bottom, shape: StairsShapeProperty::InnerRight, waterlogged: true}),
      75 => Some(Self {facing: CardinalFacingProperty::East, half: StairsHalfProperty::Bottom, shape: StairsShapeProperty::InnerRight, waterlogged: false}),
      76 => Some(Self {facing: CardinalFacingProperty::East, half: StairsHalfProperty::Bottom, shape: StairsShapeProperty::OuterLeft, waterlogged: true}),
      77 => Some(Self {facing: CardinalFacingProperty::East, half: StairsHalfProperty::Bottom, shape: StairsShapeProperty::OuterLeft, waterlogged: false}),
      78 => Some(Self {facing: CardinalFacingProperty::East, half: StairsHalfProperty::Bottom, shape: StairsShapeProperty::OuterRight, waterlogged: true}),
      79 => Some(Self {facing: CardinalFacingProperty::East, half: StairsHalfProperty::Bottom, shape: StairsShapeProperty::OuterRight, waterlogged: false}),
      _ => None,
    }
  }
  pub fn to_offset(self) -> usize {
    match self.facing {
      CardinalFacingProperty::North => match self.half {
        StairsHalfProperty::Top => match self.shape {
          StairsShapeProperty::Straight => match self.waterlogged {
            true => 0,
            false => 1,
          },
          StairsShapeProperty::InnerLeft => match self.waterlogged {
            true => 2,
            false => 3,
          },
          StairsShapeProperty::InnerRight => match self.waterlogged {
            true => 4,
            false => 5,
          },
          StairsShapeProperty::OuterLeft => match self.waterlogged {
            true => 6,
            false => 7,
          },
          StairsShapeProperty::OuterRight => match self.waterlogged {
            true => 8,
            false => 9,
          },
        },
        StairsHalfProperty::Bottom => match self.shape {
          StairsShapeProperty::Straight => match self.waterlogged {
            true => 10,
            false => 11,
          },
          StairsShapeProperty::InnerLeft => match self.waterlogged {
            true => 12,
            false => 13,
          },
          StairsShapeProperty::InnerRight => match self.waterlogged {
            true => 14,
            false => 15,
          },
          StairsShapeProperty::OuterLeft => match self.waterlogged {
            true => 16,
            false => 17,
          },
          StairsShapeProperty::OuterRight => match self.waterlogged {
            true => 18,
            false => 19,
          },
        },
      },
      CardinalFacingProperty::South => match self.half {
        StairsHalfProperty::Top => match self.shape {
          StairsShapeProperty::Straight => match self.waterlogged {
            true => 20,
            false => 21,
          },
          StairsShapeProperty::InnerLeft => match self.waterlogged {
            true => 22,
            false => 23,
          },
          StairsShapeProperty::InnerRight => match self.waterlogged {
            true => 24,
            false => 25,
          },
          StairsShapeProperty::OuterLeft => match self.waterlogged {
            true => 26,
            false => 27,
          },
          StairsShapeProperty::OuterRight => match self.waterlogged {
            true => 28,
            false => 29,
          },
        },
        StairsHalfProperty::Bottom => match self.shape {
          StairsShapeProperty::Straight => match self.waterlogged {
            true => 30,
            false => 31,
          },
          StairsShapeProperty::InnerLeft => match self.waterlogged {
            true => 32,
            false => 33,
          },
          StairsShapeProperty::InnerRight => match self.waterlogged {
            true => 34,
            false => 35,
          },
          StairsShapeProperty::OuterLeft => match self.waterlogged {
            true => 36,
            false => 37,
          },
          StairsShapeProperty::OuterRight => match self.waterlogged {
            true => 38,
            false => 39,
          },
        },
      },
      CardinalFacingProperty::West => match self.half {
        StairsHalfProperty::Top => match self.shape {
          StairsShapeProperty::Straight => match self.waterlogged {
            true => 40,
            false => 41,
          },
          StairsShapeProperty::InnerLeft => match self.waterlogged {
            true => 42,
            false => 43,
          },
          StairsShapeProperty::InnerRight => match self.waterlogged {
            true => 44,
            false => 45,
          },
          StairsShapeProperty::OuterLeft => match self.waterlogged {
            true => 46,
            false => 47,
          },
          StairsShapeProperty::OuterRight => match self.waterlogged {
            true => 48,
            false => 49,
          },
        },
        StairsHalfProperty::Bottom => match self.shape {
          StairsShapeProperty::Straight => match self.waterlogged {
            true => 50,
            false => 51,
          },
          StairsShapeProperty::InnerLeft => match self.waterlogged {
            true => 52,
            false => 53,
          },
          StairsShapeProperty::InnerRight => match self.waterlogged {
            true => 54,
            false => 55,
          },
          StairsShapeProperty::OuterLeft => match self.waterlogged {
            true => 56,
            false => 57,
          },
          StairsShapeProperty::OuterRight => match self.waterlogged {
            true => 58,
            false => 59,
          },
        },
      },
      CardinalFacingProperty::East => match self.half {
        StairsHalfProperty::Top => match self.shape {
          StairsShapeProperty::Straight => match self.waterlogged {
            true => 60,
            false => 61,
          },
          StairsShapeProperty::InnerLeft => match self.waterlogged {
            true => 62,
            false => 63,
          },
          StairsShapeProperty::InnerRight => match self.waterlogged {
            true => 64,
            false => 65,
          },
          StairsShapeProperty::OuterLeft => match self.waterlogged {
            true => 66,
            false => 67,
          },
          StairsShapeProperty::OuterRight => match self.waterlogged {
            true => 68,
            false => 69,
          },
        },
        StairsHalfProperty::Bottom => match self.shape {
          StairsShapeProperty::Straight => match self.waterlogged {
            true => 70,
            false => 71,
          },
          StairsShapeProperty::InnerLeft => match self.waterlogged {
            true => 72,
            false => 73,
          },
          StairsShapeProperty::InnerRight => match self.waterlogged {
            true => 74,
            false => 75,
          },
          StairsShapeProperty::OuterLeft => match self.waterlogged {
            true => 76,
            false => 77,
          },
          StairsShapeProperty::OuterRight => match self.waterlogged {
            true => 78,
            false => 79,
          },
        },
      },
    }
  }
}
impl Default for StairsData {
  fn default() -> Self {
    Self {facing: CardinalFacingProperty::North, half: StairsHalfProperty::Bottom, shape: StairsShapeProperty::Straight, waterlogged: false}
  }
}
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]
pub struct ChestData {
  pub facing: CardinalFacingProperty,
  pub r#type: ChestTypeProperty,
  pub waterlogged: bool,
}
impl ChestData {
  pub fn from_offset(offset: usize) -> Option<Self> {
    match offset {
      0 => Some(Self {facing: CardinalFacingProperty::North, r#type: ChestTypeProperty::Single, waterlogged: true}),
      1 => Some(Self {facing: CardinalFacingProperty::North, r#type: ChestTypeProperty::Single, waterlogged: false}),
      2 => Some(Self {facing: CardinalFacingProperty::North, r#type: ChestTypeProperty::Left, waterlogged: true}),
      3 => Some(Self {facing: CardinalFacingProperty::North, r#type: ChestTypeProperty::Left, waterlogged: false}),
      4 => Some(Self {facing: CardinalFacingProperty::North, r#type: ChestTypeProperty::Right, waterlogged: true}),
      5 => Some(Self {facing: CardinalFacingProperty::North, r#type: ChestTypeProperty::Right, waterlogged: false}),
      6 => Some(Self {facing: CardinalFacingProperty::South, r#type: ChestTypeProperty::Single, waterlogged: true}),
      7 => Some(Self {facing: CardinalFacingProperty::South, r#type: ChestTypeProperty::Single, waterlogged: false}),
      8 => Some(Self {facing: CardinalFacingProperty::South, r#type: ChestTypeProperty::Left, waterlogged: true}),
      9 => Some(Self {facing: CardinalFacingProperty::South, r#type: ChestTypeProperty::Left, waterlogged: false}),
      10 => Some(Self {facing: CardinalFacingProperty::South, r#type: ChestTypeProperty::Right, waterlogged: true}),
      11 => Some(Self {facing: CardinalFacingProperty::South, r#type: ChestTypeProperty::Right, waterlogged: false}),
      12 => Some(Self {facing: CardinalFacingProperty::West, r#type: ChestTypeProperty::Single, waterlogged: true}),
      13 => Some(Self {facing: CardinalFacingProperty::West, r#type: ChestTypeProperty::Single, waterlogged: false}),
      14 => Some(Self {facing: CardinalFacingProperty::West, r#type: ChestTypeProperty::Left, waterlogged: true}),
      15 => Some(Self {facing: CardinalFacingProperty::West, r#type: ChestTypeProperty::Left, waterlogged: false}),
      16 => Some(Self {facing: CardinalFacingProperty::West, r#type: ChestTypeProperty::Right, waterlogged: true}),
      17 => Some(Self {facing: CardinalFacingProperty::West, r#type: ChestTypeProperty::Right, waterlogged: false}),
      18 => Some(Self {facing: CardinalFacingProperty::East, r#type: ChestTypeProperty::Single, waterlogged: true}),
      19 => Some(Self {facing: CardinalFacingProperty::East, r#type: ChestTypeProperty::Single, waterlogged: false}),
      20 => Some(Self {facing: CardinalFacingProperty::East, r#type: ChestTypeProperty::Left, waterlogged: true}),
      21 => Some(Self {facing: CardinalFacingProperty::East, r#type: ChestTypeProperty::Left, waterlogged: false}),
      22 => Some(Self {facing: CardinalFacingProperty::East, r#type: ChestTypeProperty::Right, waterlogged: true}),
      23 => Some(Self {facing: CardinalFacingProperty::East, r#type: ChestTypeProperty::Right, waterlogged: false}),
      _ => None,
    }
  }
  pub fn to_offset(self) -> usize {
    match self.facing {
      CardinalFacingProperty::North => match self.r#type {
        ChestTypeProperty::Single => match self.waterlogged {
          true => 0,
          false => 1,
        },
        ChestTypeProperty::Left => match self.waterlogged {
          true => 2,
          false => 3,
        },
        ChestTypeProperty::Right => match self.waterlogged {
          true => 4,
          false => 5,
        },
      },
      CardinalFacingProperty::South => match self.r#type {
        ChestTypeProperty::Single => match self.waterlogged {
          true => 6,
          false => 7,
        },
        ChestTypeProperty::Left => match self.waterlogged {
          true => 8,
          false => 9,
        },
        ChestTypeProperty::Right => match self.waterlogged {
          true => 10,
          false => 11,
        },
      },
      CardinalFacingProperty::West => match self.r#type {
        ChestTypeProperty::Single => match self.waterlogged {
          true => 12,
          false => 13,
        },
        ChestTypeProperty::Left => match self.waterlogged {
          true => 14,
          false => 15,
        },
        ChestTypeProperty::Right => match self.waterlogged {
          true => 16,
          false => 17,
        },
      },
      CardinalFacingProperty::East => match self.r#type {
        ChestTypeProperty::Single => match self.waterlogged {
          true => 18,
          false => 19,
        },
        ChestTypeProperty::Left => match self.waterlogged {
          true => 20,
          false => 21,
        },
        ChestTypeProperty::Right => match self.waterlogged {
          true => 22,
          false => 23,
        },
      },
    }
  }
}
impl Default for ChestData {
  fn default() -> Self {
    Self {facing: CardinalFacingProperty::North, r#type: ChestTypeProperty::Single, waterlogged: false}
  }
}
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]
pub struct RedstoneWireData {
  pub east: RedstoneWireConnectionProperty,
  pub north: RedstoneWireConnectionProperty,
  pub power: NumberFrom0To15Property,
  pub south: RedstoneWireConnectionProperty,
  pub west: RedstoneWireConnectionProperty,
}
impl RedstoneWireData {
  pub fn from_offset(offset: usize) -> Option<Self> {
    match offset {
      0 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(0), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Up}),
      1 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(0), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Side}),
      2 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(0), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::None}),
      3 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(0), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Up}),
      4 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(0), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Side}),
      5 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(0), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::None}),
      6 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(0), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Up}),
      7 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(0), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Side}),
      8 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(0), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::None}),
      9 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(1), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Up}),
      10 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(1), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Side}),
      11 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(1), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::None}),
      12 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(1), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Up}),
      13 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(1), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Side}),
      14 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(1), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::None}),
      15 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(1), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Up}),
      16 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(1), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Side}),
      17 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(1), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::None}),
      18 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(2), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Up}),
      19 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(2), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Side}),
      20 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(2), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::None}),
      21 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(2), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Up}),
      22 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(2), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Side}),
      23 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(2), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::None}),
      24 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(2), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Up}),
      25 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(2), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Side}),
      26 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(2), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::None}),
      27 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(3), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Up}),
      28 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(3), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Side}),
      29 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(3), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::None}),
      30 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(3), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Up}),
      31 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(3), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Side}),
      32 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(3), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::None}),
      33 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(3), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Up}),
      34 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(3), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Side}),
      35 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(3), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::None}),
      36 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(4), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Up}),
      37 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(4), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Side}),
      38 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(4), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::None}),
      39 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(4), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Up}),
      40 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(4), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Side}),
      41 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(4), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::None}),
      42 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(4), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Up}),
      43 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(4), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Side}),
      44 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(4), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::None}),
      45 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(5), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Up}),
      46 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(5), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Side}),
      47 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(5), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::None}),
      48 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(5), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Up}),
      49 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(5), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Side}),
      50 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(5), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::None}),
      51 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(5), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Up}),
      52 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(5), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Side}),
      53 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(5), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::None}),
      54 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(6), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Up}),
      55 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(6), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Side}),
      56 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(6), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::None}),
      57 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(6), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Up}),
      58 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(6), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Side}),
      59 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(6), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::None}),
      60 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(6), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Up}),
      61 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(6), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Side}),
      62 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(6), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::None}),
      63 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(7), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Up}),
      64 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(7), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Side}),
      65 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(7), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::None}),
      66 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(7), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Up}),
      67 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(7), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Side}),
      68 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(7), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::None}),
      69 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(7), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Up}),
      70 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(7), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Side}),
      71 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(7), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::None}),
      72 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(8), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Up}),
      73 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(8), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Side}),
      74 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(8), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::None}),
      75 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(8), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Up}),
      76 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(8), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Side}),
      77 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(8), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::None}),
      78 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(8), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Up}),
      79 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(8), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Side}),
      80 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(8), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::None}),
      81 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(9), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Up}),
      82 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(9), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Side}),
      83 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(9), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::None}),
      84 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(9), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Up}),
      85 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(9), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Side}),
      86 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(9), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::None}),
      87 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(9), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Up}),
      88 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(9), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Side}),
      89 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(9), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::None}),
      90 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(10), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Up}),
      91 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(10), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Side}),
      92 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(10), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::None}),
      93 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(10), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Up}),
      94 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(10), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Side}),
      95 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(10), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::None}),
      96 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(10), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Up}),
      97 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(10), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Side}),
      98 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(10), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::None}),
      99 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(11), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Up}),
      100 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(11), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Side}),
      101 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(11), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::None}),
      102 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(11), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Up}),
      103 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(11), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Side}),
      104 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(11), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::None}),
      105 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(11), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Up}),
      106 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(11), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Side}),
      107 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(11), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::None}),
      108 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(12), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Up}),
      109 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(12), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Side}),
      110 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(12), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::None}),
      111 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(12), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Up}),
      112 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(12), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Side}),
      113 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(12), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::None}),
      114 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(12), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Up}),
      115 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(12), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Side}),
      116 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(12), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::None}),
      117 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(13), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Up}),
      118 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(13), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Side}),
      119 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(13), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::None}),
      120 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(13), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Up}),
      121 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(13), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Side}),
      122 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(13), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::None}),
      123 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(13), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Up}),
      124 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(13), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Side}),
      125 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(13), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::None}),
      126 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(14), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Up}),
      127 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(14), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Side}),
      128 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(14), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::None}),
      129 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(14), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Up}),
      130 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(14), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Side}),
      131 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(14), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::None}),
      132 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(14), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Up}),
      133 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(14), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Side}),
      134 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(14), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::None}),
      135 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(15), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Up}),
      136 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(15), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Side}),
      137 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(15), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::None}),
      138 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(15), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Up}),
      139 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(15), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Side}),
      140 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(15), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::None}),
      141 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(15), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Up}),
      142 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(15), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Side}),
      143 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(15), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::None}),
      144 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(0), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Up}),
      145 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(0), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Side}),
      146 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(0), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::None}),
      147 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(0), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Up}),
      148 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(0), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Side}),
      149 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(0), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::None}),
      150 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(0), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Up}),
      151 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(0), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Side}),
      152 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(0), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::None}),
      153 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(1), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Up}),
      154 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(1), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Side}),
      155 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(1), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::None}),
      156 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(1), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Up}),
      157 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(1), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Side}),
      158 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(1), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::None}),
      159 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(1), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Up}),
      160 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(1), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Side}),
      161 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(1), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::None}),
      162 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(2), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Up}),
      163 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(2), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Side}),
      164 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(2), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::None}),
      165 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(2), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Up}),
      166 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(2), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Side}),
      167 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(2), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::None}),
      168 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(2), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Up}),
      169 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(2), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Side}),
      170 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(2), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::None}),
      171 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(3), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Up}),
      172 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(3), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Side}),
      173 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(3), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::None}),
      174 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(3), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Up}),
      175 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(3), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Side}),
      176 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(3), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::None}),
      177 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(3), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Up}),
      178 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(3), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Side}),
      179 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(3), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::None}),
      180 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(4), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Up}),
      181 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(4), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Side}),
      182 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(4), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::None}),
      183 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(4), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Up}),
      184 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(4), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Side}),
      185 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(4), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::None}),
      186 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(4), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Up}),
      187 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(4), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Side}),
      188 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(4), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::None}),
      189 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(5), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Up}),
      190 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(5), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Side}),
      191 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(5), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::None}),
      192 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(5), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Up}),
      193 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(5), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Side}),
      194 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(5), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::None}),
      195 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(5), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Up}),
      196 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(5), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Side}),
      197 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(5), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::None}),
      198 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(6), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Up}),
      199 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(6), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Side}),
      200 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(6), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::None}),
      201 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(6), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Up}),
      202 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(6), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Side}),
      203 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(6), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::None}),
      204 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(6), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Up}),
      205 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(6), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Side}),
      206 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(6), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::None}),
      207 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(7), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Up}),
      208 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(7), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Side}),
      209 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(7), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::None}),
      210 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(7), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Up}),
      211 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(7), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Side}),
      212 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(7), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::None}),
      213 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(7), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Up}),
      214 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(7), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Side}),
      215 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(7), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::None}),
      216 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(8), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Up}),
      217 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(8), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Side}),
      218 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(8), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::None}),
      219 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(8), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Up}),
      220 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(8), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Side}),
      221 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(8), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::None}),
      222 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(8), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Up}),
      223 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(8), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Side}),
      224 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(8), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::None}),
      225 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(9), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Up}),
      226 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(9), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Side}),
      227 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(9), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::None}),
      228 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(9), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Up}),
      229 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(9), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Side}),
      230 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(9), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::None}),
      231 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(9), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Up}),
      232 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(9), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Side}),
      233 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(9), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::None}),
      234 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(10), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Up}),
      235 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(10), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Side}),
      236 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(10), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::None}),
      237 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(10), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Up}),
      238 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(10), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Side}),
      239 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(10), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::None}),
      240 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(10), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Up}),
      241 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(10), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Side}),
      242 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(10), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::None}),
      243 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(11), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Up}),
      244 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(11), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Side}),
      245 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(11), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::None}),
      246 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(11), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Up}),
      247 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(11), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Side}),
      248 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(11), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::None}),
      249 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(11), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Up}),
      250 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(11), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Side}),
      251 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(11), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::None}),
      252 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(12), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Up}),
      253 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(12), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Side}),
      254 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(12), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::None}),
      255 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(12), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Up}),
      256 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(12), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Side}),
      257 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(12), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::None}),
      258 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(12), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Up}),
      259 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(12), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Side}),
      260 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(12), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::None}),
      261 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(13), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Up}),
      262 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(13), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Side}),
      263 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(13), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::None}),
      264 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(13), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Up}),
      265 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(13), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Side}),
      266 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(13), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::None}),
      267 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(13), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Up}),
      268 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(13), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Side}),
      269 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(13), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::None}),
      270 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(14), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Up}),
      271 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(14), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Side}),
      272 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(14), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::None}),
      273 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(14), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Up}),
      274 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(14), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Side}),
      275 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(14), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::None}),
      276 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(14), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Up}),
      277 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(14), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Side}),
      278 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(14), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::None}),
      279 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(15), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Up}),
      280 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(15), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Side}),
      281 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(15), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::None}),
      282 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(15), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Up}),
      283 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(15), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Side}),
      284 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(15), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::None}),
      285 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(15), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Up}),
      286 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(15), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Side}),
      287 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(15), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::None}),
      288 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(0), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Up}),
      289 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(0), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Side}),
      290 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(0), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::None}),
      291 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(0), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Up}),
      292 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(0), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Side}),
      293 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(0), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::None}),
      294 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(0), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Up}),
      295 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(0), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Side}),
      296 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(0), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::None}),
      297 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(1), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Up}),
      298 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(1), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Side}),
      299 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(1), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::None}),
      300 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(1), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Up}),
      301 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(1), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Side}),
      302 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(1), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::None}),
      303 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(1), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Up}),
      304 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(1), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Side}),
      305 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(1), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::None}),
      306 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(2), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Up}),
      307 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(2), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Side}),
      308 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(2), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::None}),
      309 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(2), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Up}),
      310 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(2), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Side}),
      311 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(2), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::None}),
      312 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(2), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Up}),
      313 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(2), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Side}),
      314 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(2), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::None}),
      315 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(3), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Up}),
      316 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(3), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Side}),
      317 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(3), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::None}),
      318 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(3), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Up}),
      319 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(3), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Side}),
      320 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(3), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::None}),
      321 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(3), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Up}),
      322 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(3), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Side}),
      323 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(3), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::None}),
      324 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(4), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Up}),
      325 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(4), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Side}),
      326 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(4), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::None}),
      327 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(4), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Up}),
      328 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(4), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Side}),
      329 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(4), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::None}),
      330 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(4), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Up}),
      331 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(4), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Side}),
      332 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(4), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::None}),
      333 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(5), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Up}),
      334 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(5), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Side}),
      335 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(5), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::None}),
      336 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(5), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Up}),
      337 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(5), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Side}),
      338 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(5), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::None}),
      339 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(5), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Up}),
      340 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(5), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Side}),
      341 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(5), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::None}),
      342 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(6), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Up}),
      343 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(6), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Side}),
      344 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(6), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::None}),
      345 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(6), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Up}),
      346 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(6), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Side}),
      347 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(6), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::None}),
      348 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(6), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Up}),
      349 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(6), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Side}),
      350 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(6), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::None}),
      351 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(7), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Up}),
      352 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(7), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Side}),
      353 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(7), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::None}),
      354 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(7), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Up}),
      355 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(7), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Side}),
      356 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(7), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::None}),
      357 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(7), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Up}),
      358 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(7), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Side}),
      359 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(7), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::None}),
      360 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(8), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Up}),
      361 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(8), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Side}),
      362 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(8), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::None}),
      363 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(8), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Up}),
      364 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(8), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Side}),
      365 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(8), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::None}),
      366 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(8), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Up}),
      367 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(8), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Side}),
      368 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(8), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::None}),
      369 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(9), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Up}),
      370 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(9), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Side}),
      371 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(9), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::None}),
      372 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(9), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Up}),
      373 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(9), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Side}),
      374 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(9), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::None}),
      375 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(9), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Up}),
      376 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(9), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Side}),
      377 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(9), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::None}),
      378 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(10), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Up}),
      379 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(10), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Side}),
      380 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(10), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::None}),
      381 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(10), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Up}),
      382 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(10), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Side}),
      383 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(10), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::None}),
      384 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(10), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Up}),
      385 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(10), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Side}),
      386 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(10), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::None}),
      387 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(11), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Up}),
      388 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(11), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Side}),
      389 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(11), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::None}),
      390 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(11), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Up}),
      391 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(11), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Side}),
      392 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(11), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::None}),
      393 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(11), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Up}),
      394 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(11), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Side}),
      395 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(11), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::None}),
      396 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(12), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Up}),
      397 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(12), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Side}),
      398 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(12), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::None}),
      399 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(12), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Up}),
      400 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(12), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Side}),
      401 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(12), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::None}),
      402 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(12), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Up}),
      403 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(12), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Side}),
      404 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(12), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::None}),
      405 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(13), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Up}),
      406 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(13), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Side}),
      407 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(13), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::None}),
      408 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(13), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Up}),
      409 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(13), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Side}),
      410 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(13), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::None}),
      411 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(13), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Up}),
      412 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(13), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Side}),
      413 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(13), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::None}),
      414 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(14), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Up}),
      415 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(14), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Side}),
      416 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(14), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::None}),
      417 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(14), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Up}),
      418 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(14), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Side}),
      419 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(14), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::None}),
      420 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(14), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Up}),
      421 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(14), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Side}),
      422 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(14), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::None}),
      423 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(15), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Up}),
      424 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(15), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Side}),
      425 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(15), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::None}),
      426 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(15), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Up}),
      427 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(15), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Side}),
      428 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(15), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::None}),
      429 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(15), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Up}),
      430 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(15), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Side}),
      431 => Some(Self {east: RedstoneWireConnectionProperty::Up, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(15), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::None}),
      432 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(0), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Up}),
      433 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(0), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Side}),
      434 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(0), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::None}),
      435 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(0), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Up}),
      436 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(0), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Side}),
      437 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(0), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::None}),
      438 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(0), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Up}),
      439 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(0), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Side}),
      440 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(0), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::None}),
      441 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(1), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Up}),
      442 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(1), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Side}),
      443 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(1), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::None}),
      444 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(1), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Up}),
      445 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(1), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Side}),
      446 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(1), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::None}),
      447 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(1), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Up}),
      448 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(1), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Side}),
      449 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(1), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::None}),
      450 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(2), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Up}),
      451 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(2), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Side}),
      452 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(2), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::None}),
      453 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(2), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Up}),
      454 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(2), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Side}),
      455 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(2), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::None}),
      456 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(2), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Up}),
      457 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(2), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Side}),
      458 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(2), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::None}),
      459 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(3), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Up}),
      460 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(3), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Side}),
      461 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(3), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::None}),
      462 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(3), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Up}),
      463 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(3), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Side}),
      464 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(3), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::None}),
      465 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(3), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Up}),
      466 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(3), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Side}),
      467 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(3), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::None}),
      468 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(4), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Up}),
      469 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(4), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Side}),
      470 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(4), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::None}),
      471 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(4), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Up}),
      472 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(4), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Side}),
      473 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(4), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::None}),
      474 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(4), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Up}),
      475 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(4), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Side}),
      476 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(4), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::None}),
      477 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(5), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Up}),
      478 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(5), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Side}),
      479 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(5), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::None}),
      480 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(5), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Up}),
      481 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(5), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Side}),
      482 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(5), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::None}),
      483 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(5), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Up}),
      484 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(5), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Side}),
      485 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(5), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::None}),
      486 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(6), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Up}),
      487 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(6), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Side}),
      488 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(6), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::None}),
      489 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(6), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Up}),
      490 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(6), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Side}),
      491 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(6), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::None}),
      492 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(6), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Up}),
      493 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(6), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Side}),
      494 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(6), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::None}),
      495 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(7), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Up}),
      496 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(7), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Side}),
      497 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(7), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::None}),
      498 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(7), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Up}),
      499 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(7), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Side}),
      500 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(7), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::None}),
      501 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(7), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Up}),
      502 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(7), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Side}),
      503 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(7), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::None}),
      504 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(8), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Up}),
      505 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(8), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Side}),
      506 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(8), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::None}),
      507 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(8), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Up}),
      508 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(8), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Side}),
      509 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(8), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::None}),
      510 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(8), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Up}),
      511 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(8), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Side}),
      512 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(8), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::None}),
      513 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(9), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Up}),
      514 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(9), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Side}),
      515 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(9), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::None}),
      516 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(9), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Up}),
      517 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(9), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Side}),
      518 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(9), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::None}),
      519 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(9), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Up}),
      520 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(9), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Side}),
      521 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(9), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::None}),
      522 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(10), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Up}),
      523 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(10), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Side}),
      524 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(10), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::None}),
      525 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(10), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Up}),
      526 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(10), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Side}),
      527 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(10), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::None}),
      528 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(10), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Up}),
      529 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(10), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Side}),
      530 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(10), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::None}),
      531 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(11), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Up}),
      532 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(11), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Side}),
      533 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(11), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::None}),
      534 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(11), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Up}),
      535 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(11), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Side}),
      536 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(11), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::None}),
      537 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(11), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Up}),
      538 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(11), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Side}),
      539 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(11), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::None}),
      540 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(12), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Up}),
      541 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(12), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Side}),
      542 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(12), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::None}),
      543 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(12), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Up}),
      544 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(12), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Side}),
      545 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(12), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::None}),
      546 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(12), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Up}),
      547 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(12), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Side}),
      548 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(12), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::None}),
      549 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(13), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Up}),
      550 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(13), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Side}),
      551 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(13), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::None}),
      552 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(13), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Up}),
      553 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(13), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Side}),
      554 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(13), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::None}),
      555 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(13), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Up}),
      556 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(13), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Side}),
      557 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(13), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::None}),
      558 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(14), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Up}),
      559 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(14), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Side}),
      560 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(14), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::None}),
      561 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(14), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Up}),
      562 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(14), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Side}),
      563 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(14), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::None}),
      564 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(14), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Up}),
      565 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(14), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Side}),
      566 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(14), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::None}),
      567 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(15), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Up}),
      568 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(15), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Side}),
      569 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(15), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::None}),
      570 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(15), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Up}),
      571 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(15), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Side}),
      572 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(15), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::None}),
      573 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(15), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Up}),
      574 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(15), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Side}),
      575 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(15), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::None}),
      576 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(0), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Up}),
      577 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(0), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Side}),
      578 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(0), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::None}),
      579 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(0), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Up}),
      580 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(0), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Side}),
      581 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(0), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::None}),
      582 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(0), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Up}),
      583 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(0), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Side}),
      584 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(0), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::None}),
      585 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(1), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Up}),
      586 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(1), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Side}),
      587 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(1), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::None}),
      588 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(1), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Up}),
      589 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(1), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Side}),
      590 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(1), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::None}),
      591 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(1), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Up}),
      592 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(1), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Side}),
      593 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(1), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::None}),
      594 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(2), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Up}),
      595 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(2), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Side}),
      596 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(2), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::None}),
      597 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(2), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Up}),
      598 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(2), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Side}),
      599 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(2), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::None}),
      600 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(2), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Up}),
      601 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(2), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Side}),
      602 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(2), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::None}),
      603 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(3), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Up}),
      604 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(3), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Side}),
      605 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(3), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::None}),
      606 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(3), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Up}),
      607 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(3), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Side}),
      608 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(3), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::None}),
      609 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(3), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Up}),
      610 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(3), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Side}),
      611 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(3), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::None}),
      612 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(4), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Up}),
      613 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(4), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Side}),
      614 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(4), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::None}),
      615 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(4), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Up}),
      616 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(4), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Side}),
      617 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(4), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::None}),
      618 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(4), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Up}),
      619 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(4), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Side}),
      620 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(4), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::None}),
      621 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(5), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Up}),
      622 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(5), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Side}),
      623 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(5), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::None}),
      624 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(5), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Up}),
      625 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(5), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Side}),
      626 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(5), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::None}),
      627 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(5), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Up}),
      628 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(5), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Side}),
      629 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(5), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::None}),
      630 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(6), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Up}),
      631 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(6), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Side}),
      632 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(6), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::None}),
      633 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(6), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Up}),
      634 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(6), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Side}),
      635 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(6), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::None}),
      636 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(6), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Up}),
      637 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(6), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Side}),
      638 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(6), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::None}),
      639 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(7), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Up}),
      640 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(7), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Side}),
      641 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(7), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::None}),
      642 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(7), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Up}),
      643 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(7), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Side}),
      644 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(7), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::None}),
      645 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(7), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Up}),
      646 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(7), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Side}),
      647 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(7), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::None}),
      648 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(8), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Up}),
      649 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(8), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Side}),
      650 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(8), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::None}),
      651 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(8), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Up}),
      652 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(8), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Side}),
      653 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(8), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::None}),
      654 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(8), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Up}),
      655 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(8), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Side}),
      656 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(8), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::None}),
      657 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(9), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Up}),
      658 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(9), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Side}),
      659 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(9), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::None}),
      660 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(9), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Up}),
      661 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(9), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Side}),
      662 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(9), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::None}),
      663 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(9), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Up}),
      664 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(9), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Side}),
      665 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(9), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::None}),
      666 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(10), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Up}),
      667 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(10), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Side}),
      668 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(10), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::None}),
      669 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(10), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Up}),
      670 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(10), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Side}),
      671 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(10), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::None}),
      672 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(10), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Up}),
      673 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(10), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Side}),
      674 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(10), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::None}),
      675 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(11), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Up}),
      676 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(11), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Side}),
      677 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(11), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::None}),
      678 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(11), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Up}),
      679 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(11), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Side}),
      680 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(11), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::None}),
      681 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(11), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Up}),
      682 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(11), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Side}),
      683 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(11), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::None}),
      684 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(12), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Up}),
      685 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(12), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Side}),
      686 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(12), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::None}),
      687 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(12), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Up}),
      688 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(12), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Side}),
      689 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(12), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::None}),
      690 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(12), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Up}),
      691 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(12), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Side}),
      692 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(12), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::None}),
      693 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(13), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Up}),
      694 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(13), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Side}),
      695 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(13), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::None}),
      696 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(13), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Up}),
      697 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(13), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Side}),
      698 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(13), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::None}),
      699 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(13), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Up}),
      700 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(13), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Side}),
      701 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(13), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::None}),
      702 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(14), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Up}),
      703 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(14), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Side}),
      704 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(14), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::None}),
      705 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(14), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Up}),
      706 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(14), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Side}),
      707 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(14), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::None}),
      708 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(14), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Up}),
      709 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(14), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Side}),
      710 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(14), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::None}),
      711 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(15), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Up}),
      712 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(15), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Side}),
      713 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(15), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::None}),
      714 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(15), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Up}),
      715 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(15), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Side}),
      716 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(15), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::None}),
      717 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(15), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Up}),
      718 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(15), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Side}),
      719 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(15), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::None}),
      720 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(0), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Up}),
      721 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(0), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Side}),
      722 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(0), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::None}),
      723 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(0), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Up}),
      724 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(0), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Side}),
      725 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(0), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::None}),
      726 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(0), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Up}),
      727 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(0), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Side}),
      728 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(0), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::None}),
      729 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(1), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Up}),
      730 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(1), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Side}),
      731 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(1), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::None}),
      732 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(1), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Up}),
      733 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(1), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Side}),
      734 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(1), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::None}),
      735 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(1), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Up}),
      736 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(1), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Side}),
      737 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(1), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::None}),
      738 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(2), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Up}),
      739 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(2), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Side}),
      740 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(2), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::None}),
      741 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(2), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Up}),
      742 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(2), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Side}),
      743 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(2), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::None}),
      744 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(2), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Up}),
      745 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(2), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Side}),
      746 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(2), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::None}),
      747 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(3), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Up}),
      748 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(3), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Side}),
      749 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(3), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::None}),
      750 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(3), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Up}),
      751 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(3), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Side}),
      752 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(3), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::None}),
      753 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(3), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Up}),
      754 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(3), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Side}),
      755 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(3), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::None}),
      756 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(4), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Up}),
      757 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(4), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Side}),
      758 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(4), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::None}),
      759 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(4), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Up}),
      760 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(4), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Side}),
      761 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(4), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::None}),
      762 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(4), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Up}),
      763 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(4), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Side}),
      764 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(4), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::None}),
      765 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(5), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Up}),
      766 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(5), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Side}),
      767 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(5), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::None}),
      768 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(5), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Up}),
      769 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(5), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Side}),
      770 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(5), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::None}),
      771 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(5), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Up}),
      772 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(5), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Side}),
      773 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(5), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::None}),
      774 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(6), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Up}),
      775 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(6), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Side}),
      776 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(6), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::None}),
      777 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(6), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Up}),
      778 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(6), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Side}),
      779 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(6), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::None}),
      780 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(6), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Up}),
      781 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(6), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Side}),
      782 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(6), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::None}),
      783 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(7), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Up}),
      784 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(7), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Side}),
      785 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(7), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::None}),
      786 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(7), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Up}),
      787 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(7), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Side}),
      788 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(7), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::None}),
      789 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(7), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Up}),
      790 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(7), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Side}),
      791 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(7), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::None}),
      792 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(8), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Up}),
      793 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(8), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Side}),
      794 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(8), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::None}),
      795 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(8), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Up}),
      796 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(8), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Side}),
      797 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(8), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::None}),
      798 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(8), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Up}),
      799 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(8), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Side}),
      800 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(8), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::None}),
      801 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(9), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Up}),
      802 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(9), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Side}),
      803 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(9), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::None}),
      804 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(9), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Up}),
      805 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(9), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Side}),
      806 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(9), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::None}),
      807 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(9), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Up}),
      808 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(9), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Side}),
      809 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(9), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::None}),
      810 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(10), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Up}),
      811 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(10), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Side}),
      812 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(10), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::None}),
      813 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(10), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Up}),
      814 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(10), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Side}),
      815 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(10), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::None}),
      816 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(10), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Up}),
      817 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(10), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Side}),
      818 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(10), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::None}),
      819 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(11), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Up}),
      820 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(11), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Side}),
      821 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(11), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::None}),
      822 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(11), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Up}),
      823 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(11), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Side}),
      824 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(11), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::None}),
      825 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(11), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Up}),
      826 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(11), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Side}),
      827 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(11), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::None}),
      828 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(12), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Up}),
      829 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(12), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Side}),
      830 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(12), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::None}),
      831 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(12), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Up}),
      832 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(12), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Side}),
      833 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(12), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::None}),
      834 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(12), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Up}),
      835 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(12), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Side}),
      836 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(12), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::None}),
      837 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(13), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Up}),
      838 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(13), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Side}),
      839 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(13), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::None}),
      840 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(13), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Up}),
      841 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(13), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Side}),
      842 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(13), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::None}),
      843 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(13), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Up}),
      844 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(13), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Side}),
      845 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(13), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::None}),
      846 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(14), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Up}),
      847 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(14), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Side}),
      848 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(14), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::None}),
      849 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(14), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Up}),
      850 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(14), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Side}),
      851 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(14), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::None}),
      852 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(14), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Up}),
      853 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(14), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Side}),
      854 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(14), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::None}),
      855 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(15), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Up}),
      856 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(15), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Side}),
      857 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(15), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::None}),
      858 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(15), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Up}),
      859 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(15), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Side}),
      860 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(15), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::None}),
      861 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(15), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Up}),
      862 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(15), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Side}),
      863 => Some(Self {east: RedstoneWireConnectionProperty::Side, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(15), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::None}),
      864 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(0), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Up}),
      865 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(0), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Side}),
      866 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(0), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::None}),
      867 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(0), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Up}),
      868 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(0), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Side}),
      869 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(0), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::None}),
      870 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(0), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Up}),
      871 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(0), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Side}),
      872 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(0), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::None}),
      873 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(1), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Up}),
      874 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(1), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Side}),
      875 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(1), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::None}),
      876 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(1), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Up}),
      877 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(1), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Side}),
      878 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(1), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::None}),
      879 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(1), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Up}),
      880 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(1), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Side}),
      881 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(1), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::None}),
      882 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(2), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Up}),
      883 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(2), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Side}),
      884 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(2), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::None}),
      885 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(2), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Up}),
      886 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(2), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Side}),
      887 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(2), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::None}),
      888 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(2), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Up}),
      889 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(2), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Side}),
      890 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(2), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::None}),
      891 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(3), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Up}),
      892 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(3), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Side}),
      893 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(3), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::None}),
      894 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(3), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Up}),
      895 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(3), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Side}),
      896 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(3), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::None}),
      897 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(3), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Up}),
      898 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(3), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Side}),
      899 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(3), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::None}),
      900 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(4), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Up}),
      901 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(4), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Side}),
      902 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(4), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::None}),
      903 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(4), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Up}),
      904 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(4), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Side}),
      905 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(4), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::None}),
      906 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(4), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Up}),
      907 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(4), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Side}),
      908 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(4), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::None}),
      909 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(5), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Up}),
      910 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(5), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Side}),
      911 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(5), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::None}),
      912 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(5), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Up}),
      913 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(5), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Side}),
      914 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(5), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::None}),
      915 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(5), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Up}),
      916 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(5), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Side}),
      917 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(5), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::None}),
      918 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(6), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Up}),
      919 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(6), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Side}),
      920 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(6), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::None}),
      921 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(6), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Up}),
      922 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(6), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Side}),
      923 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(6), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::None}),
      924 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(6), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Up}),
      925 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(6), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Side}),
      926 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(6), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::None}),
      927 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(7), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Up}),
      928 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(7), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Side}),
      929 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(7), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::None}),
      930 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(7), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Up}),
      931 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(7), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Side}),
      932 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(7), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::None}),
      933 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(7), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Up}),
      934 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(7), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Side}),
      935 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(7), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::None}),
      936 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(8), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Up}),
      937 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(8), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Side}),
      938 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(8), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::None}),
      939 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(8), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Up}),
      940 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(8), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Side}),
      941 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(8), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::None}),
      942 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(8), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Up}),
      943 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(8), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Side}),
      944 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(8), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::None}),
      945 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(9), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Up}),
      946 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(9), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Side}),
      947 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(9), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::None}),
      948 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(9), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Up}),
      949 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(9), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Side}),
      950 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(9), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::None}),
      951 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(9), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Up}),
      952 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(9), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Side}),
      953 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(9), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::None}),
      954 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(10), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Up}),
      955 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(10), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Side}),
      956 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(10), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::None}),
      957 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(10), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Up}),
      958 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(10), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Side}),
      959 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(10), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::None}),
      960 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(10), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Up}),
      961 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(10), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Side}),
      962 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(10), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::None}),
      963 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(11), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Up}),
      964 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(11), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Side}),
      965 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(11), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::None}),
      966 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(11), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Up}),
      967 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(11), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Side}),
      968 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(11), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::None}),
      969 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(11), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Up}),
      970 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(11), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Side}),
      971 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(11), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::None}),
      972 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(12), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Up}),
      973 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(12), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Side}),
      974 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(12), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::None}),
      975 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(12), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Up}),
      976 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(12), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Side}),
      977 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(12), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::None}),
      978 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(12), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Up}),
      979 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(12), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Side}),
      980 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(12), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::None}),
      981 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(13), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Up}),
      982 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(13), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Side}),
      983 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(13), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::None}),
      984 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(13), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Up}),
      985 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(13), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Side}),
      986 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(13), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::None}),
      987 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(13), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Up}),
      988 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(13), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Side}),
      989 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(13), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::None}),
      990 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(14), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Up}),
      991 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(14), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Side}),
      992 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(14), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::None}),
      993 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(14), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Up}),
      994 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(14), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Side}),
      995 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(14), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::None}),
      996 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(14), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Up}),
      997 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(14), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Side}),
      998 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(14), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::None}),
      999 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(15), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Up}),
      1000 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(15), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Side}),
      1001 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(15), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::None}),
      1002 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(15), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Up}),
      1003 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(15), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Side}),
      1004 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(15), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::None}),
      1005 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(15), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Up}),
      1006 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(15), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Side}),
      1007 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Up, power: NumberFrom0To15Property::new(15), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::None}),
      1008 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(0), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Up}),
      1009 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(0), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Side}),
      1010 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(0), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::None}),
      1011 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(0), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Up}),
      1012 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(0), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Side}),
      1013 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(0), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::None}),
      1014 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(0), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Up}),
      1015 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(0), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Side}),
      1016 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(0), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::None}),
      1017 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(1), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Up}),
      1018 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(1), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Side}),
      1019 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(1), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::None}),
      1020 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(1), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Up}),
      1021 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(1), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Side}),
      1022 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(1), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::None}),
      1023 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(1), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Up}),
      1024 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(1), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Side}),
      1025 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(1), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::None}),
      1026 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(2), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Up}),
      1027 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(2), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Side}),
      1028 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(2), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::None}),
      1029 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(2), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Up}),
      1030 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(2), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Side}),
      1031 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(2), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::None}),
      1032 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(2), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Up}),
      1033 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(2), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Side}),
      1034 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(2), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::None}),
      1035 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(3), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Up}),
      1036 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(3), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Side}),
      1037 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(3), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::None}),
      1038 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(3), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Up}),
      1039 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(3), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Side}),
      1040 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(3), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::None}),
      1041 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(3), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Up}),
      1042 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(3), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Side}),
      1043 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(3), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::None}),
      1044 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(4), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Up}),
      1045 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(4), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Side}),
      1046 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(4), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::None}),
      1047 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(4), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Up}),
      1048 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(4), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Side}),
      1049 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(4), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::None}),
      1050 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(4), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Up}),
      1051 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(4), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Side}),
      1052 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(4), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::None}),
      1053 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(5), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Up}),
      1054 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(5), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Side}),
      1055 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(5), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::None}),
      1056 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(5), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Up}),
      1057 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(5), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Side}),
      1058 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(5), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::None}),
      1059 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(5), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Up}),
      1060 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(5), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Side}),
      1061 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(5), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::None}),
      1062 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(6), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Up}),
      1063 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(6), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Side}),
      1064 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(6), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::None}),
      1065 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(6), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Up}),
      1066 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(6), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Side}),
      1067 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(6), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::None}),
      1068 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(6), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Up}),
      1069 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(6), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Side}),
      1070 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(6), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::None}),
      1071 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(7), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Up}),
      1072 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(7), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Side}),
      1073 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(7), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::None}),
      1074 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(7), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Up}),
      1075 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(7), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Side}),
      1076 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(7), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::None}),
      1077 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(7), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Up}),
      1078 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(7), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Side}),
      1079 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(7), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::None}),
      1080 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(8), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Up}),
      1081 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(8), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Side}),
      1082 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(8), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::None}),
      1083 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(8), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Up}),
      1084 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(8), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Side}),
      1085 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(8), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::None}),
      1086 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(8), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Up}),
      1087 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(8), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Side}),
      1088 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(8), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::None}),
      1089 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(9), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Up}),
      1090 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(9), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Side}),
      1091 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(9), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::None}),
      1092 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(9), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Up}),
      1093 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(9), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Side}),
      1094 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(9), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::None}),
      1095 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(9), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Up}),
      1096 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(9), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Side}),
      1097 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(9), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::None}),
      1098 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(10), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Up}),
      1099 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(10), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Side}),
      1100 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(10), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::None}),
      1101 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(10), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Up}),
      1102 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(10), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Side}),
      1103 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(10), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::None}),
      1104 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(10), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Up}),
      1105 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(10), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Side}),
      1106 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(10), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::None}),
      1107 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(11), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Up}),
      1108 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(11), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Side}),
      1109 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(11), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::None}),
      1110 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(11), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Up}),
      1111 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(11), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Side}),
      1112 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(11), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::None}),
      1113 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(11), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Up}),
      1114 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(11), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Side}),
      1115 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(11), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::None}),
      1116 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(12), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Up}),
      1117 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(12), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Side}),
      1118 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(12), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::None}),
      1119 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(12), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Up}),
      1120 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(12), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Side}),
      1121 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(12), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::None}),
      1122 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(12), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Up}),
      1123 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(12), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Side}),
      1124 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(12), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::None}),
      1125 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(13), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Up}),
      1126 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(13), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Side}),
      1127 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(13), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::None}),
      1128 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(13), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Up}),
      1129 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(13), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Side}),
      1130 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(13), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::None}),
      1131 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(13), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Up}),
      1132 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(13), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Side}),
      1133 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(13), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::None}),
      1134 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(14), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Up}),
      1135 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(14), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Side}),
      1136 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(14), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::None}),
      1137 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(14), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Up}),
      1138 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(14), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Side}),
      1139 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(14), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::None}),
      1140 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(14), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Up}),
      1141 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(14), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Side}),
      1142 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(14), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::None}),
      1143 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(15), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Up}),
      1144 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(15), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Side}),
      1145 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(15), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::None}),
      1146 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(15), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Up}),
      1147 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(15), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Side}),
      1148 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(15), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::None}),
      1149 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(15), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Up}),
      1150 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(15), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Side}),
      1151 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::Side, power: NumberFrom0To15Property::new(15), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::None}),
      1152 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(0), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Up}),
      1153 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(0), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Side}),
      1154 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(0), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::None}),
      1155 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(0), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Up}),
      1156 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(0), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Side}),
      1157 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(0), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::None}),
      1158 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(0), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Up}),
      1159 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(0), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Side}),
      1160 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(0), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::None}),
      1161 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(1), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Up}),
      1162 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(1), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Side}),
      1163 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(1), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::None}),
      1164 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(1), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Up}),
      1165 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(1), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Side}),
      1166 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(1), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::None}),
      1167 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(1), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Up}),
      1168 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(1), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Side}),
      1169 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(1), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::None}),
      1170 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(2), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Up}),
      1171 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(2), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Side}),
      1172 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(2), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::None}),
      1173 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(2), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Up}),
      1174 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(2), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Side}),
      1175 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(2), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::None}),
      1176 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(2), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Up}),
      1177 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(2), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Side}),
      1178 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(2), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::None}),
      1179 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(3), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Up}),
      1180 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(3), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Side}),
      1181 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(3), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::None}),
      1182 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(3), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Up}),
      1183 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(3), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Side}),
      1184 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(3), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::None}),
      1185 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(3), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Up}),
      1186 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(3), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Side}),
      1187 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(3), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::None}),
      1188 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(4), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Up}),
      1189 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(4), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Side}),
      1190 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(4), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::None}),
      1191 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(4), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Up}),
      1192 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(4), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Side}),
      1193 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(4), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::None}),
      1194 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(4), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Up}),
      1195 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(4), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Side}),
      1196 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(4), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::None}),
      1197 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(5), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Up}),
      1198 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(5), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Side}),
      1199 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(5), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::None}),
      1200 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(5), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Up}),
      1201 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(5), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Side}),
      1202 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(5), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::None}),
      1203 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(5), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Up}),
      1204 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(5), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Side}),
      1205 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(5), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::None}),
      1206 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(6), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Up}),
      1207 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(6), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Side}),
      1208 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(6), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::None}),
      1209 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(6), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Up}),
      1210 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(6), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Side}),
      1211 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(6), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::None}),
      1212 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(6), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Up}),
      1213 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(6), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Side}),
      1214 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(6), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::None}),
      1215 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(7), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Up}),
      1216 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(7), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Side}),
      1217 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(7), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::None}),
      1218 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(7), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Up}),
      1219 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(7), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Side}),
      1220 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(7), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::None}),
      1221 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(7), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Up}),
      1222 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(7), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Side}),
      1223 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(7), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::None}),
      1224 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(8), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Up}),
      1225 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(8), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Side}),
      1226 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(8), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::None}),
      1227 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(8), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Up}),
      1228 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(8), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Side}),
      1229 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(8), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::None}),
      1230 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(8), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Up}),
      1231 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(8), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Side}),
      1232 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(8), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::None}),
      1233 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(9), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Up}),
      1234 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(9), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Side}),
      1235 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(9), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::None}),
      1236 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(9), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Up}),
      1237 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(9), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Side}),
      1238 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(9), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::None}),
      1239 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(9), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Up}),
      1240 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(9), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Side}),
      1241 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(9), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::None}),
      1242 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(10), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Up}),
      1243 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(10), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Side}),
      1244 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(10), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::None}),
      1245 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(10), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Up}),
      1246 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(10), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Side}),
      1247 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(10), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::None}),
      1248 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(10), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Up}),
      1249 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(10), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Side}),
      1250 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(10), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::None}),
      1251 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(11), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Up}),
      1252 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(11), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Side}),
      1253 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(11), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::None}),
      1254 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(11), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Up}),
      1255 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(11), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Side}),
      1256 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(11), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::None}),
      1257 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(11), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Up}),
      1258 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(11), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Side}),
      1259 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(11), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::None}),
      1260 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(12), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Up}),
      1261 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(12), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Side}),
      1262 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(12), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::None}),
      1263 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(12), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Up}),
      1264 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(12), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Side}),
      1265 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(12), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::None}),
      1266 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(12), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Up}),
      1267 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(12), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Side}),
      1268 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(12), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::None}),
      1269 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(13), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Up}),
      1270 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(13), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Side}),
      1271 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(13), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::None}),
      1272 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(13), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Up}),
      1273 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(13), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Side}),
      1274 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(13), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::None}),
      1275 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(13), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Up}),
      1276 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(13), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Side}),
      1277 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(13), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::None}),
      1278 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(14), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Up}),
      1279 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(14), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Side}),
      1280 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(14), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::None}),
      1281 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(14), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Up}),
      1282 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(14), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Side}),
      1283 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(14), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::None}),
      1284 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(14), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Up}),
      1285 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(14), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Side}),
      1286 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(14), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::None}),
      1287 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(15), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Up}),
      1288 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(15), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::Side}),
      1289 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(15), south: RedstoneWireConnectionProperty::Up, west: RedstoneWireConnectionProperty::None}),
      1290 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(15), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Up}),
      1291 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(15), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::Side}),
      1292 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(15), south: RedstoneWireConnectionProperty::Side, west: RedstoneWireConnectionProperty::None}),
      1293 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(15), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Up}),
      1294 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(15), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::Side}),
      1295 => Some(Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(15), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::None}),
      _ => None,
    }
  }
  pub fn to_offset(self) -> usize {
    match self.east {
      RedstoneWireConnectionProperty::Up => match self.north {
        RedstoneWireConnectionProperty::Up => match self.power.value() {
          0 => match self.south {
            RedstoneWireConnectionProperty::Up => match self.west {
              RedstoneWireConnectionProperty::Up => 0,
              RedstoneWireConnectionProperty::Side => 1,
              RedstoneWireConnectionProperty::None => 2,
            },
            RedstoneWireConnectionProperty::Side => match self.west {
              RedstoneWireConnectionProperty::Up => 3,
              RedstoneWireConnectionProperty::Side => 4,
              RedstoneWireConnectionProperty::None => 5,
            },
            RedstoneWireConnectionProperty::None => match self.west {
              RedstoneWireConnectionProperty::Up => 6,
              RedstoneWireConnectionProperty::Side => 7,
              RedstoneWireConnectionProperty::None => 8,
            },
          },
          1 => match self.south {
            RedstoneWireConnectionProperty::Up => match self.west {
              RedstoneWireConnectionProperty::Up => 9,
              RedstoneWireConnectionProperty::Side => 10,
              RedstoneWireConnectionProperty::None => 11,
            },
            RedstoneWireConnectionProperty::Side => match self.west {
              RedstoneWireConnectionProperty::Up => 12,
              RedstoneWireConnectionProperty::Side => 13,
              RedstoneWireConnectionProperty::None => 14,
            },
            RedstoneWireConnectionProperty::None => match self.west {
              RedstoneWireConnectionProperty::Up => 15,
              RedstoneWireConnectionProperty::Side => 16,
              RedstoneWireConnectionProperty::None => 17,
            },
          },
          2 => match self.south {
            RedstoneWireConnectionProperty::Up => match self.west {
              RedstoneWireConnectionProperty::Up => 18,
              RedstoneWireConnectionProperty::Side => 19,
              RedstoneWireConnectionProperty::None => 20,
            },
            RedstoneWireConnectionProperty::Side => match self.west {
              RedstoneWireConnectionProperty::Up => 21,
              RedstoneWireConnectionProperty::Side => 22,
              RedstoneWireConnectionProperty::None => 23,
            },
            RedstoneWireConnectionProperty::None => match self.west {
              RedstoneWireConnectionProperty::Up => 24,
              RedstoneWireConnectionProperty::Side => 25,
              RedstoneWireConnectionProperty::None => 26,
            },
          },
          3 => match self.south {
            RedstoneWireConnectionProperty::Up => match self.west {
              RedstoneWireConnectionProperty::Up => 27,
              RedstoneWireConnectionProperty::Side => 28,
              RedstoneWireConnectionProperty::None => 29,
            },
            RedstoneWireConnectionProperty::Side => match self.west {
              RedstoneWireConnectionProperty::Up => 30,
              RedstoneWireConnectionProperty::Side => 31,
              RedstoneWireConnectionProperty::None => 32,
            },
            RedstoneWireConnectionProperty::None => match self.west {
              RedstoneWireConnectionProperty::Up => 33,
              RedstoneWireConnectionProperty::Side => 34,
              RedstoneWireConnectionProperty::None => 35,
            },
          },
          4 => match self.south {
            RedstoneWireConnectionProperty::Up => match self.west {
              RedstoneWireConnectionProperty::Up => 36,
              RedstoneWireConnectionProperty::Side => 37,
              RedstoneWireConnectionProperty::None => 38,
            },
            RedstoneWireConnectionProperty::Side => match self.west {
              RedstoneWireConnectionProperty::Up => 39,
              RedstoneWireConnectionProperty::Side => 40,
              RedstoneWireConnectionProperty::None => 41,
            },
            RedstoneWireConnectionProperty::None => match self.west {
              RedstoneWireConnectionProperty::Up => 42,
              RedstoneWireConnectionProperty::Side => 43,
              RedstoneWireConnectionProperty::None => 44,
            },
          },
          5 => match self.south {
            RedstoneWireConnectionProperty::Up => match self.west {
              RedstoneWireConnectionProperty::Up => 45,
              RedstoneWireConnectionProperty::Side => 46,
              RedstoneWireConnectionProperty::None => 47,
            },
            RedstoneWireConnectionProperty::Side => match self.west {
              RedstoneWireConnectionProperty::Up => 48,
              RedstoneWireConnectionProperty::Side => 49,
              RedstoneWireConnectionProperty::None => 50,
            },
            RedstoneWireConnectionProperty::None => match self.west {
              RedstoneWireConnectionProperty::Up => 51,
              RedstoneWireConnectionProperty::Side => 52,
              RedstoneWireConnectionProperty::None => 53,
            },
          },
          6 => match self.south {
            RedstoneWireConnectionProperty::Up => match self.west {
              RedstoneWireConnectionProperty::Up => 54,
              RedstoneWireConnectionProperty::Side => 55,
              RedstoneWireConnectionProperty::None => 56,
            },
            RedstoneWireConnectionProperty::Side => match self.west {
              RedstoneWireConnectionProperty::Up => 57,
              RedstoneWireConnectionProperty::Side => 58,
              RedstoneWireConnectionProperty::None => 59,
            },
            RedstoneWireConnectionProperty::None => match self.west {
              RedstoneWireConnectionProperty::Up => 60,
              RedstoneWireConnectionProperty::Side => 61,
              RedstoneWireConnectionProperty::None => 62,
            },
          },
          7 => match self.south {
            RedstoneWireConnectionProperty::Up => match self.west {
              RedstoneWireConnectionProperty::Up => 63,
              RedstoneWireConnectionProperty::Side => 64,
              RedstoneWireConnectionProperty::None => 65,
            },
            RedstoneWireConnectionProperty::Side => match self.west {
              RedstoneWireConnectionProperty::Up => 66,
              RedstoneWireConnectionProperty::Side => 67,
              RedstoneWireConnectionProperty::None => 68,
            },
            RedstoneWireConnectionProperty::None => match self.west {
              RedstoneWireConnectionProperty::Up => 69,
              RedstoneWireConnectionProperty::Side => 70,
              RedstoneWireConnectionProperty::None => 71,
            },
          },
          8 => match self.south {
            RedstoneWireConnectionProperty::Up => match self.west {
              RedstoneWireConnectionProperty::Up => 72,
              RedstoneWireConnectionProperty::Side => 73,
              RedstoneWireConnectionProperty::None => 74,
            },
            RedstoneWireConnectionProperty::Side => match self.west {
              RedstoneWireConnectionProperty::Up => 75,
              RedstoneWireConnectionProperty::Side => 76,
              RedstoneWireConnectionProperty::None => 77,
            },
            RedstoneWireConnectionProperty::None => match self.west {
              RedstoneWireConnectionProperty::Up => 78,
              RedstoneWireConnectionProperty::Side => 79,
              RedstoneWireConnectionProperty::None => 80,
            },
          },
          9 => match self.south {
            RedstoneWireConnectionProperty::Up => match self.west {
              RedstoneWireConnectionProperty::Up => 81,
              RedstoneWireConnectionProperty::Side => 82,
              RedstoneWireConnectionProperty::None => 83,
            },
            RedstoneWireConnectionProperty::Side => match self.west {
              RedstoneWireConnectionProperty::Up => 84,
              RedstoneWireConnectionProperty::Side => 85,
              RedstoneWireConnectionProperty::None => 86,
            },
            RedstoneWireConnectionProperty::None => match self.west {
              RedstoneWireConnectionProperty::Up => 87,
              RedstoneWireConnectionProperty::Side => 88,
              RedstoneWireConnectionProperty::None => 89,
            },
          },
          10 => match self.south {
            RedstoneWireConnectionProperty::Up => match self.west {
              RedstoneWireConnectionProperty::Up => 90,
              RedstoneWireConnectionProperty::Side => 91,
              RedstoneWireConnectionProperty::None => 92,
            },
            RedstoneWireConnectionProperty::Side => match self.west {
              RedstoneWireConnectionProperty::Up => 93,
              RedstoneWireConnectionProperty::Side => 94,
              RedstoneWireConnectionProperty::None => 95,
            },
            RedstoneWireConnectionProperty::None => match self.west {
              RedstoneWireConnectionProperty::Up => 96,
              RedstoneWireConnectionProperty::Side => 97,
              RedstoneWireConnectionProperty::None => 98,
            },
          },
          11 => match self.south {
            RedstoneWireConnectionProperty::Up => match self.west {
              RedstoneWireConnectionProperty::Up => 99,
              RedstoneWireConnectionProperty::Side => 100,
              RedstoneWireConnectionProperty::None => 101,
            },
            RedstoneWireConnectionProperty::Side => match self.west {
              RedstoneWireConnectionProperty::Up => 102,
              RedstoneWireConnectionProperty::Side => 103,
              RedstoneWireConnectionProperty::None => 104,
            },
            RedstoneWireConnectionProperty::None => match self.west {
              RedstoneWireConnectionProperty::Up => 105,
              RedstoneWireConnectionProperty::Side => 106,
              RedstoneWireConnectionProperty::None => 107,
            },
          },
          12 => match self.south {
            RedstoneWireConnectionProperty::Up => match self.west {
              RedstoneWireConnectionProperty::Up => 108,
              RedstoneWireConnectionProperty::Side => 109,
              RedstoneWireConnectionProperty::None => 110,
            },
            RedstoneWireConnectionProperty::Side => match self.west {
              RedstoneWireConnectionProperty::Up => 111,
              RedstoneWireConnectionProperty::Side => 112,
              RedstoneWireConnectionProperty::None => 113,
            },
            RedstoneWireConnectionProperty::None => match self.west {
              RedstoneWireConnectionProperty::Up => 114,
              RedstoneWireConnectionProperty::Side => 115,
              RedstoneWireConnectionProperty::None => 116,
            },
          },
          13 => match self.south {
            RedstoneWireConnectionProperty::Up => match self.west {
              RedstoneWireConnectionProperty::Up => 117,
              RedstoneWireConnectionProperty::Side => 118,
              RedstoneWireConnectionProperty::None => 119,
            },
            RedstoneWireConnectionProperty::Side => match self.west {
              RedstoneWireConnectionProperty::Up => 120,
              RedstoneWireConnectionProperty::Side => 121,
              RedstoneWireConnectionProperty::None => 122,
            },
            RedstoneWireConnectionProperty::None => match self.west {
              RedstoneWireConnectionProperty::Up => 123,
              RedstoneWireConnectionProperty::Side => 124,
              RedstoneWireConnectionProperty::None => 125,
            },
          },
          14 => match self.south {
            RedstoneWireConnectionProperty::Up => match self.west {
              RedstoneWireConnectionProperty::Up => 126,
              RedstoneWireConnectionProperty::Side => 127,
              RedstoneWireConnectionProperty::None => 128,
            },
            RedstoneWireConnectionProperty::Side => match self.west {
              RedstoneWireConnectionProperty::Up => 129,
              RedstoneWireConnectionProperty::Side => 130,
              RedstoneWireConnectionProperty::None => 131,
            },
            RedstoneWireConnectionProperty::None => match self.west {
              RedstoneWireConnectionProperty::Up => 132,
              RedstoneWireConnectionProperty::Side => 133,
              RedstoneWireConnectionProperty::None => 134,
            },
          },
          15 => match self.south {
            RedstoneWireConnectionProperty::Up => match self.west {
              RedstoneWireConnectionProperty::Up => 135,
              RedstoneWireConnectionProperty::Side => 136,
              RedstoneWireConnectionProperty::None => 137,
            },
            RedstoneWireConnectionProperty::Side => match self.west {
              RedstoneWireConnectionProperty::Up => 138,
              RedstoneWireConnectionProperty::Side => 139,
              RedstoneWireConnectionProperty::None => 140,
            },
            RedstoneWireConnectionProperty::None => match self.west {
              RedstoneWireConnectionProperty::Up => 141,
              RedstoneWireConnectionProperty::Side => 142,
              RedstoneWireConnectionProperty::None => 143,
            },
          },
          _ => panic!("Illegal Block State"),
        },
        RedstoneWireConnectionProperty::Side => match self.power.value() {
          0 => match self.south {
            RedstoneWireConnectionProperty::Up => match self.west {
              RedstoneWireConnectionProperty::Up => 144,
              RedstoneWireConnectionProperty::Side => 145,
              RedstoneWireConnectionProperty::None => 146,
            },
            RedstoneWireConnectionProperty::Side => match self.west {
              RedstoneWireConnectionProperty::Up => 147,
              RedstoneWireConnectionProperty::Side => 148,
              RedstoneWireConnectionProperty::None => 149,
            },
            RedstoneWireConnectionProperty::None => match self.west {
              RedstoneWireConnectionProperty::Up => 150,
              RedstoneWireConnectionProperty::Side => 151,
              RedstoneWireConnectionProperty::None => 152,
            },
          },
          1 => match self.south {
            RedstoneWireConnectionProperty::Up => match self.west {
              RedstoneWireConnectionProperty::Up => 153,
              RedstoneWireConnectionProperty::Side => 154,
              RedstoneWireConnectionProperty::None => 155,
            },
            RedstoneWireConnectionProperty::Side => match self.west {
              RedstoneWireConnectionProperty::Up => 156,
              RedstoneWireConnectionProperty::Side => 157,
              RedstoneWireConnectionProperty::None => 158,
            },
            RedstoneWireConnectionProperty::None => match self.west {
              RedstoneWireConnectionProperty::Up => 159,
              RedstoneWireConnectionProperty::Side => 160,
              RedstoneWireConnectionProperty::None => 161,
            },
          },
          2 => match self.south {
            RedstoneWireConnectionProperty::Up => match self.west {
              RedstoneWireConnectionProperty::Up => 162,
              RedstoneWireConnectionProperty::Side => 163,
              RedstoneWireConnectionProperty::None => 164,
            },
            RedstoneWireConnectionProperty::Side => match self.west {
              RedstoneWireConnectionProperty::Up => 165,
              RedstoneWireConnectionProperty::Side => 166,
              RedstoneWireConnectionProperty::None => 167,
            },
            RedstoneWireConnectionProperty::None => match self.west {
              RedstoneWireConnectionProperty::Up => 168,
              RedstoneWireConnectionProperty::Side => 169,
              RedstoneWireConnectionProperty::None => 170,
            },
          },
          3 => match self.south {
            RedstoneWireConnectionProperty::Up => match self.west {
              RedstoneWireConnectionProperty::Up => 171,
              RedstoneWireConnectionProperty::Side => 172,
              RedstoneWireConnectionProperty::None => 173,
            },
            RedstoneWireConnectionProperty::Side => match self.west {
              RedstoneWireConnectionProperty::Up => 174,
              RedstoneWireConnectionProperty::Side => 175,
              RedstoneWireConnectionProperty::None => 176,
            },
            RedstoneWireConnectionProperty::None => match self.west {
              RedstoneWireConnectionProperty::Up => 177,
              RedstoneWireConnectionProperty::Side => 178,
              RedstoneWireConnectionProperty::None => 179,
            },
          },
          4 => match self.south {
            RedstoneWireConnectionProperty::Up => match self.west {
              RedstoneWireConnectionProperty::Up => 180,
              RedstoneWireConnectionProperty::Side => 181,
              RedstoneWireConnectionProperty::None => 182,
            },
            RedstoneWireConnectionProperty::Side => match self.west {
              RedstoneWireConnectionProperty::Up => 183,
              RedstoneWireConnectionProperty::Side => 184,
              RedstoneWireConnectionProperty::None => 185,
            },
            RedstoneWireConnectionProperty::None => match self.west {
              RedstoneWireConnectionProperty::Up => 186,
              RedstoneWireConnectionProperty::Side => 187,
              RedstoneWireConnectionProperty::None => 188,
            },
          },
          5 => match self.south {
            RedstoneWireConnectionProperty::Up => match self.west {
              RedstoneWireConnectionProperty::Up => 189,
              RedstoneWireConnectionProperty::Side => 190,
              RedstoneWireConnectionProperty::None => 191,
            },
            RedstoneWireConnectionProperty::Side => match self.west {
              RedstoneWireConnectionProperty::Up => 192,
              RedstoneWireConnectionProperty::Side => 193,
              RedstoneWireConnectionProperty::None => 194,
            },
            RedstoneWireConnectionProperty::None => match self.west {
              RedstoneWireConnectionProperty::Up => 195,
              RedstoneWireConnectionProperty::Side => 196,
              RedstoneWireConnectionProperty::None => 197,
            },
          },
          6 => match self.south {
            RedstoneWireConnectionProperty::Up => match self.west {
              RedstoneWireConnectionProperty::Up => 198,
              RedstoneWireConnectionProperty::Side => 199,
              RedstoneWireConnectionProperty::None => 200,
            },
            RedstoneWireConnectionProperty::Side => match self.west {
              RedstoneWireConnectionProperty::Up => 201,
              RedstoneWireConnectionProperty::Side => 202,
              RedstoneWireConnectionProperty::None => 203,
            },
            RedstoneWireConnectionProperty::None => match self.west {
              RedstoneWireConnectionProperty::Up => 204,
              RedstoneWireConnectionProperty::Side => 205,
              RedstoneWireConnectionProperty::None => 206,
            },
          },
          7 => match self.south {
            RedstoneWireConnectionProperty::Up => match self.west {
              RedstoneWireConnectionProperty::Up => 207,
              RedstoneWireConnectionProperty::Side => 208,
              RedstoneWireConnectionProperty::None => 209,
            },
            RedstoneWireConnectionProperty::Side => match self.west {
              RedstoneWireConnectionProperty::Up => 210,
              RedstoneWireConnectionProperty::Side => 211,
              RedstoneWireConnectionProperty::None => 212,
            },
            RedstoneWireConnectionProperty::None => match self.west {
              RedstoneWireConnectionProperty::Up => 213,
              RedstoneWireConnectionProperty::Side => 214,
              RedstoneWireConnectionProperty::None => 215,
            },
          },
          8 => match self.south {
            RedstoneWireConnectionProperty::Up => match self.west {
              RedstoneWireConnectionProperty::Up => 216,
              RedstoneWireConnectionProperty::Side => 217,
              RedstoneWireConnectionProperty::None => 218,
            },
            RedstoneWireConnectionProperty::Side => match self.west {
              RedstoneWireConnectionProperty::Up => 219,
              RedstoneWireConnectionProperty::Side => 220,
              RedstoneWireConnectionProperty::None => 221,
            },
            RedstoneWireConnectionProperty::None => match self.west {
              RedstoneWireConnectionProperty::Up => 222,
              RedstoneWireConnectionProperty::Side => 223,
              RedstoneWireConnectionProperty::None => 224,
            },
          },
          9 => match self.south {
            RedstoneWireConnectionProperty::Up => match self.west {
              RedstoneWireConnectionProperty::Up => 225,
              RedstoneWireConnectionProperty::Side => 226,
              RedstoneWireConnectionProperty::None => 227,
            },
            RedstoneWireConnectionProperty::Side => match self.west {
              RedstoneWireConnectionProperty::Up => 228,
              RedstoneWireConnectionProperty::Side => 229,
              RedstoneWireConnectionProperty::None => 230,
            },
            RedstoneWireConnectionProperty::None => match self.west {
              RedstoneWireConnectionProperty::Up => 231,
              RedstoneWireConnectionProperty::Side => 232,
              RedstoneWireConnectionProperty::None => 233,
            },
          },
          10 => match self.south {
            RedstoneWireConnectionProperty::Up => match self.west {
              RedstoneWireConnectionProperty::Up => 234,
              RedstoneWireConnectionProperty::Side => 235,
              RedstoneWireConnectionProperty::None => 236,
            },
            RedstoneWireConnectionProperty::Side => match self.west {
              RedstoneWireConnectionProperty::Up => 237,
              RedstoneWireConnectionProperty::Side => 238,
              RedstoneWireConnectionProperty::None => 239,
            },
            RedstoneWireConnectionProperty::None => match self.west {
              RedstoneWireConnectionProperty::Up => 240,
              RedstoneWireConnectionProperty::Side => 241,
              RedstoneWireConnectionProperty::None => 242,
            },
          },
          11 => match self.south {
            RedstoneWireConnectionProperty::Up => match self.west {
              RedstoneWireConnectionProperty::Up => 243,
              RedstoneWireConnectionProperty::Side => 244,
              RedstoneWireConnectionProperty::None => 245,
            },
            RedstoneWireConnectionProperty::Side => match self.west {
              RedstoneWireConnectionProperty::Up => 246,
              RedstoneWireConnectionProperty::Side => 247,
              RedstoneWireConnectionProperty::None => 248,
            },
            RedstoneWireConnectionProperty::None => match self.west {
              RedstoneWireConnectionProperty::Up => 249,
              RedstoneWireConnectionProperty::Side => 250,
              RedstoneWireConnectionProperty::None => 251,
            },
          },
          12 => match self.south {
            RedstoneWireConnectionProperty::Up => match self.west {
              RedstoneWireConnectionProperty::Up => 252,
              RedstoneWireConnectionProperty::Side => 253,
              RedstoneWireConnectionProperty::None => 254,
            },
            RedstoneWireConnectionProperty::Side => match self.west {
              RedstoneWireConnectionProperty::Up => 255,
              RedstoneWireConnectionProperty::Side => 256,
              RedstoneWireConnectionProperty::None => 257,
            },
            RedstoneWireConnectionProperty::None => match self.west {
              RedstoneWireConnectionProperty::Up => 258,
              RedstoneWireConnectionProperty::Side => 259,
              RedstoneWireConnectionProperty::None => 260,
            },
          },
          13 => match self.south {
            RedstoneWireConnectionProperty::Up => match self.west {
              RedstoneWireConnectionProperty::Up => 261,
              RedstoneWireConnectionProperty::Side => 262,
              RedstoneWireConnectionProperty::None => 263,
            },
            RedstoneWireConnectionProperty::Side => match self.west {
              RedstoneWireConnectionProperty::Up => 264,
              RedstoneWireConnectionProperty::Side => 265,
              RedstoneWireConnectionProperty::None => 266,
            },
            RedstoneWireConnectionProperty::None => match self.west {
              RedstoneWireConnectionProperty::Up => 267,
              RedstoneWireConnectionProperty::Side => 268,
              RedstoneWireConnectionProperty::None => 269,
            },
          },
          14 => match self.south {
            RedstoneWireConnectionProperty::Up => match self.west {
              RedstoneWireConnectionProperty::Up => 270,
              RedstoneWireConnectionProperty::Side => 271,
              RedstoneWireConnectionProperty::None => 272,
            },
            RedstoneWireConnectionProperty::Side => match self.west {
              RedstoneWireConnectionProperty::Up => 273,
              RedstoneWireConnectionProperty::Side => 274,
              RedstoneWireConnectionProperty::None => 275,
            },
            RedstoneWireConnectionProperty::None => match self.west {
              RedstoneWireConnectionProperty::Up => 276,
              RedstoneWireConnectionProperty::Side => 277,
              RedstoneWireConnectionProperty::None => 278,
            },
          },
          15 => match self.south {
            RedstoneWireConnectionProperty::Up => match self.west {
              RedstoneWireConnectionProperty::Up => 279,
              RedstoneWireConnectionProperty::Side => 280,
              RedstoneWireConnectionProperty::None => 281,
            },
            RedstoneWireConnectionProperty::Side => match self.west {
              RedstoneWireConnectionProperty::Up => 282,
              RedstoneWireConnectionProperty::Side => 283,
              RedstoneWireConnectionProperty::None => 284,
            },
            RedstoneWireConnectionProperty::None => match self.west {
              RedstoneWireConnectionProperty::Up => 285,
              RedstoneWireConnectionProperty::Side => 286,
              RedstoneWireConnectionProperty::None => 287,
            },
          },
          _ => panic!("Illegal Block State"),
        },
        RedstoneWireConnectionProperty::None => match self.power.value() {
          0 => match self.south {
            RedstoneWireConnectionProperty::Up => match self.west {
              RedstoneWireConnectionProperty::Up => 288,
              RedstoneWireConnectionProperty::Side => 289,
              RedstoneWireConnectionProperty::None => 290,
            },
            RedstoneWireConnectionProperty::Side => match self.west {
              RedstoneWireConnectionProperty::Up => 291,
              RedstoneWireConnectionProperty::Side => 292,
              RedstoneWireConnectionProperty::None => 293,
            },
            RedstoneWireConnectionProperty::None => match self.west {
              RedstoneWireConnectionProperty::Up => 294,
              RedstoneWireConnectionProperty::Side => 295,
              RedstoneWireConnectionProperty::None => 296,
            },
          },
          1 => match self.south {
            RedstoneWireConnectionProperty::Up => match self.west {
              RedstoneWireConnectionProperty::Up => 297,
              RedstoneWireConnectionProperty::Side => 298,
              RedstoneWireConnectionProperty::None => 299,
            },
            RedstoneWireConnectionProperty::Side => match self.west {
              RedstoneWireConnectionProperty::Up => 300,
              RedstoneWireConnectionProperty::Side => 301,
              RedstoneWireConnectionProperty::None => 302,
            },
            RedstoneWireConnectionProperty::None => match self.west {
              RedstoneWireConnectionProperty::Up => 303,
              RedstoneWireConnectionProperty::Side => 304,
              RedstoneWireConnectionProperty::None => 305,
            },
          },
          2 => match self.south {
            RedstoneWireConnectionProperty::Up => match self.west {
              RedstoneWireConnectionProperty::Up => 306,
              RedstoneWireConnectionProperty::Side => 307,
              RedstoneWireConnectionProperty::None => 308,
            },
            RedstoneWireConnectionProperty::Side => match self.west {
              RedstoneWireConnectionProperty::Up => 309,
              RedstoneWireConnectionProperty::Side => 310,
              RedstoneWireConnectionProperty::None => 311,
            },
            RedstoneWireConnectionProperty::None => match self.west {
              RedstoneWireConnectionProperty::Up => 312,
              RedstoneWireConnectionProperty::Side => 313,
              RedstoneWireConnectionProperty::None => 314,
            },
          },
          3 => match self.south {
            RedstoneWireConnectionProperty::Up => match self.west {
              RedstoneWireConnectionProperty::Up => 315,
              RedstoneWireConnectionProperty::Side => 316,
              RedstoneWireConnectionProperty::None => 317,
            },
            RedstoneWireConnectionProperty::Side => match self.west {
              RedstoneWireConnectionProperty::Up => 318,
              RedstoneWireConnectionProperty::Side => 319,
              RedstoneWireConnectionProperty::None => 320,
            },
            RedstoneWireConnectionProperty::None => match self.west {
              RedstoneWireConnectionProperty::Up => 321,
              RedstoneWireConnectionProperty::Side => 322,
              RedstoneWireConnectionProperty::None => 323,
            },
          },
          4 => match self.south {
            RedstoneWireConnectionProperty::Up => match self.west {
              RedstoneWireConnectionProperty::Up => 324,
              RedstoneWireConnectionProperty::Side => 325,
              RedstoneWireConnectionProperty::None => 326,
            },
            RedstoneWireConnectionProperty::Side => match self.west {
              RedstoneWireConnectionProperty::Up => 327,
              RedstoneWireConnectionProperty::Side => 328,
              RedstoneWireConnectionProperty::None => 329,
            },
            RedstoneWireConnectionProperty::None => match self.west {
              RedstoneWireConnectionProperty::Up => 330,
              RedstoneWireConnectionProperty::Side => 331,
              RedstoneWireConnectionProperty::None => 332,
            },
          },
          5 => match self.south {
            RedstoneWireConnectionProperty::Up => match self.west {
              RedstoneWireConnectionProperty::Up => 333,
              RedstoneWireConnectionProperty::Side => 334,
              RedstoneWireConnectionProperty::None => 335,
            },
            RedstoneWireConnectionProperty::Side => match self.west {
              RedstoneWireConnectionProperty::Up => 336,
              RedstoneWireConnectionProperty::Side => 337,
              RedstoneWireConnectionProperty::None => 338,
            },
            RedstoneWireConnectionProperty::None => match self.west {
              RedstoneWireConnectionProperty::Up => 339,
              RedstoneWireConnectionProperty::Side => 340,
              RedstoneWireConnectionProperty::None => 341,
            },
          },
          6 => match self.south {
            RedstoneWireConnectionProperty::Up => match self.west {
              RedstoneWireConnectionProperty::Up => 342,
              RedstoneWireConnectionProperty::Side => 343,
              RedstoneWireConnectionProperty::None => 344,
            },
            RedstoneWireConnectionProperty::Side => match self.west {
              RedstoneWireConnectionProperty::Up => 345,
              RedstoneWireConnectionProperty::Side => 346,
              RedstoneWireConnectionProperty::None => 347,
            },
            RedstoneWireConnectionProperty::None => match self.west {
              RedstoneWireConnectionProperty::Up => 348,
              RedstoneWireConnectionProperty::Side => 349,
              RedstoneWireConnectionProperty::None => 350,
            },
          },
          7 => match self.south {
            RedstoneWireConnectionProperty::Up => match self.west {
              RedstoneWireConnectionProperty::Up => 351,
              RedstoneWireConnectionProperty::Side => 352,
              RedstoneWireConnectionProperty::None => 353,
            },
            RedstoneWireConnectionProperty::Side => match self.west {
              RedstoneWireConnectionProperty::Up => 354,
              RedstoneWireConnectionProperty::Side => 355,
              RedstoneWireConnectionProperty::None => 356,
            },
            RedstoneWireConnectionProperty::None => match self.west {
              RedstoneWireConnectionProperty::Up => 357,
              RedstoneWireConnectionProperty::Side => 358,
              RedstoneWireConnectionProperty::None => 359,
            },
          },
          8 => match self.south {
            RedstoneWireConnectionProperty::Up => match self.west {
              RedstoneWireConnectionProperty::Up => 360,
              RedstoneWireConnectionProperty::Side => 361,
              RedstoneWireConnectionProperty::None => 362,
            },
            RedstoneWireConnectionProperty::Side => match self.west {
              RedstoneWireConnectionProperty::Up => 363,
              RedstoneWireConnectionProperty::Side => 364,
              RedstoneWireConnectionProperty::None => 365,
            },
            RedstoneWireConnectionProperty::None => match self.west {
              RedstoneWireConnectionProperty::Up => 366,
              RedstoneWireConnectionProperty::Side => 367,
              RedstoneWireConnectionProperty::None => 368,
            },
          },
          9 => match self.south {
            RedstoneWireConnectionProperty::Up => match self.west {
              RedstoneWireConnectionProperty::Up => 369,
              RedstoneWireConnectionProperty::Side => 370,
              RedstoneWireConnectionProperty::None => 371,
            },
            RedstoneWireConnectionProperty::Side => match self.west {
              RedstoneWireConnectionProperty::Up => 372,
              RedstoneWireConnectionProperty::Side => 373,
              RedstoneWireConnectionProperty::None => 374,
            },
            RedstoneWireConnectionProperty::None => match self.west {
              RedstoneWireConnectionProperty::Up => 375,
              RedstoneWireConnectionProperty::Side => 376,
              RedstoneWireConnectionProperty::None => 377,
            },
          },
          10 => match self.south {
            RedstoneWireConnectionProperty::Up => match self.west {
              RedstoneWireConnectionProperty::Up => 378,
              RedstoneWireConnectionProperty::Side => 379,
              RedstoneWireConnectionProperty::None => 380,
            },
            RedstoneWireConnectionProperty::Side => match self.west {
              RedstoneWireConnectionProperty::Up => 381,
              RedstoneWireConnectionProperty::Side => 382,
              RedstoneWireConnectionProperty::None => 383,
            },
            RedstoneWireConnectionProperty::None => match self.west {
              RedstoneWireConnectionProperty::Up => 384,
              RedstoneWireConnectionProperty::Side => 385,
              RedstoneWireConnectionProperty::None => 386,
            },
          },
          11 => match self.south {
            RedstoneWireConnectionProperty::Up => match self.west {
              RedstoneWireConnectionProperty::Up => 387,
              RedstoneWireConnectionProperty::Side => 388,
              RedstoneWireConnectionProperty::None => 389,
            },
            RedstoneWireConnectionProperty::Side => match self.west {
              RedstoneWireConnectionProperty::Up => 390,
              RedstoneWireConnectionProperty::Side => 391,
              RedstoneWireConnectionProperty::None => 392,
            },
            RedstoneWireConnectionProperty::None => match self.west {
              RedstoneWireConnectionProperty::Up => 393,
              RedstoneWireConnectionProperty::Side => 394,
              RedstoneWireConnectionProperty::None => 395,
            },
          },
          12 => match self.south {
            RedstoneWireConnectionProperty::Up => match self.west {
              RedstoneWireConnectionProperty::Up => 396,
              RedstoneWireConnectionProperty::Side => 397,
              RedstoneWireConnectionProperty::None => 398,
            },
            RedstoneWireConnectionProperty::Side => match self.west {
              RedstoneWireConnectionProperty::Up => 399,
              RedstoneWireConnectionProperty::Side => 400,
              RedstoneWireConnectionProperty::None => 401,
            },
            RedstoneWireConnectionProperty::None => match self.west {
              RedstoneWireConnectionProperty::Up => 402,
              RedstoneWireConnectionProperty::Side => 403,
              RedstoneWireConnectionProperty::None => 404,
            },
          },
          13 => match self.south {
            RedstoneWireConnectionProperty::Up => match self.west {
              RedstoneWireConnectionProperty::Up => 405,
              RedstoneWireConnectionProperty::Side => 406,
              RedstoneWireConnectionProperty::None => 407,
            },
            RedstoneWireConnectionProperty::Side => match self.west {
              RedstoneWireConnectionProperty::Up => 408,
              RedstoneWireConnectionProperty::Side => 409,
              RedstoneWireConnectionProperty::None => 410,
            },
            RedstoneWireConnectionProperty::None => match self.west {
              RedstoneWireConnectionProperty::Up => 411,
              RedstoneWireConnectionProperty::Side => 412,
              RedstoneWireConnectionProperty::None => 413,
            },
          },
          14 => match self.south {
            RedstoneWireConnectionProperty::Up => match self.west {
              RedstoneWireConnectionProperty::Up => 414,
              RedstoneWireConnectionProperty::Side => 415,
              RedstoneWireConnectionProperty::None => 416,
            },
            RedstoneWireConnectionProperty::Side => match self.west {
              RedstoneWireConnectionProperty::Up => 417,
              RedstoneWireConnectionProperty::Side => 418,
              RedstoneWireConnectionProperty::None => 419,
            },
            RedstoneWireConnectionProperty::None => match self.west {
              RedstoneWireConnectionProperty::Up => 420,
              RedstoneWireConnectionProperty::Side => 421,
              RedstoneWireConnectionProperty::None => 422,
            },
          },
          15 => match self.south {
            RedstoneWireConnectionProperty::Up => match self.west {
              RedstoneWireConnectionProperty::Up => 423,
              RedstoneWireConnectionProperty::Side => 424,
              RedstoneWireConnectionProperty::None => 425,
            },
            RedstoneWireConnectionProperty::Side => match self.west {
              RedstoneWireConnectionProperty::Up => 426,
              RedstoneWireConnectionProperty::Side => 427,
              RedstoneWireConnectionProperty::None => 428,
            },
            RedstoneWireConnectionProperty::None => match self.west {
              RedstoneWireConnectionProperty::Up => 429,
              RedstoneWireConnectionProperty::Side => 430,
              RedstoneWireConnectionProperty::None => 431,
            },
          },
          _ => panic!("Illegal Block State"),
        },
      },
      RedstoneWireConnectionProperty::Side => match self.north {
        RedstoneWireConnectionProperty::Up => match self.power.value() {
          0 => match self.south {
            RedstoneWireConnectionProperty::Up => match self.west {
              RedstoneWireConnectionProperty::Up => 432,
              RedstoneWireConnectionProperty::Side => 433,
              RedstoneWireConnectionProperty::None => 434,
            },
            RedstoneWireConnectionProperty::Side => match self.west {
              RedstoneWireConnectionProperty::Up => 435,
              RedstoneWireConnectionProperty::Side => 436,
              RedstoneWireConnectionProperty::None => 437,
            },
            RedstoneWireConnectionProperty::None => match self.west {
              RedstoneWireConnectionProperty::Up => 438,
              RedstoneWireConnectionProperty::Side => 439,
              RedstoneWireConnectionProperty::None => 440,
            },
          },
          1 => match self.south {
            RedstoneWireConnectionProperty::Up => match self.west {
              RedstoneWireConnectionProperty::Up => 441,
              RedstoneWireConnectionProperty::Side => 442,
              RedstoneWireConnectionProperty::None => 443,
            },
            RedstoneWireConnectionProperty::Side => match self.west {
              RedstoneWireConnectionProperty::Up => 444,
              RedstoneWireConnectionProperty::Side => 445,
              RedstoneWireConnectionProperty::None => 446,
            },
            RedstoneWireConnectionProperty::None => match self.west {
              RedstoneWireConnectionProperty::Up => 447,
              RedstoneWireConnectionProperty::Side => 448,
              RedstoneWireConnectionProperty::None => 449,
            },
          },
          2 => match self.south {
            RedstoneWireConnectionProperty::Up => match self.west {
              RedstoneWireConnectionProperty::Up => 450,
              RedstoneWireConnectionProperty::Side => 451,
              RedstoneWireConnectionProperty::None => 452,
            },
            RedstoneWireConnectionProperty::Side => match self.west {
              RedstoneWireConnectionProperty::Up => 453,
              RedstoneWireConnectionProperty::Side => 454,
              RedstoneWireConnectionProperty::None => 455,
            },
            RedstoneWireConnectionProperty::None => match self.west {
              RedstoneWireConnectionProperty::Up => 456,
              RedstoneWireConnectionProperty::Side => 457,
              RedstoneWireConnectionProperty::None => 458,
            },
          },
          3 => match self.south {
            RedstoneWireConnectionProperty::Up => match self.west {
              RedstoneWireConnectionProperty::Up => 459,
              RedstoneWireConnectionProperty::Side => 460,
              RedstoneWireConnectionProperty::None => 461,
            },
            RedstoneWireConnectionProperty::Side => match self.west {
              RedstoneWireConnectionProperty::Up => 462,
              RedstoneWireConnectionProperty::Side => 463,
              RedstoneWireConnectionProperty::None => 464,
            },
            RedstoneWireConnectionProperty::None => match self.west {
              RedstoneWireConnectionProperty::Up => 465,
              RedstoneWireConnectionProperty::Side => 466,
              RedstoneWireConnectionProperty::None => 467,
            },
          },
          4 => match self.south {
            RedstoneWireConnectionProperty::Up => match self.west {
              RedstoneWireConnectionProperty::Up => 468,
              RedstoneWireConnectionProperty::Side => 469,
              RedstoneWireConnectionProperty::None => 470,
            },
            RedstoneWireConnectionProperty::Side => match self.west {
              RedstoneWireConnectionProperty::Up => 471,
              RedstoneWireConnectionProperty::Side => 472,
              RedstoneWireConnectionProperty::None => 473,
            },
            RedstoneWireConnectionProperty::None => match self.west {
              RedstoneWireConnectionProperty::Up => 474,
              RedstoneWireConnectionProperty::Side => 475,
              RedstoneWireConnectionProperty::None => 476,
            },
          },
          5 => match self.south {
            RedstoneWireConnectionProperty::Up => match self.west {
              RedstoneWireConnectionProperty::Up => 477,
              RedstoneWireConnectionProperty::Side => 478,
              RedstoneWireConnectionProperty::None => 479,
            },
            RedstoneWireConnectionProperty::Side => match self.west {
              RedstoneWireConnectionProperty::Up => 480,
              RedstoneWireConnectionProperty::Side => 481,
              RedstoneWireConnectionProperty::None => 482,
            },
            RedstoneWireConnectionProperty::None => match self.west {
              RedstoneWireConnectionProperty::Up => 483,
              RedstoneWireConnectionProperty::Side => 484,
              RedstoneWireConnectionProperty::None => 485,
            },
          },
          6 => match self.south {
            RedstoneWireConnectionProperty::Up => match self.west {
              RedstoneWireConnectionProperty::Up => 486,
              RedstoneWireConnectionProperty::Side => 487,
              RedstoneWireConnectionProperty::None => 488,
            },
            RedstoneWireConnectionProperty::Side => match self.west {
              RedstoneWireConnectionProperty::Up => 489,
              RedstoneWireConnectionProperty::Side => 490,
              RedstoneWireConnectionProperty::None => 491,
            },
            RedstoneWireConnectionProperty::None => match self.west {
              RedstoneWireConnectionProperty::Up => 492,
              RedstoneWireConnectionProperty::Side => 493,
              RedstoneWireConnectionProperty::None => 494,
            },
          },
          7 => match self.south {
            RedstoneWireConnectionProperty::Up => match self.west {
              RedstoneWireConnectionProperty::Up => 495,
              RedstoneWireConnectionProperty::Side => 496,
              RedstoneWireConnectionProperty::None => 497,
            },
            RedstoneWireConnectionProperty::Side => match self.west {
              RedstoneWireConnectionProperty::Up => 498,
              RedstoneWireConnectionProperty::Side => 499,
              RedstoneWireConnectionProperty::None => 500,
            },
            RedstoneWireConnectionProperty::None => match self.west {
              RedstoneWireConnectionProperty::Up => 501,
              RedstoneWireConnectionProperty::Side => 502,
              RedstoneWireConnectionProperty::None => 503,
            },
          },
          8 => match self.south {
            RedstoneWireConnectionProperty::Up => match self.west {
              RedstoneWireConnectionProperty::Up => 504,
              RedstoneWireConnectionProperty::Side => 505,
              RedstoneWireConnectionProperty::None => 506,
            },
            RedstoneWireConnectionProperty::Side => match self.west {
              RedstoneWireConnectionProperty::Up => 507,
              RedstoneWireConnectionProperty::Side => 508,
              RedstoneWireConnectionProperty::None => 509,
            },
            RedstoneWireConnectionProperty::None => match self.west {
              RedstoneWireConnectionProperty::Up => 510,
              RedstoneWireConnectionProperty::Side => 511,
              RedstoneWireConnectionProperty::None => 512,
            },
          },
          9 => match self.south {
            RedstoneWireConnectionProperty::Up => match self.west {
              RedstoneWireConnectionProperty::Up => 513,
              RedstoneWireConnectionProperty::Side => 514,
              RedstoneWireConnectionProperty::None => 515,
            },
            RedstoneWireConnectionProperty::Side => match self.west {
              RedstoneWireConnectionProperty::Up => 516,
              RedstoneWireConnectionProperty::Side => 517,
              RedstoneWireConnectionProperty::None => 518,
            },
            RedstoneWireConnectionProperty::None => match self.west {
              RedstoneWireConnectionProperty::Up => 519,
              RedstoneWireConnectionProperty::Side => 520,
              RedstoneWireConnectionProperty::None => 521,
            },
          },
          10 => match self.south {
            RedstoneWireConnectionProperty::Up => match self.west {
              RedstoneWireConnectionProperty::Up => 522,
              RedstoneWireConnectionProperty::Side => 523,
              RedstoneWireConnectionProperty::None => 524,
            },
            RedstoneWireConnectionProperty::Side => match self.west {
              RedstoneWireConnectionProperty::Up => 525,
              RedstoneWireConnectionProperty::Side => 526,
              RedstoneWireConnectionProperty::None => 527,
            },
            RedstoneWireConnectionProperty::None => match self.west {
              RedstoneWireConnectionProperty::Up => 528,
              RedstoneWireConnectionProperty::Side => 529,
              RedstoneWireConnectionProperty::None => 530,
            },
          },
          11 => match self.south {
            RedstoneWireConnectionProperty::Up => match self.west {
              RedstoneWireConnectionProperty::Up => 531,
              RedstoneWireConnectionProperty::Side => 532,
              RedstoneWireConnectionProperty::None => 533,
            },
            RedstoneWireConnectionProperty::Side => match self.west {
              RedstoneWireConnectionProperty::Up => 534,
              RedstoneWireConnectionProperty::Side => 535,
              RedstoneWireConnectionProperty::None => 536,
            },
            RedstoneWireConnectionProperty::None => match self.west {
              RedstoneWireConnectionProperty::Up => 537,
              RedstoneWireConnectionProperty::Side => 538,
              RedstoneWireConnectionProperty::None => 539,
            },
          },
          12 => match self.south {
            RedstoneWireConnectionProperty::Up => match self.west {
              RedstoneWireConnectionProperty::Up => 540,
              RedstoneWireConnectionProperty::Side => 541,
              RedstoneWireConnectionProperty::None => 542,
            },
            RedstoneWireConnectionProperty::Side => match self.west {
              RedstoneWireConnectionProperty::Up => 543,
              RedstoneWireConnectionProperty::Side => 544,
              RedstoneWireConnectionProperty::None => 545,
            },
            RedstoneWireConnectionProperty::None => match self.west {
              RedstoneWireConnectionProperty::Up => 546,
              RedstoneWireConnectionProperty::Side => 547,
              RedstoneWireConnectionProperty::None => 548,
            },
          },
          13 => match self.south {
            RedstoneWireConnectionProperty::Up => match self.west {
              RedstoneWireConnectionProperty::Up => 549,
              RedstoneWireConnectionProperty::Side => 550,
              RedstoneWireConnectionProperty::None => 551,
            },
            RedstoneWireConnectionProperty::Side => match self.west {
              RedstoneWireConnectionProperty::Up => 552,
              RedstoneWireConnectionProperty::Side => 553,
              RedstoneWireConnectionProperty::None => 554,
            },
            RedstoneWireConnectionProperty::None => match self.west {
              RedstoneWireConnectionProperty::Up => 555,
              RedstoneWireConnectionProperty::Side => 556,
              RedstoneWireConnectionProperty::None => 557,
            },
          },
          14 => match self.south {
            RedstoneWireConnectionProperty::Up => match self.west {
              RedstoneWireConnectionProperty::Up => 558,
              RedstoneWireConnectionProperty::Side => 559,
              RedstoneWireConnectionProperty::None => 560,
            },
            RedstoneWireConnectionProperty::Side => match self.west {
              RedstoneWireConnectionProperty::Up => 561,
              RedstoneWireConnectionProperty::Side => 562,
              RedstoneWireConnectionProperty::None => 563,
            },
            RedstoneWireConnectionProperty::None => match self.west {
              RedstoneWireConnectionProperty::Up => 564,
              RedstoneWireConnectionProperty::Side => 565,
              RedstoneWireConnectionProperty::None => 566,
            },
          },
          15 => match self.south {
            RedstoneWireConnectionProperty::Up => match self.west {
              RedstoneWireConnectionProperty::Up => 567,
              RedstoneWireConnectionProperty::Side => 568,
              RedstoneWireConnectionProperty::None => 569,
            },
            RedstoneWireConnectionProperty::Side => match self.west {
              RedstoneWireConnectionProperty::Up => 570,
              RedstoneWireConnectionProperty::Side => 571,
              RedstoneWireConnectionProperty::None => 572,
            },
            RedstoneWireConnectionProperty::None => match self.west {
              RedstoneWireConnectionProperty::Up => 573,
              RedstoneWireConnectionProperty::Side => 574,
              RedstoneWireConnectionProperty::None => 575,
            },
          },
          _ => panic!("Illegal Block State"),
        },
        RedstoneWireConnectionProperty::Side => match self.power.value() {
          0 => match self.south {
            RedstoneWireConnectionProperty::Up => match self.west {
              RedstoneWireConnectionProperty::Up => 576,
              RedstoneWireConnectionProperty::Side => 577,
              RedstoneWireConnectionProperty::None => 578,
            },
            RedstoneWireConnectionProperty::Side => match self.west {
              RedstoneWireConnectionProperty::Up => 579,
              RedstoneWireConnectionProperty::Side => 580,
              RedstoneWireConnectionProperty::None => 581,
            },
            RedstoneWireConnectionProperty::None => match self.west {
              RedstoneWireConnectionProperty::Up => 582,
              RedstoneWireConnectionProperty::Side => 583,
              RedstoneWireConnectionProperty::None => 584,
            },
          },
          1 => match self.south {
            RedstoneWireConnectionProperty::Up => match self.west {
              RedstoneWireConnectionProperty::Up => 585,
              RedstoneWireConnectionProperty::Side => 586,
              RedstoneWireConnectionProperty::None => 587,
            },
            RedstoneWireConnectionProperty::Side => match self.west {
              RedstoneWireConnectionProperty::Up => 588,
              RedstoneWireConnectionProperty::Side => 589,
              RedstoneWireConnectionProperty::None => 590,
            },
            RedstoneWireConnectionProperty::None => match self.west {
              RedstoneWireConnectionProperty::Up => 591,
              RedstoneWireConnectionProperty::Side => 592,
              RedstoneWireConnectionProperty::None => 593,
            },
          },
          2 => match self.south {
            RedstoneWireConnectionProperty::Up => match self.west {
              RedstoneWireConnectionProperty::Up => 594,
              RedstoneWireConnectionProperty::Side => 595,
              RedstoneWireConnectionProperty::None => 596,
            },
            RedstoneWireConnectionProperty::Side => match self.west {
              RedstoneWireConnectionProperty::Up => 597,
              RedstoneWireConnectionProperty::Side => 598,
              RedstoneWireConnectionProperty::None => 599,
            },
            RedstoneWireConnectionProperty::None => match self.west {
              RedstoneWireConnectionProperty::Up => 600,
              RedstoneWireConnectionProperty::Side => 601,
              RedstoneWireConnectionProperty::None => 602,
            },
          },
          3 => match self.south {
            RedstoneWireConnectionProperty::Up => match self.west {
              RedstoneWireConnectionProperty::Up => 603,
              RedstoneWireConnectionProperty::Side => 604,
              RedstoneWireConnectionProperty::None => 605,
            },
            RedstoneWireConnectionProperty::Side => match self.west {
              RedstoneWireConnectionProperty::Up => 606,
              RedstoneWireConnectionProperty::Side => 607,
              RedstoneWireConnectionProperty::None => 608,
            },
            RedstoneWireConnectionProperty::None => match self.west {
              RedstoneWireConnectionProperty::Up => 609,
              RedstoneWireConnectionProperty::Side => 610,
              RedstoneWireConnectionProperty::None => 611,
            },
          },
          4 => match self.south {
            RedstoneWireConnectionProperty::Up => match self.west {
              RedstoneWireConnectionProperty::Up => 612,
              RedstoneWireConnectionProperty::Side => 613,
              RedstoneWireConnectionProperty::None => 614,
            },
            RedstoneWireConnectionProperty::Side => match self.west {
              RedstoneWireConnectionProperty::Up => 615,
              RedstoneWireConnectionProperty::Side => 616,
              RedstoneWireConnectionProperty::None => 617,
            },
            RedstoneWireConnectionProperty::None => match self.west {
              RedstoneWireConnectionProperty::Up => 618,
              RedstoneWireConnectionProperty::Side => 619,
              RedstoneWireConnectionProperty::None => 620,
            },
          },
          5 => match self.south {
            RedstoneWireConnectionProperty::Up => match self.west {
              RedstoneWireConnectionProperty::Up => 621,
              RedstoneWireConnectionProperty::Side => 622,
              RedstoneWireConnectionProperty::None => 623,
            },
            RedstoneWireConnectionProperty::Side => match self.west {
              RedstoneWireConnectionProperty::Up => 624,
              RedstoneWireConnectionProperty::Side => 625,
              RedstoneWireConnectionProperty::None => 626,
            },
            RedstoneWireConnectionProperty::None => match self.west {
              RedstoneWireConnectionProperty::Up => 627,
              RedstoneWireConnectionProperty::Side => 628,
              RedstoneWireConnectionProperty::None => 629,
            },
          },
          6 => match self.south {
            RedstoneWireConnectionProperty::Up => match self.west {
              RedstoneWireConnectionProperty::Up => 630,
              RedstoneWireConnectionProperty::Side => 631,
              RedstoneWireConnectionProperty::None => 632,
            },
            RedstoneWireConnectionProperty::Side => match self.west {
              RedstoneWireConnectionProperty::Up => 633,
              RedstoneWireConnectionProperty::Side => 634,
              RedstoneWireConnectionProperty::None => 635,
            },
            RedstoneWireConnectionProperty::None => match self.west {
              RedstoneWireConnectionProperty::Up => 636,
              RedstoneWireConnectionProperty::Side => 637,
              RedstoneWireConnectionProperty::None => 638,
            },
          },
          7 => match self.south {
            RedstoneWireConnectionProperty::Up => match self.west {
              RedstoneWireConnectionProperty::Up => 639,
              RedstoneWireConnectionProperty::Side => 640,
              RedstoneWireConnectionProperty::None => 641,
            },
            RedstoneWireConnectionProperty::Side => match self.west {
              RedstoneWireConnectionProperty::Up => 642,
              RedstoneWireConnectionProperty::Side => 643,
              RedstoneWireConnectionProperty::None => 644,
            },
            RedstoneWireConnectionProperty::None => match self.west {
              RedstoneWireConnectionProperty::Up => 645,
              RedstoneWireConnectionProperty::Side => 646,
              RedstoneWireConnectionProperty::None => 647,
            },
          },
          8 => match self.south {
            RedstoneWireConnectionProperty::Up => match self.west {
              RedstoneWireConnectionProperty::Up => 648,
              RedstoneWireConnectionProperty::Side => 649,
              RedstoneWireConnectionProperty::None => 650,
            },
            RedstoneWireConnectionProperty::Side => match self.west {
              RedstoneWireConnectionProperty::Up => 651,
              RedstoneWireConnectionProperty::Side => 652,
              RedstoneWireConnectionProperty::None => 653,
            },
            RedstoneWireConnectionProperty::None => match self.west {
              RedstoneWireConnectionProperty::Up => 654,
              RedstoneWireConnectionProperty::Side => 655,
              RedstoneWireConnectionProperty::None => 656,
            },
          },
          9 => match self.south {
            RedstoneWireConnectionProperty::Up => match self.west {
              RedstoneWireConnectionProperty::Up => 657,
              RedstoneWireConnectionProperty::Side => 658,
              RedstoneWireConnectionProperty::None => 659,
            },
            RedstoneWireConnectionProperty::Side => match self.west {
              RedstoneWireConnectionProperty::Up => 660,
              RedstoneWireConnectionProperty::Side => 661,
              RedstoneWireConnectionProperty::None => 662,
            },
            RedstoneWireConnectionProperty::None => match self.west {
              RedstoneWireConnectionProperty::Up => 663,
              RedstoneWireConnectionProperty::Side => 664,
              RedstoneWireConnectionProperty::None => 665,
            },
          },
          10 => match self.south {
            RedstoneWireConnectionProperty::Up => match self.west {
              RedstoneWireConnectionProperty::Up => 666,
              RedstoneWireConnectionProperty::Side => 667,
              RedstoneWireConnectionProperty::None => 668,
            },
            RedstoneWireConnectionProperty::Side => match self.west {
              RedstoneWireConnectionProperty::Up => 669,
              RedstoneWireConnectionProperty::Side => 670,
              RedstoneWireConnectionProperty::None => 671,
            },
            RedstoneWireConnectionProperty::None => match self.west {
              RedstoneWireConnectionProperty::Up => 672,
              RedstoneWireConnectionProperty::Side => 673,
              RedstoneWireConnectionProperty::None => 674,
            },
          },
          11 => match self.south {
            RedstoneWireConnectionProperty::Up => match self.west {
              RedstoneWireConnectionProperty::Up => 675,
              RedstoneWireConnectionProperty::Side => 676,
              RedstoneWireConnectionProperty::None => 677,
            },
            RedstoneWireConnectionProperty::Side => match self.west {
              RedstoneWireConnectionProperty::Up => 678,
              RedstoneWireConnectionProperty::Side => 679,
              RedstoneWireConnectionProperty::None => 680,
            },
            RedstoneWireConnectionProperty::None => match self.west {
              RedstoneWireConnectionProperty::Up => 681,
              RedstoneWireConnectionProperty::Side => 682,
              RedstoneWireConnectionProperty::None => 683,
            },
          },
          12 => match self.south {
            RedstoneWireConnectionProperty::Up => match self.west {
              RedstoneWireConnectionProperty::Up => 684,
              RedstoneWireConnectionProperty::Side => 685,
              RedstoneWireConnectionProperty::None => 686,
            },
            RedstoneWireConnectionProperty::Side => match self.west {
              RedstoneWireConnectionProperty::Up => 687,
              RedstoneWireConnectionProperty::Side => 688,
              RedstoneWireConnectionProperty::None => 689,
            },
            RedstoneWireConnectionProperty::None => match self.west {
              RedstoneWireConnectionProperty::Up => 690,
              RedstoneWireConnectionProperty::Side => 691,
              RedstoneWireConnectionProperty::None => 692,
            },
          },
          13 => match self.south {
            RedstoneWireConnectionProperty::Up => match self.west {
              RedstoneWireConnectionProperty::Up => 693,
              RedstoneWireConnectionProperty::Side => 694,
              RedstoneWireConnectionProperty::None => 695,
            },
            RedstoneWireConnectionProperty::Side => match self.west {
              RedstoneWireConnectionProperty::Up => 696,
              RedstoneWireConnectionProperty::Side => 697,
              RedstoneWireConnectionProperty::None => 698,
            },
            RedstoneWireConnectionProperty::None => match self.west {
              RedstoneWireConnectionProperty::Up => 699,
              RedstoneWireConnectionProperty::Side => 700,
              RedstoneWireConnectionProperty::None => 701,
            },
          },
          14 => match self.south {
            RedstoneWireConnectionProperty::Up => match self.west {
              RedstoneWireConnectionProperty::Up => 702,
              RedstoneWireConnectionProperty::Side => 703,
              RedstoneWireConnectionProperty::None => 704,
            },
            RedstoneWireConnectionProperty::Side => match self.west {
              RedstoneWireConnectionProperty::Up => 705,
              RedstoneWireConnectionProperty::Side => 706,
              RedstoneWireConnectionProperty::None => 707,
            },
            RedstoneWireConnectionProperty::None => match self.west {
              RedstoneWireConnectionProperty::Up => 708,
              RedstoneWireConnectionProperty::Side => 709,
              RedstoneWireConnectionProperty::None => 710,
            },
          },
          15 => match self.south {
            RedstoneWireConnectionProperty::Up => match self.west {
              RedstoneWireConnectionProperty::Up => 711,
              RedstoneWireConnectionProperty::Side => 712,
              RedstoneWireConnectionProperty::None => 713,
            },
            RedstoneWireConnectionProperty::Side => match self.west {
              RedstoneWireConnectionProperty::Up => 714,
              RedstoneWireConnectionProperty::Side => 715,
              RedstoneWireConnectionProperty::None => 716,
            },
            RedstoneWireConnectionProperty::None => match self.west {
              RedstoneWireConnectionProperty::Up => 717,
              RedstoneWireConnectionProperty::Side => 718,
              RedstoneWireConnectionProperty::None => 719,
            },
          },
          _ => panic!("Illegal Block State"),
        },
        RedstoneWireConnectionProperty::None => match self.power.value() {
          0 => match self.south {
            RedstoneWireConnectionProperty::Up => match self.west {
              RedstoneWireConnectionProperty::Up => 720,
              RedstoneWireConnectionProperty::Side => 721,
              RedstoneWireConnectionProperty::None => 722,
            },
            RedstoneWireConnectionProperty::Side => match self.west {
              RedstoneWireConnectionProperty::Up => 723,
              RedstoneWireConnectionProperty::Side => 724,
              RedstoneWireConnectionProperty::None => 725,
            },
            RedstoneWireConnectionProperty::None => match self.west {
              RedstoneWireConnectionProperty::Up => 726,
              RedstoneWireConnectionProperty::Side => 727,
              RedstoneWireConnectionProperty::None => 728,
            },
          },
          1 => match self.south {
            RedstoneWireConnectionProperty::Up => match self.west {
              RedstoneWireConnectionProperty::Up => 729,
              RedstoneWireConnectionProperty::Side => 730,
              RedstoneWireConnectionProperty::None => 731,
            },
            RedstoneWireConnectionProperty::Side => match self.west {
              RedstoneWireConnectionProperty::Up => 732,
              RedstoneWireConnectionProperty::Side => 733,
              RedstoneWireConnectionProperty::None => 734,
            },
            RedstoneWireConnectionProperty::None => match self.west {
              RedstoneWireConnectionProperty::Up => 735,
              RedstoneWireConnectionProperty::Side => 736,
              RedstoneWireConnectionProperty::None => 737,
            },
          },
          2 => match self.south {
            RedstoneWireConnectionProperty::Up => match self.west {
              RedstoneWireConnectionProperty::Up => 738,
              RedstoneWireConnectionProperty::Side => 739,
              RedstoneWireConnectionProperty::None => 740,
            },
            RedstoneWireConnectionProperty::Side => match self.west {
              RedstoneWireConnectionProperty::Up => 741,
              RedstoneWireConnectionProperty::Side => 742,
              RedstoneWireConnectionProperty::None => 743,
            },
            RedstoneWireConnectionProperty::None => match self.west {
              RedstoneWireConnectionProperty::Up => 744,
              RedstoneWireConnectionProperty::Side => 745,
              RedstoneWireConnectionProperty::None => 746,
            },
          },
          3 => match self.south {
            RedstoneWireConnectionProperty::Up => match self.west {
              RedstoneWireConnectionProperty::Up => 747,
              RedstoneWireConnectionProperty::Side => 748,
              RedstoneWireConnectionProperty::None => 749,
            },
            RedstoneWireConnectionProperty::Side => match self.west {
              RedstoneWireConnectionProperty::Up => 750,
              RedstoneWireConnectionProperty::Side => 751,
              RedstoneWireConnectionProperty::None => 752,
            },
            RedstoneWireConnectionProperty::None => match self.west {
              RedstoneWireConnectionProperty::Up => 753,
              RedstoneWireConnectionProperty::Side => 754,
              RedstoneWireConnectionProperty::None => 755,
            },
          },
          4 => match self.south {
            RedstoneWireConnectionProperty::Up => match self.west {
              RedstoneWireConnectionProperty::Up => 756,
              RedstoneWireConnectionProperty::Side => 757,
              RedstoneWireConnectionProperty::None => 758,
            },
            RedstoneWireConnectionProperty::Side => match self.west {
              RedstoneWireConnectionProperty::Up => 759,
              RedstoneWireConnectionProperty::Side => 760,
              RedstoneWireConnectionProperty::None => 761,
            },
            RedstoneWireConnectionProperty::None => match self.west {
              RedstoneWireConnectionProperty::Up => 762,
              RedstoneWireConnectionProperty::Side => 763,
              RedstoneWireConnectionProperty::None => 764,
            },
          },
          5 => match self.south {
            RedstoneWireConnectionProperty::Up => match self.west {
              RedstoneWireConnectionProperty::Up => 765,
              RedstoneWireConnectionProperty::Side => 766,
              RedstoneWireConnectionProperty::None => 767,
            },
            RedstoneWireConnectionProperty::Side => match self.west {
              RedstoneWireConnectionProperty::Up => 768,
              RedstoneWireConnectionProperty::Side => 769,
              RedstoneWireConnectionProperty::None => 770,
            },
            RedstoneWireConnectionProperty::None => match self.west {
              RedstoneWireConnectionProperty::Up => 771,
              RedstoneWireConnectionProperty::Side => 772,
              RedstoneWireConnectionProperty::None => 773,
            },
          },
          6 => match self.south {
            RedstoneWireConnectionProperty::Up => match self.west {
              RedstoneWireConnectionProperty::Up => 774,
              RedstoneWireConnectionProperty::Side => 775,
              RedstoneWireConnectionProperty::None => 776,
            },
            RedstoneWireConnectionProperty::Side => match self.west {
              RedstoneWireConnectionProperty::Up => 777,
              RedstoneWireConnectionProperty::Side => 778,
              RedstoneWireConnectionProperty::None => 779,
            },
            RedstoneWireConnectionProperty::None => match self.west {
              RedstoneWireConnectionProperty::Up => 780,
              RedstoneWireConnectionProperty::Side => 781,
              RedstoneWireConnectionProperty::None => 782,
            },
          },
          7 => match self.south {
            RedstoneWireConnectionProperty::Up => match self.west {
              RedstoneWireConnectionProperty::Up => 783,
              RedstoneWireConnectionProperty::Side => 784,
              RedstoneWireConnectionProperty::None => 785,
            },
            RedstoneWireConnectionProperty::Side => match self.west {
              RedstoneWireConnectionProperty::Up => 786,
              RedstoneWireConnectionProperty::Side => 787,
              RedstoneWireConnectionProperty::None => 788,
            },
            RedstoneWireConnectionProperty::None => match self.west {
              RedstoneWireConnectionProperty::Up => 789,
              RedstoneWireConnectionProperty::Side => 790,
              RedstoneWireConnectionProperty::None => 791,
            },
          },
          8 => match self.south {
            RedstoneWireConnectionProperty::Up => match self.west {
              RedstoneWireConnectionProperty::Up => 792,
              RedstoneWireConnectionProperty::Side => 793,
              RedstoneWireConnectionProperty::None => 794,
            },
            RedstoneWireConnectionProperty::Side => match self.west {
              RedstoneWireConnectionProperty::Up => 795,
              RedstoneWireConnectionProperty::Side => 796,
              RedstoneWireConnectionProperty::None => 797,
            },
            RedstoneWireConnectionProperty::None => match self.west {
              RedstoneWireConnectionProperty::Up => 798,
              RedstoneWireConnectionProperty::Side => 799,
              RedstoneWireConnectionProperty::None => 800,
            },
          },
          9 => match self.south {
            RedstoneWireConnectionProperty::Up => match self.west {
              RedstoneWireConnectionProperty::Up => 801,
              RedstoneWireConnectionProperty::Side => 802,
              RedstoneWireConnectionProperty::None => 803,
            },
            RedstoneWireConnectionProperty::Side => match self.west {
              RedstoneWireConnectionProperty::Up => 804,
              RedstoneWireConnectionProperty::Side => 805,
              RedstoneWireConnectionProperty::None => 806,
            },
            RedstoneWireConnectionProperty::None => match self.west {
              RedstoneWireConnectionProperty::Up => 807,
              RedstoneWireConnectionProperty::Side => 808,
              RedstoneWireConnectionProperty::None => 809,
            },
          },
          10 => match self.south {
            RedstoneWireConnectionProperty::Up => match self.west {
              RedstoneWireConnectionProperty::Up => 810,
              RedstoneWireConnectionProperty::Side => 811,
              RedstoneWireConnectionProperty::None => 812,
            },
            RedstoneWireConnectionProperty::Side => match self.west {
              RedstoneWireConnectionProperty::Up => 813,
              RedstoneWireConnectionProperty::Side => 814,
              RedstoneWireConnectionProperty::None => 815,
            },
            RedstoneWireConnectionProperty::None => match self.west {
              RedstoneWireConnectionProperty::Up => 816,
              RedstoneWireConnectionProperty::Side => 817,
              RedstoneWireConnectionProperty::None => 818,
            },
          },
          11 => match self.south {
            RedstoneWireConnectionProperty::Up => match self.west {
              RedstoneWireConnectionProperty::Up => 819,
              RedstoneWireConnectionProperty::Side => 820,
              RedstoneWireConnectionProperty::None => 821,
            },
            RedstoneWireConnectionProperty::Side => match self.west {
              RedstoneWireConnectionProperty::Up => 822,
              RedstoneWireConnectionProperty::Side => 823,
              RedstoneWireConnectionProperty::None => 824,
            },
            RedstoneWireConnectionProperty::None => match self.west {
              RedstoneWireConnectionProperty::Up => 825,
              RedstoneWireConnectionProperty::Side => 826,
              RedstoneWireConnectionProperty::None => 827,
            },
          },
          12 => match self.south {
            RedstoneWireConnectionProperty::Up => match self.west {
              RedstoneWireConnectionProperty::Up => 828,
              RedstoneWireConnectionProperty::Side => 829,
              RedstoneWireConnectionProperty::None => 830,
            },
            RedstoneWireConnectionProperty::Side => match self.west {
              RedstoneWireConnectionProperty::Up => 831,
              RedstoneWireConnectionProperty::Side => 832,
              RedstoneWireConnectionProperty::None => 833,
            },
            RedstoneWireConnectionProperty::None => match self.west {
              RedstoneWireConnectionProperty::Up => 834,
              RedstoneWireConnectionProperty::Side => 835,
              RedstoneWireConnectionProperty::None => 836,
            },
          },
          13 => match self.south {
            RedstoneWireConnectionProperty::Up => match self.west {
              RedstoneWireConnectionProperty::Up => 837,
              RedstoneWireConnectionProperty::Side => 838,
              RedstoneWireConnectionProperty::None => 839,
            },
            RedstoneWireConnectionProperty::Side => match self.west {
              RedstoneWireConnectionProperty::Up => 840,
              RedstoneWireConnectionProperty::Side => 841,
              RedstoneWireConnectionProperty::None => 842,
            },
            RedstoneWireConnectionProperty::None => match self.west {
              RedstoneWireConnectionProperty::Up => 843,
              RedstoneWireConnectionProperty::Side => 844,
              RedstoneWireConnectionProperty::None => 845,
            },
          },
          14 => match self.south {
            RedstoneWireConnectionProperty::Up => match self.west {
              RedstoneWireConnectionProperty::Up => 846,
              RedstoneWireConnectionProperty::Side => 847,
              RedstoneWireConnectionProperty::None => 848,
            },
            RedstoneWireConnectionProperty::Side => match self.west {
              RedstoneWireConnectionProperty::Up => 849,
              RedstoneWireConnectionProperty::Side => 850,
              RedstoneWireConnectionProperty::None => 851,
            },
            RedstoneWireConnectionProperty::None => match self.west {
              RedstoneWireConnectionProperty::Up => 852,
              RedstoneWireConnectionProperty::Side => 853,
              RedstoneWireConnectionProperty::None => 854,
            },
          },
          15 => match self.south {
            RedstoneWireConnectionProperty::Up => match self.west {
              RedstoneWireConnectionProperty::Up => 855,
              RedstoneWireConnectionProperty::Side => 856,
              RedstoneWireConnectionProperty::None => 857,
            },
            RedstoneWireConnectionProperty::Side => match self.west {
              RedstoneWireConnectionProperty::Up => 858,
              RedstoneWireConnectionProperty::Side => 859,
              RedstoneWireConnectionProperty::None => 860,
            },
            RedstoneWireConnectionProperty::None => match self.west {
              RedstoneWireConnectionProperty::Up => 861,
              RedstoneWireConnectionProperty::Side => 862,
              RedstoneWireConnectionProperty::None => 863,
            },
          },
          _ => panic!("Illegal Block State"),
        },
      },
      RedstoneWireConnectionProperty::None => match self.north {
        RedstoneWireConnectionProperty::Up => match self.power.value() {
          0 => match self.south {
            RedstoneWireConnectionProperty::Up => match self.west {
              RedstoneWireConnectionProperty::Up => 864,
              RedstoneWireConnectionProperty::Side => 865,
              RedstoneWireConnectionProperty::None => 866,
            },
            RedstoneWireConnectionProperty::Side => match self.west {
              RedstoneWireConnectionProperty::Up => 867,
              RedstoneWireConnectionProperty::Side => 868,
              RedstoneWireConnectionProperty::None => 869,
            },
            RedstoneWireConnectionProperty::None => match self.west {
              RedstoneWireConnectionProperty::Up => 870,
              RedstoneWireConnectionProperty::Side => 871,
              RedstoneWireConnectionProperty::None => 872,
            },
          },
          1 => match self.south {
            RedstoneWireConnectionProperty::Up => match self.west {
              RedstoneWireConnectionProperty::Up => 873,
              RedstoneWireConnectionProperty::Side => 874,
              RedstoneWireConnectionProperty::None => 875,
            },
            RedstoneWireConnectionProperty::Side => match self.west {
              RedstoneWireConnectionProperty::Up => 876,
              RedstoneWireConnectionProperty::Side => 877,
              RedstoneWireConnectionProperty::None => 878,
            },
            RedstoneWireConnectionProperty::None => match self.west {
              RedstoneWireConnectionProperty::Up => 879,
              RedstoneWireConnectionProperty::Side => 880,
              RedstoneWireConnectionProperty::None => 881,
            },
          },
          2 => match self.south {
            RedstoneWireConnectionProperty::Up => match self.west {
              RedstoneWireConnectionProperty::Up => 882,
              RedstoneWireConnectionProperty::Side => 883,
              RedstoneWireConnectionProperty::None => 884,
            },
            RedstoneWireConnectionProperty::Side => match self.west {
              RedstoneWireConnectionProperty::Up => 885,
              RedstoneWireConnectionProperty::Side => 886,
              RedstoneWireConnectionProperty::None => 887,
            },
            RedstoneWireConnectionProperty::None => match self.west {
              RedstoneWireConnectionProperty::Up => 888,
              RedstoneWireConnectionProperty::Side => 889,
              RedstoneWireConnectionProperty::None => 890,
            },
          },
          3 => match self.south {
            RedstoneWireConnectionProperty::Up => match self.west {
              RedstoneWireConnectionProperty::Up => 891,
              RedstoneWireConnectionProperty::Side => 892,
              RedstoneWireConnectionProperty::None => 893,
            },
            RedstoneWireConnectionProperty::Side => match self.west {
              RedstoneWireConnectionProperty::Up => 894,
              RedstoneWireConnectionProperty::Side => 895,
              RedstoneWireConnectionProperty::None => 896,
            },
            RedstoneWireConnectionProperty::None => match self.west {
              RedstoneWireConnectionProperty::Up => 897,
              RedstoneWireConnectionProperty::Side => 898,
              RedstoneWireConnectionProperty::None => 899,
            },
          },
          4 => match self.south {
            RedstoneWireConnectionProperty::Up => match self.west {
              RedstoneWireConnectionProperty::Up => 900,
              RedstoneWireConnectionProperty::Side => 901,
              RedstoneWireConnectionProperty::None => 902,
            },
            RedstoneWireConnectionProperty::Side => match self.west {
              RedstoneWireConnectionProperty::Up => 903,
              RedstoneWireConnectionProperty::Side => 904,
              RedstoneWireConnectionProperty::None => 905,
            },
            RedstoneWireConnectionProperty::None => match self.west {
              RedstoneWireConnectionProperty::Up => 906,
              RedstoneWireConnectionProperty::Side => 907,
              RedstoneWireConnectionProperty::None => 908,
            },
          },
          5 => match self.south {
            RedstoneWireConnectionProperty::Up => match self.west {
              RedstoneWireConnectionProperty::Up => 909,
              RedstoneWireConnectionProperty::Side => 910,
              RedstoneWireConnectionProperty::None => 911,
            },
            RedstoneWireConnectionProperty::Side => match self.west {
              RedstoneWireConnectionProperty::Up => 912,
              RedstoneWireConnectionProperty::Side => 913,
              RedstoneWireConnectionProperty::None => 914,
            },
            RedstoneWireConnectionProperty::None => match self.west {
              RedstoneWireConnectionProperty::Up => 915,
              RedstoneWireConnectionProperty::Side => 916,
              RedstoneWireConnectionProperty::None => 917,
            },
          },
          6 => match self.south {
            RedstoneWireConnectionProperty::Up => match self.west {
              RedstoneWireConnectionProperty::Up => 918,
              RedstoneWireConnectionProperty::Side => 919,
              RedstoneWireConnectionProperty::None => 920,
            },
            RedstoneWireConnectionProperty::Side => match self.west {
              RedstoneWireConnectionProperty::Up => 921,
              RedstoneWireConnectionProperty::Side => 922,
              RedstoneWireConnectionProperty::None => 923,
            },
            RedstoneWireConnectionProperty::None => match self.west {
              RedstoneWireConnectionProperty::Up => 924,
              RedstoneWireConnectionProperty::Side => 925,
              RedstoneWireConnectionProperty::None => 926,
            },
          },
          7 => match self.south {
            RedstoneWireConnectionProperty::Up => match self.west {
              RedstoneWireConnectionProperty::Up => 927,
              RedstoneWireConnectionProperty::Side => 928,
              RedstoneWireConnectionProperty::None => 929,
            },
            RedstoneWireConnectionProperty::Side => match self.west {
              RedstoneWireConnectionProperty::Up => 930,
              RedstoneWireConnectionProperty::Side => 931,
              RedstoneWireConnectionProperty::None => 932,
            },
            RedstoneWireConnectionProperty::None => match self.west {
              RedstoneWireConnectionProperty::Up => 933,
              RedstoneWireConnectionProperty::Side => 934,
              RedstoneWireConnectionProperty::None => 935,
            },
          },
          8 => match self.south {
            RedstoneWireConnectionProperty::Up => match self.west {
              RedstoneWireConnectionProperty::Up => 936,
              RedstoneWireConnectionProperty::Side => 937,
              RedstoneWireConnectionProperty::None => 938,
            },
            RedstoneWireConnectionProperty::Side => match self.west {
              RedstoneWireConnectionProperty::Up => 939,
              RedstoneWireConnectionProperty::Side => 940,
              RedstoneWireConnectionProperty::None => 941,
            },
            RedstoneWireConnectionProperty::None => match self.west {
              RedstoneWireConnectionProperty::Up => 942,
              RedstoneWireConnectionProperty::Side => 943,
              RedstoneWireConnectionProperty::None => 944,
            },
          },
          9 => match self.south {
            RedstoneWireConnectionProperty::Up => match self.west {
              RedstoneWireConnectionProperty::Up => 945,
              RedstoneWireConnectionProperty::Side => 946,
              RedstoneWireConnectionProperty::None => 947,
            },
            RedstoneWireConnectionProperty::Side => match self.west {
              RedstoneWireConnectionProperty::Up => 948,
              RedstoneWireConnectionProperty::Side => 949,
              RedstoneWireConnectionProperty::None => 950,
            },
            RedstoneWireConnectionProperty::None => match self.west {
              RedstoneWireConnectionProperty::Up => 951,
              RedstoneWireConnectionProperty::Side => 952,
              RedstoneWireConnectionProperty::None => 953,
            },
          },
          10 => match self.south {
            RedstoneWireConnectionProperty::Up => match self.west {
              RedstoneWireConnectionProperty::Up => 954,
              RedstoneWireConnectionProperty::Side => 955,
              RedstoneWireConnectionProperty::None => 956,
            },
            RedstoneWireConnectionProperty::Side => match self.west {
              RedstoneWireConnectionProperty::Up => 957,
              RedstoneWireConnectionProperty::Side => 958,
              RedstoneWireConnectionProperty::None => 959,
            },
            RedstoneWireConnectionProperty::None => match self.west {
              RedstoneWireConnectionProperty::Up => 960,
              RedstoneWireConnectionProperty::Side => 961,
              RedstoneWireConnectionProperty::None => 962,
            },
          },
          11 => match self.south {
            RedstoneWireConnectionProperty::Up => match self.west {
              RedstoneWireConnectionProperty::Up => 963,
              RedstoneWireConnectionProperty::Side => 964,
              RedstoneWireConnectionProperty::None => 965,
            },
            RedstoneWireConnectionProperty::Side => match self.west {
              RedstoneWireConnectionProperty::Up => 966,
              RedstoneWireConnectionProperty::Side => 967,
              RedstoneWireConnectionProperty::None => 968,
            },
            RedstoneWireConnectionProperty::None => match self.west {
              RedstoneWireConnectionProperty::Up => 969,
              RedstoneWireConnectionProperty::Side => 970,
              RedstoneWireConnectionProperty::None => 971,
            },
          },
          12 => match self.south {
            RedstoneWireConnectionProperty::Up => match self.west {
              RedstoneWireConnectionProperty::Up => 972,
              RedstoneWireConnectionProperty::Side => 973,
              RedstoneWireConnectionProperty::None => 974,
            },
            RedstoneWireConnectionProperty::Side => match self.west {
              RedstoneWireConnectionProperty::Up => 975,
              RedstoneWireConnectionProperty::Side => 976,
              RedstoneWireConnectionProperty::None => 977,
            },
            RedstoneWireConnectionProperty::None => match self.west {
              RedstoneWireConnectionProperty::Up => 978,
              RedstoneWireConnectionProperty::Side => 979,
              RedstoneWireConnectionProperty::None => 980,
            },
          },
          13 => match self.south {
            RedstoneWireConnectionProperty::Up => match self.west {
              RedstoneWireConnectionProperty::Up => 981,
              RedstoneWireConnectionProperty::Side => 982,
              RedstoneWireConnectionProperty::None => 983,
            },
            RedstoneWireConnectionProperty::Side => match self.west {
              RedstoneWireConnectionProperty::Up => 984,
              RedstoneWireConnectionProperty::Side => 985,
              RedstoneWireConnectionProperty::None => 986,
            },
            RedstoneWireConnectionProperty::None => match self.west {
              RedstoneWireConnectionProperty::Up => 987,
              RedstoneWireConnectionProperty::Side => 988,
              RedstoneWireConnectionProperty::None => 989,
            },
          },
          14 => match self.south {
            RedstoneWireConnectionProperty::Up => match self.west {
              RedstoneWireConnectionProperty::Up => 990,
              RedstoneWireConnectionProperty::Side => 991,
              RedstoneWireConnectionProperty::None => 992,
            },
            RedstoneWireConnectionProperty::Side => match self.west {
              RedstoneWireConnectionProperty::Up => 993,
              RedstoneWireConnectionProperty::Side => 994,
              RedstoneWireConnectionProperty::None => 995,
            },
            RedstoneWireConnectionProperty::None => match self.west {
              RedstoneWireConnectionProperty::Up => 996,
              RedstoneWireConnectionProperty::Side => 997,
              RedstoneWireConnectionProperty::None => 998,
            },
          },
          15 => match self.south {
            RedstoneWireConnectionProperty::Up => match self.west {
              RedstoneWireConnectionProperty::Up => 999,
              RedstoneWireConnectionProperty::Side => 1000,
              RedstoneWireConnectionProperty::None => 1001,
            },
            RedstoneWireConnectionProperty::Side => match self.west {
              RedstoneWireConnectionProperty::Up => 1002,
              RedstoneWireConnectionProperty::Side => 1003,
              RedstoneWireConnectionProperty::None => 1004,
            },
            RedstoneWireConnectionProperty::None => match self.west {
              RedstoneWireConnectionProperty::Up => 1005,
              RedstoneWireConnectionProperty::Side => 1006,
              RedstoneWireConnectionProperty::None => 1007,
            },
          },
          _ => panic!("Illegal Block State"),
        },
        RedstoneWireConnectionProperty::Side => match self.power.value() {
          0 => match self.south {
            RedstoneWireConnectionProperty::Up => match self.west {
              RedstoneWireConnectionProperty::Up => 1008,
              RedstoneWireConnectionProperty::Side => 1009,
              RedstoneWireConnectionProperty::None => 1010,
            },
            RedstoneWireConnectionProperty::Side => match self.west {
              RedstoneWireConnectionProperty::Up => 1011,
              RedstoneWireConnectionProperty::Side => 1012,
              RedstoneWireConnectionProperty::None => 1013,
            },
            RedstoneWireConnectionProperty::None => match self.west {
              RedstoneWireConnectionProperty::Up => 1014,
              RedstoneWireConnectionProperty::Side => 1015,
              RedstoneWireConnectionProperty::None => 1016,
            },
          },
          1 => match self.south {
            RedstoneWireConnectionProperty::Up => match self.west {
              RedstoneWireConnectionProperty::Up => 1017,
              RedstoneWireConnectionProperty::Side => 1018,
              RedstoneWireConnectionProperty::None => 1019,
            },
            RedstoneWireConnectionProperty::Side => match self.west {
              RedstoneWireConnectionProperty::Up => 1020,
              RedstoneWireConnectionProperty::Side => 1021,
              RedstoneWireConnectionProperty::None => 1022,
            },
            RedstoneWireConnectionProperty::None => match self.west {
              RedstoneWireConnectionProperty::Up => 1023,
              RedstoneWireConnectionProperty::Side => 1024,
              RedstoneWireConnectionProperty::None => 1025,
            },
          },
          2 => match self.south {
            RedstoneWireConnectionProperty::Up => match self.west {
              RedstoneWireConnectionProperty::Up => 1026,
              RedstoneWireConnectionProperty::Side => 1027,
              RedstoneWireConnectionProperty::None => 1028,
            },
            RedstoneWireConnectionProperty::Side => match self.west {
              RedstoneWireConnectionProperty::Up => 1029,
              RedstoneWireConnectionProperty::Side => 1030,
              RedstoneWireConnectionProperty::None => 1031,
            },
            RedstoneWireConnectionProperty::None => match self.west {
              RedstoneWireConnectionProperty::Up => 1032,
              RedstoneWireConnectionProperty::Side => 1033,
              RedstoneWireConnectionProperty::None => 1034,
            },
          },
          3 => match self.south {
            RedstoneWireConnectionProperty::Up => match self.west {
              RedstoneWireConnectionProperty::Up => 1035,
              RedstoneWireConnectionProperty::Side => 1036,
              RedstoneWireConnectionProperty::None => 1037,
            },
            RedstoneWireConnectionProperty::Side => match self.west {
              RedstoneWireConnectionProperty::Up => 1038,
              RedstoneWireConnectionProperty::Side => 1039,
              RedstoneWireConnectionProperty::None => 1040,
            },
            RedstoneWireConnectionProperty::None => match self.west {
              RedstoneWireConnectionProperty::Up => 1041,
              RedstoneWireConnectionProperty::Side => 1042,
              RedstoneWireConnectionProperty::None => 1043,
            },
          },
          4 => match self.south {
            RedstoneWireConnectionProperty::Up => match self.west {
              RedstoneWireConnectionProperty::Up => 1044,
              RedstoneWireConnectionProperty::Side => 1045,
              RedstoneWireConnectionProperty::None => 1046,
            },
            RedstoneWireConnectionProperty::Side => match self.west {
              RedstoneWireConnectionProperty::Up => 1047,
              RedstoneWireConnectionProperty::Side => 1048,
              RedstoneWireConnectionProperty::None => 1049,
            },
            RedstoneWireConnectionProperty::None => match self.west {
              RedstoneWireConnectionProperty::Up => 1050,
              RedstoneWireConnectionProperty::Side => 1051,
              RedstoneWireConnectionProperty::None => 1052,
            },
          },
          5 => match self.south {
            RedstoneWireConnectionProperty::Up => match self.west {
              RedstoneWireConnectionProperty::Up => 1053,
              RedstoneWireConnectionProperty::Side => 1054,
              RedstoneWireConnectionProperty::None => 1055,
            },
            RedstoneWireConnectionProperty::Side => match self.west {
              RedstoneWireConnectionProperty::Up => 1056,
              RedstoneWireConnectionProperty::Side => 1057,
              RedstoneWireConnectionProperty::None => 1058,
            },
            RedstoneWireConnectionProperty::None => match self.west {
              RedstoneWireConnectionProperty::Up => 1059,
              RedstoneWireConnectionProperty::Side => 1060,
              RedstoneWireConnectionProperty::None => 1061,
            },
          },
          6 => match self.south {
            RedstoneWireConnectionProperty::Up => match self.west {
              RedstoneWireConnectionProperty::Up => 1062,
              RedstoneWireConnectionProperty::Side => 1063,
              RedstoneWireConnectionProperty::None => 1064,
            },
            RedstoneWireConnectionProperty::Side => match self.west {
              RedstoneWireConnectionProperty::Up => 1065,
              RedstoneWireConnectionProperty::Side => 1066,
              RedstoneWireConnectionProperty::None => 1067,
            },
            RedstoneWireConnectionProperty::None => match self.west {
              RedstoneWireConnectionProperty::Up => 1068,
              RedstoneWireConnectionProperty::Side => 1069,
              RedstoneWireConnectionProperty::None => 1070,
            },
          },
          7 => match self.south {
            RedstoneWireConnectionProperty::Up => match self.west {
              RedstoneWireConnectionProperty::Up => 1071,
              RedstoneWireConnectionProperty::Side => 1072,
              RedstoneWireConnectionProperty::None => 1073,
            },
            RedstoneWireConnectionProperty::Side => match self.west {
              RedstoneWireConnectionProperty::Up => 1074,
              RedstoneWireConnectionProperty::Side => 1075,
              RedstoneWireConnectionProperty::None => 1076,
            },
            RedstoneWireConnectionProperty::None => match self.west {
              RedstoneWireConnectionProperty::Up => 1077,
              RedstoneWireConnectionProperty::Side => 1078,
              RedstoneWireConnectionProperty::None => 1079,
            },
          },
          8 => match self.south {
            RedstoneWireConnectionProperty::Up => match self.west {
              RedstoneWireConnectionProperty::Up => 1080,
              RedstoneWireConnectionProperty::Side => 1081,
              RedstoneWireConnectionProperty::None => 1082,
            },
            RedstoneWireConnectionProperty::Side => match self.west {
              RedstoneWireConnectionProperty::Up => 1083,
              RedstoneWireConnectionProperty::Side => 1084,
              RedstoneWireConnectionProperty::None => 1085,
            },
            RedstoneWireConnectionProperty::None => match self.west {
              RedstoneWireConnectionProperty::Up => 1086,
              RedstoneWireConnectionProperty::Side => 1087,
              RedstoneWireConnectionProperty::None => 1088,
            },
          },
          9 => match self.south {
            RedstoneWireConnectionProperty::Up => match self.west {
              RedstoneWireConnectionProperty::Up => 1089,
              RedstoneWireConnectionProperty::Side => 1090,
              RedstoneWireConnectionProperty::None => 1091,
            },
            RedstoneWireConnectionProperty::Side => match self.west {
              RedstoneWireConnectionProperty::Up => 1092,
              RedstoneWireConnectionProperty::Side => 1093,
              RedstoneWireConnectionProperty::None => 1094,
            },
            RedstoneWireConnectionProperty::None => match self.west {
              RedstoneWireConnectionProperty::Up => 1095,
              RedstoneWireConnectionProperty::Side => 1096,
              RedstoneWireConnectionProperty::None => 1097,
            },
          },
          10 => match self.south {
            RedstoneWireConnectionProperty::Up => match self.west {
              RedstoneWireConnectionProperty::Up => 1098,
              RedstoneWireConnectionProperty::Side => 1099,
              RedstoneWireConnectionProperty::None => 1100,
            },
            RedstoneWireConnectionProperty::Side => match self.west {
              RedstoneWireConnectionProperty::Up => 1101,
              RedstoneWireConnectionProperty::Side => 1102,
              RedstoneWireConnectionProperty::None => 1103,
            },
            RedstoneWireConnectionProperty::None => match self.west {
              RedstoneWireConnectionProperty::Up => 1104,
              RedstoneWireConnectionProperty::Side => 1105,
              RedstoneWireConnectionProperty::None => 1106,
            },
          },
          11 => match self.south {
            RedstoneWireConnectionProperty::Up => match self.west {
              RedstoneWireConnectionProperty::Up => 1107,
              RedstoneWireConnectionProperty::Side => 1108,
              RedstoneWireConnectionProperty::None => 1109,
            },
            RedstoneWireConnectionProperty::Side => match self.west {
              RedstoneWireConnectionProperty::Up => 1110,
              RedstoneWireConnectionProperty::Side => 1111,
              RedstoneWireConnectionProperty::None => 1112,
            },
            RedstoneWireConnectionProperty::None => match self.west {
              RedstoneWireConnectionProperty::Up => 1113,
              RedstoneWireConnectionProperty::Side => 1114,
              RedstoneWireConnectionProperty::None => 1115,
            },
          },
          12 => match self.south {
            RedstoneWireConnectionProperty::Up => match self.west {
              RedstoneWireConnectionProperty::Up => 1116,
              RedstoneWireConnectionProperty::Side => 1117,
              RedstoneWireConnectionProperty::None => 1118,
            },
            RedstoneWireConnectionProperty::Side => match self.west {
              RedstoneWireConnectionProperty::Up => 1119,
              RedstoneWireConnectionProperty::Side => 1120,
              RedstoneWireConnectionProperty::None => 1121,
            },
            RedstoneWireConnectionProperty::None => match self.west {
              RedstoneWireConnectionProperty::Up => 1122,
              RedstoneWireConnectionProperty::Side => 1123,
              RedstoneWireConnectionProperty::None => 1124,
            },
          },
          13 => match self.south {
            RedstoneWireConnectionProperty::Up => match self.west {
              RedstoneWireConnectionProperty::Up => 1125,
              RedstoneWireConnectionProperty::Side => 1126,
              RedstoneWireConnectionProperty::None => 1127,
            },
            RedstoneWireConnectionProperty::Side => match self.west {
              RedstoneWireConnectionProperty::Up => 1128,
              RedstoneWireConnectionProperty::Side => 1129,
              RedstoneWireConnectionProperty::None => 1130,
            },
            RedstoneWireConnectionProperty::None => match self.west {
              RedstoneWireConnectionProperty::Up => 1131,
              RedstoneWireConnectionProperty::Side => 1132,
              RedstoneWireConnectionProperty::None => 1133,
            },
          },
          14 => match self.south {
            RedstoneWireConnectionProperty::Up => match self.west {
              RedstoneWireConnectionProperty::Up => 1134,
              RedstoneWireConnectionProperty::Side => 1135,
              RedstoneWireConnectionProperty::None => 1136,
            },
            RedstoneWireConnectionProperty::Side => match self.west {
              RedstoneWireConnectionProperty::Up => 1137,
              RedstoneWireConnectionProperty::Side => 1138,
              RedstoneWireConnectionProperty::None => 1139,
            },
            RedstoneWireConnectionProperty::None => match self.west {
              RedstoneWireConnectionProperty::Up => 1140,
              RedstoneWireConnectionProperty::Side => 1141,
              RedstoneWireConnectionProperty::None => 1142,
            },
          },
          15 => match self.south {
            RedstoneWireConnectionProperty::Up => match self.west {
              RedstoneWireConnectionProperty::Up => 1143,
              RedstoneWireConnectionProperty::Side => 1144,
              RedstoneWireConnectionProperty::None => 1145,
            },
            RedstoneWireConnectionProperty::Side => match self.west {
              RedstoneWireConnectionProperty::Up => 1146,
              RedstoneWireConnectionProperty::Side => 1147,
              RedstoneWireConnectionProperty::None => 1148,
            },
            RedstoneWireConnectionProperty::None => match self.west {
              RedstoneWireConnectionProperty::Up => 1149,
              RedstoneWireConnectionProperty::Side => 1150,
              RedstoneWireConnectionProperty::None => 1151,
            },
          },
          _ => panic!("Illegal Block State"),
        },
        RedstoneWireConnectionProperty::None => match self.power.value() {
          0 => match self.south {
            RedstoneWireConnectionProperty::Up => match self.west {
              RedstoneWireConnectionProperty::Up => 1152,
              RedstoneWireConnectionProperty::Side => 1153,
              RedstoneWireConnectionProperty::None => 1154,
            },
            RedstoneWireConnectionProperty::Side => match self.west {
              RedstoneWireConnectionProperty::Up => 1155,
              RedstoneWireConnectionProperty::Side => 1156,
              RedstoneWireConnectionProperty::None => 1157,
            },
            RedstoneWireConnectionProperty::None => match self.west {
              RedstoneWireConnectionProperty::Up => 1158,
              RedstoneWireConnectionProperty::Side => 1159,
              RedstoneWireConnectionProperty::None => 1160,
            },
          },
          1 => match self.south {
            RedstoneWireConnectionProperty::Up => match self.west {
              RedstoneWireConnectionProperty::Up => 1161,
              RedstoneWireConnectionProperty::Side => 1162,
              RedstoneWireConnectionProperty::None => 1163,
            },
            RedstoneWireConnectionProperty::Side => match self.west {
              RedstoneWireConnectionProperty::Up => 1164,
              RedstoneWireConnectionProperty::Side => 1165,
              RedstoneWireConnectionProperty::None => 1166,
            },
            RedstoneWireConnectionProperty::None => match self.west {
              RedstoneWireConnectionProperty::Up => 1167,
              RedstoneWireConnectionProperty::Side => 1168,
              RedstoneWireConnectionProperty::None => 1169,
            },
          },
          2 => match self.south {
            RedstoneWireConnectionProperty::Up => match self.west {
              RedstoneWireConnectionProperty::Up => 1170,
              RedstoneWireConnectionProperty::Side => 1171,
              RedstoneWireConnectionProperty::None => 1172,
            },
            RedstoneWireConnectionProperty::Side => match self.west {
              RedstoneWireConnectionProperty::Up => 1173,
              RedstoneWireConnectionProperty::Side => 1174,
              RedstoneWireConnectionProperty::None => 1175,
            },
            RedstoneWireConnectionProperty::None => match self.west {
              RedstoneWireConnectionProperty::Up => 1176,
              RedstoneWireConnectionProperty::Side => 1177,
              RedstoneWireConnectionProperty::None => 1178,
            },
          },
          3 => match self.south {
            RedstoneWireConnectionProperty::Up => match self.west {
              RedstoneWireConnectionProperty::Up => 1179,
              RedstoneWireConnectionProperty::Side => 1180,
              RedstoneWireConnectionProperty::None => 1181,
            },
            RedstoneWireConnectionProperty::Side => match self.west {
              RedstoneWireConnectionProperty::Up => 1182,
              RedstoneWireConnectionProperty::Side => 1183,
              RedstoneWireConnectionProperty::None => 1184,
            },
            RedstoneWireConnectionProperty::None => match self.west {
              RedstoneWireConnectionProperty::Up => 1185,
              RedstoneWireConnectionProperty::Side => 1186,
              RedstoneWireConnectionProperty::None => 1187,
            },
          },
          4 => match self.south {
            RedstoneWireConnectionProperty::Up => match self.west {
              RedstoneWireConnectionProperty::Up => 1188,
              RedstoneWireConnectionProperty::Side => 1189,
              RedstoneWireConnectionProperty::None => 1190,
            },
            RedstoneWireConnectionProperty::Side => match self.west {
              RedstoneWireConnectionProperty::Up => 1191,
              RedstoneWireConnectionProperty::Side => 1192,
              RedstoneWireConnectionProperty::None => 1193,
            },
            RedstoneWireConnectionProperty::None => match self.west {
              RedstoneWireConnectionProperty::Up => 1194,
              RedstoneWireConnectionProperty::Side => 1195,
              RedstoneWireConnectionProperty::None => 1196,
            },
          },
          5 => match self.south {
            RedstoneWireConnectionProperty::Up => match self.west {
              RedstoneWireConnectionProperty::Up => 1197,
              RedstoneWireConnectionProperty::Side => 1198,
              RedstoneWireConnectionProperty::None => 1199,
            },
            RedstoneWireConnectionProperty::Side => match self.west {
              RedstoneWireConnectionProperty::Up => 1200,
              RedstoneWireConnectionProperty::Side => 1201,
              RedstoneWireConnectionProperty::None => 1202,
            },
            RedstoneWireConnectionProperty::None => match self.west {
              RedstoneWireConnectionProperty::Up => 1203,
              RedstoneWireConnectionProperty::Side => 1204,
              RedstoneWireConnectionProperty::None => 1205,
            },
          },
          6 => match self.south {
            RedstoneWireConnectionProperty::Up => match self.west {
              RedstoneWireConnectionProperty::Up => 1206,
              RedstoneWireConnectionProperty::Side => 1207,
              RedstoneWireConnectionProperty::None => 1208,
            },
            RedstoneWireConnectionProperty::Side => match self.west {
              RedstoneWireConnectionProperty::Up => 1209,
              RedstoneWireConnectionProperty::Side => 1210,
              RedstoneWireConnectionProperty::None => 1211,
            },
            RedstoneWireConnectionProperty::None => match self.west {
              RedstoneWireConnectionProperty::Up => 1212,
              RedstoneWireConnectionProperty::Side => 1213,
              RedstoneWireConnectionProperty::None => 1214,
            },
          },
          7 => match self.south {
            RedstoneWireConnectionProperty::Up => match self.west {
              RedstoneWireConnectionProperty::Up => 1215,
              RedstoneWireConnectionProperty::Side => 1216,
              RedstoneWireConnectionProperty::None => 1217,
            },
            RedstoneWireConnectionProperty::Side => match self.west {
              RedstoneWireConnectionProperty::Up => 1218,
              RedstoneWireConnectionProperty::Side => 1219,
              RedstoneWireConnectionProperty::None => 1220,
            },
            RedstoneWireConnectionProperty::None => match self.west {
              RedstoneWireConnectionProperty::Up => 1221,
              RedstoneWireConnectionProperty::Side => 1222,
              RedstoneWireConnectionProperty::None => 1223,
            },
          },
          8 => match self.south {
            RedstoneWireConnectionProperty::Up => match self.west {
              RedstoneWireConnectionProperty::Up => 1224,
              RedstoneWireConnectionProperty::Side => 1225,
              RedstoneWireConnectionProperty::None => 1226,
            },
            RedstoneWireConnectionProperty::Side => match self.west {
              RedstoneWireConnectionProperty::Up => 1227,
              RedstoneWireConnectionProperty::Side => 1228,
              RedstoneWireConnectionProperty::None => 1229,
            },
            RedstoneWireConnectionProperty::None => match self.west {
              RedstoneWireConnectionProperty::Up => 1230,
              RedstoneWireConnectionProperty::Side => 1231,
              RedstoneWireConnectionProperty::None => 1232,
            },
          },
          9 => match self.south {
            RedstoneWireConnectionProperty::Up => match self.west {
              RedstoneWireConnectionProperty::Up => 1233,
              RedstoneWireConnectionProperty::Side => 1234,
              RedstoneWireConnectionProperty::None => 1235,
            },
            RedstoneWireConnectionProperty::Side => match self.west {
              RedstoneWireConnectionProperty::Up => 1236,
              RedstoneWireConnectionProperty::Side => 1237,
              RedstoneWireConnectionProperty::None => 1238,
            },
            RedstoneWireConnectionProperty::None => match self.west {
              RedstoneWireConnectionProperty::Up => 1239,
              RedstoneWireConnectionProperty::Side => 1240,
              RedstoneWireConnectionProperty::None => 1241,
            },
          },
          10 => match self.south {
            RedstoneWireConnectionProperty::Up => match self.west {
              RedstoneWireConnectionProperty::Up => 1242,
              RedstoneWireConnectionProperty::Side => 1243,
              RedstoneWireConnectionProperty::None => 1244,
            },
            RedstoneWireConnectionProperty::Side => match self.west {
              RedstoneWireConnectionProperty::Up => 1245,
              RedstoneWireConnectionProperty::Side => 1246,
              RedstoneWireConnectionProperty::None => 1247,
            },
            RedstoneWireConnectionProperty::None => match self.west {
              RedstoneWireConnectionProperty::Up => 1248,
              RedstoneWireConnectionProperty::Side => 1249,
              RedstoneWireConnectionProperty::None => 1250,
            },
          },
          11 => match self.south {
            RedstoneWireConnectionProperty::Up => match self.west {
              RedstoneWireConnectionProperty::Up => 1251,
              RedstoneWireConnectionProperty::Side => 1252,
              RedstoneWireConnectionProperty::None => 1253,
            },
            RedstoneWireConnectionProperty::Side => match self.west {
              RedstoneWireConnectionProperty::Up => 1254,
              RedstoneWireConnectionProperty::Side => 1255,
              RedstoneWireConnectionProperty::None => 1256,
            },
            RedstoneWireConnectionProperty::None => match self.west {
              RedstoneWireConnectionProperty::Up => 1257,
              RedstoneWireConnectionProperty::Side => 1258,
              RedstoneWireConnectionProperty::None => 1259,
            },
          },
          12 => match self.south {
            RedstoneWireConnectionProperty::Up => match self.west {
              RedstoneWireConnectionProperty::Up => 1260,
              RedstoneWireConnectionProperty::Side => 1261,
              RedstoneWireConnectionProperty::None => 1262,
            },
            RedstoneWireConnectionProperty::Side => match self.west {
              RedstoneWireConnectionProperty::Up => 1263,
              RedstoneWireConnectionProperty::Side => 1264,
              RedstoneWireConnectionProperty::None => 1265,
            },
            RedstoneWireConnectionProperty::None => match self.west {
              RedstoneWireConnectionProperty::Up => 1266,
              RedstoneWireConnectionProperty::Side => 1267,
              RedstoneWireConnectionProperty::None => 1268,
            },
          },
          13 => match self.south {
            RedstoneWireConnectionProperty::Up => match self.west {
              RedstoneWireConnectionProperty::Up => 1269,
              RedstoneWireConnectionProperty::Side => 1270,
              RedstoneWireConnectionProperty::None => 1271,
            },
            RedstoneWireConnectionProperty::Side => match self.west {
              RedstoneWireConnectionProperty::Up => 1272,
              RedstoneWireConnectionProperty::Side => 1273,
              RedstoneWireConnectionProperty::None => 1274,
            },
            RedstoneWireConnectionProperty::None => match self.west {
              RedstoneWireConnectionProperty::Up => 1275,
              RedstoneWireConnectionProperty::Side => 1276,
              RedstoneWireConnectionProperty::None => 1277,
            },
          },
          14 => match self.south {
            RedstoneWireConnectionProperty::Up => match self.west {
              RedstoneWireConnectionProperty::Up => 1278,
              RedstoneWireConnectionProperty::Side => 1279,
              RedstoneWireConnectionProperty::None => 1280,
            },
            RedstoneWireConnectionProperty::Side => match self.west {
              RedstoneWireConnectionProperty::Up => 1281,
              RedstoneWireConnectionProperty::Side => 1282,
              RedstoneWireConnectionProperty::None => 1283,
            },
            RedstoneWireConnectionProperty::None => match self.west {
              RedstoneWireConnectionProperty::Up => 1284,
              RedstoneWireConnectionProperty::Side => 1285,
              RedstoneWireConnectionProperty::None => 1286,
            },
          },
          15 => match self.south {
            RedstoneWireConnectionProperty::Up => match self.west {
              RedstoneWireConnectionProperty::Up => 1287,
              RedstoneWireConnectionProperty::Side => 1288,
              RedstoneWireConnectionProperty::None => 1289,
            },
            RedstoneWireConnectionProperty::Side => match self.west {
              RedstoneWireConnectionProperty::Up => 1290,
              RedstoneWireConnectionProperty::Side => 1291,
              RedstoneWireConnectionProperty::None => 1292,
            },
            RedstoneWireConnectionProperty::None => match self.west {
              RedstoneWireConnectionProperty::Up => 1293,
              RedstoneWireConnectionProperty::Side => 1294,
              RedstoneWireConnectionProperty::None => 1295,
            },
          },
          _ => panic!("Illegal Block State"),
        },
      },
    }
  }
}
impl Default for RedstoneWireData {
  fn default() -> Self {
    Self {east: RedstoneWireConnectionProperty::None, north: RedstoneWireConnectionProperty::None, power: NumberFrom0To15Property::new(0), south: RedstoneWireConnectionProperty::None, west: RedstoneWireConnectionProperty::None}
  }
}
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]
pub struct WheatData {
  pub age: NumberFrom0To7Property,
}
impl WheatData {
  pub fn from_offset(offset: usize) -> Option<Self> {
    match offset {
      0 => Some(Self {age: NumberFrom0To7Property::new(0)}),
      1 => Some(Self {age: NumberFrom0To7Property::new(1)}),
      2 => Some(Self {age: NumberFrom0To7Property::new(2)}),
      3 => Some(Self {age: NumberFrom0To7Property::new(3)}),
      4 => Some(Self {age: NumberFrom0To7Property::new(4)}),
      5 => Some(Self {age: NumberFrom0To7Property::new(5)}),
      6 => Some(Self {age: NumberFrom0To7Property::new(6)}),
      7 => Some(Self {age: NumberFrom0To7Property::new(7)}),
      _ => None,
    }
  }
  pub fn to_offset(self) -> usize {
    match self.age.value() {
      0 => 0,
      1 => 1,
      2 => 2,
      3 => 3,
      4 => 4,
      5 => 5,
      6 => 6,
      7 => 7,
      _ => panic!("Illegal Block State"),
    }
  }
}
impl Default for WheatData {
  fn default() -> Self {
    Self {age: NumberFrom0To7Property::new(0)}
  }
}
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]
pub struct FarmlandData {
  pub moisture: NumberFrom0To7Property,
}
impl FarmlandData {
  pub fn from_offset(offset: usize) -> Option<Self> {
    match offset {
      0 => Some(Self {moisture: NumberFrom0To7Property::new(0)}),
      1 => Some(Self {moisture: NumberFrom0To7Property::new(1)}),
      2 => Some(Self {moisture: NumberFrom0To7Property::new(2)}),
      3 => Some(Self {moisture: NumberFrom0To7Property::new(3)}),
      4 => Some(Self {moisture: NumberFrom0To7Property::new(4)}),
      5 => Some(Self {moisture: NumberFrom0To7Property::new(5)}),
      6 => Some(Self {moisture: NumberFrom0To7Property::new(6)}),
      7 => Some(Self {moisture: NumberFrom0To7Property::new(7)}),
      _ => None,
    }
  }
  pub fn to_offset(self) -> usize {
    match self.moisture.value() {
      0 => 0,
      1 => 1,
      2 => 2,
      3 => 3,
      4 => 4,
      5 => 5,
      6 => 6,
      7 => 7,
      _ => panic!("Illegal Block State"),
    }
  }
}
impl Default for FarmlandData {
  fn default() -> Self {
    Self {moisture: NumberFrom0To7Property::new(0)}
  }
}
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]
pub struct CardinalLightableData {
  pub facing: CardinalFacingProperty,
  pub lit: bool,
}
impl CardinalLightableData {
  pub fn from_offset(offset: usize) -> Option<Self> {
    match offset {
      0 => Some(Self {facing: CardinalFacingProperty::North, lit: true}),
      1 => Some(Self {facing: CardinalFacingProperty::North, lit: false}),
      2 => Some(Self {facing: CardinalFacingProperty::South, lit: true}),
      3 => Some(Self {facing: CardinalFacingProperty::South, lit: false}),
      4 => Some(Self {facing: CardinalFacingProperty::West, lit: true}),
      5 => Some(Self {facing: CardinalFacingProperty::West, lit: false}),
      6 => Some(Self {facing: CardinalFacingProperty::East, lit: true}),
      7 => Some(Self {facing: CardinalFacingProperty::East, lit: false}),
      _ => None,
    }
  }
  pub fn to_offset(self) -> usize {
    match self.facing {
      CardinalFacingProperty::North => match self.lit {
        true => 0,
        false => 1,
      },
      CardinalFacingProperty::South => match self.lit {
        true => 2,
        false => 3,
      },
      CardinalFacingProperty::West => match self.lit {
        true => 4,
        false => 5,
      },
      CardinalFacingProperty::East => match self.lit {
        true => 6,
        false => 7,
      },
    }
  }
}
impl Default for CardinalLightableData {
  fn default() -> Self {
    Self {facing: CardinalFacingProperty::North, lit: false}
  }
}
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]
pub struct SignData {
  pub rotation: NumberFrom0To15Property,
  pub waterlogged: bool,
}
impl SignData {
  pub fn from_offset(offset: usize) -> Option<Self> {
    match offset {
      0 => Some(Self {rotation: NumberFrom0To15Property::new(0), waterlogged: true}),
      1 => Some(Self {rotation: NumberFrom0To15Property::new(0), waterlogged: false}),
      2 => Some(Self {rotation: NumberFrom0To15Property::new(1), waterlogged: true}),
      3 => Some(Self {rotation: NumberFrom0To15Property::new(1), waterlogged: false}),
      4 => Some(Self {rotation: NumberFrom0To15Property::new(2), waterlogged: true}),
      5 => Some(Self {rotation: NumberFrom0To15Property::new(2), waterlogged: false}),
      6 => Some(Self {rotation: NumberFrom0To15Property::new(3), waterlogged: true}),
      7 => Some(Self {rotation: NumberFrom0To15Property::new(3), waterlogged: false}),
      8 => Some(Self {rotation: NumberFrom0To15Property::new(4), waterlogged: true}),
      9 => Some(Self {rotation: NumberFrom0To15Property::new(4), waterlogged: false}),
      10 => Some(Self {rotation: NumberFrom0To15Property::new(5), waterlogged: true}),
      11 => Some(Self {rotation: NumberFrom0To15Property::new(5), waterlogged: false}),
      12 => Some(Self {rotation: NumberFrom0To15Property::new(6), waterlogged: true}),
      13 => Some(Self {rotation: NumberFrom0To15Property::new(6), waterlogged: false}),
      14 => Some(Self {rotation: NumberFrom0To15Property::new(7), waterlogged: true}),
      15 => Some(Self {rotation: NumberFrom0To15Property::new(7), waterlogged: false}),
      16 => Some(Self {rotation: NumberFrom0To15Property::new(8), waterlogged: true}),
      17 => Some(Self {rotation: NumberFrom0To15Property::new(8), waterlogged: false}),
      18 => Some(Self {rotation: NumberFrom0To15Property::new(9), waterlogged: true}),
      19 => Some(Self {rotation: NumberFrom0To15Property::new(9), waterlogged: false}),
      20 => Some(Self {rotation: NumberFrom0To15Property::new(10), waterlogged: true}),
      21 => Some(Self {rotation: NumberFrom0To15Property::new(10), waterlogged: false}),
      22 => Some(Self {rotation: NumberFrom0To15Property::new(11), waterlogged: true}),
      23 => Some(Self {rotation: NumberFrom0To15Property::new(11), waterlogged: false}),
      24 => Some(Self {rotation: NumberFrom0To15Property::new(12), waterlogged: true}),
      25 => Some(Self {rotation: NumberFrom0To15Property::new(12), waterlogged: false}),
      26 => Some(Self {rotation: NumberFrom0To15Property::new(13), waterlogged: true}),
      27 => Some(Self {rotation: NumberFrom0To15Property::new(13), waterlogged: false}),
      28 => Some(Self {rotation: NumberFrom0To15Property::new(14), waterlogged: true}),
      29 => Some(Self {rotation: NumberFrom0To15Property::new(14), waterlogged: false}),
      30 => Some(Self {rotation: NumberFrom0To15Property::new(15), waterlogged: true}),
      31 => Some(Self {rotation: NumberFrom0To15Property::new(15), waterlogged: false}),
      _ => None,
    }
  }
  pub fn to_offset(self) -> usize {
    match self.rotation.value() {
      0 => match self.waterlogged {
        true => 0,
        false => 1,
      },
      1 => match self.waterlogged {
        true => 2,
        false => 3,
      },
      2 => match self.waterlogged {
        true => 4,
        false => 5,
      },
      3 => match self.waterlogged {
        true => 6,
        false => 7,
      },
      4 => match self.waterlogged {
        true => 8,
        false => 9,
      },
      5 => match self.waterlogged {
        true => 10,
        false => 11,
      },
      6 => match self.waterlogged {
        true => 12,
        false => 13,
      },
      7 => match self.waterlogged {
        true => 14,
        false => 15,
      },
      8 => match self.waterlogged {
        true => 16,
        false => 17,
      },
      9 => match self.waterlogged {
        true => 18,
        false => 19,
      },
      10 => match self.waterlogged {
        true => 20,
        false => 21,
      },
      11 => match self.waterlogged {
        true => 22,
        false => 23,
      },
      12 => match self.waterlogged {
        true => 24,
        false => 25,
      },
      13 => match self.waterlogged {
        true => 26,
        false => 27,
      },
      14 => match self.waterlogged {
        true => 28,
        false => 29,
      },
      15 => match self.waterlogged {
        true => 30,
        false => 31,
      },
      _ => panic!("Illegal Block State"),
    }
  }
}
impl Default for SignData {
  fn default() -> Self {
    Self {rotation: NumberFrom0To15Property::new(0), waterlogged: false}
  }
}
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]
pub struct DoorData {
  pub facing: CardinalFacingProperty,
  pub half: DoorHalfProperty,
  pub hinge: DoorHingeProperty,
  pub open: bool,
  pub powered: bool,
}
impl DoorData {
  pub fn from_offset(offset: usize) -> Option<Self> {
    match offset {
      0 => Some(Self {facing: CardinalFacingProperty::North, half: DoorHalfProperty::Upper, hinge: DoorHingeProperty::Left, open: true, powered: true}),
      1 => Some(Self {facing: CardinalFacingProperty::North, half: DoorHalfProperty::Upper, hinge: DoorHingeProperty::Left, open: true, powered: false}),
      2 => Some(Self {facing: CardinalFacingProperty::North, half: DoorHalfProperty::Upper, hinge: DoorHingeProperty::Left, open: false, powered: true}),
      3 => Some(Self {facing: CardinalFacingProperty::North, half: DoorHalfProperty::Upper, hinge: DoorHingeProperty::Left, open: false, powered: false}),
      4 => Some(Self {facing: CardinalFacingProperty::North, half: DoorHalfProperty::Upper, hinge: DoorHingeProperty::Right, open: true, powered: true}),
      5 => Some(Self {facing: CardinalFacingProperty::North, half: DoorHalfProperty::Upper, hinge: DoorHingeProperty::Right, open: true, powered: false}),
      6 => Some(Self {facing: CardinalFacingProperty::North, half: DoorHalfProperty::Upper, hinge: DoorHingeProperty::Right, open: false, powered: true}),
      7 => Some(Self {facing: CardinalFacingProperty::North, half: DoorHalfProperty::Upper, hinge: DoorHingeProperty::Right, open: false, powered: false}),
      8 => Some(Self {facing: CardinalFacingProperty::North, half: DoorHalfProperty::Lower, hinge: DoorHingeProperty::Left, open: true, powered: true}),
      9 => Some(Self {facing: CardinalFacingProperty::North, half: DoorHalfProperty::Lower, hinge: DoorHingeProperty::Left, open: true, powered: false}),
      10 => Some(Self {facing: CardinalFacingProperty::North, half: DoorHalfProperty::Lower, hinge: DoorHingeProperty::Left, open: false, powered: true}),
      11 => Some(Self {facing: CardinalFacingProperty::North, half: DoorHalfProperty::Lower, hinge: DoorHingeProperty::Left, open: false, powered: false}),
      12 => Some(Self {facing: CardinalFacingProperty::North, half: DoorHalfProperty::Lower, hinge: DoorHingeProperty::Right, open: true, powered: true}),
      13 => Some(Self {facing: CardinalFacingProperty::North, half: DoorHalfProperty::Lower, hinge: DoorHingeProperty::Right, open: true, powered: false}),
      14 => Some(Self {facing: CardinalFacingProperty::North, half: DoorHalfProperty::Lower, hinge: DoorHingeProperty::Right, open: false, powered: true}),
      15 => Some(Self {facing: CardinalFacingProperty::North, half: DoorHalfProperty::Lower, hinge: DoorHingeProperty::Right, open: false, powered: false}),
      16 => Some(Self {facing: CardinalFacingProperty::South, half: DoorHalfProperty::Upper, hinge: DoorHingeProperty::Left, open: true, powered: true}),
      17 => Some(Self {facing: CardinalFacingProperty::South, half: DoorHalfProperty::Upper, hinge: DoorHingeProperty::Left, open: true, powered: false}),
      18 => Some(Self {facing: CardinalFacingProperty::South, half: DoorHalfProperty::Upper, hinge: DoorHingeProperty::Left, open: false, powered: true}),
      19 => Some(Self {facing: CardinalFacingProperty::South, half: DoorHalfProperty::Upper, hinge: DoorHingeProperty::Left, open: false, powered: false}),
      20 => Some(Self {facing: CardinalFacingProperty::South, half: DoorHalfProperty::Upper, hinge: DoorHingeProperty::Right, open: true, powered: true}),
      21 => Some(Self {facing: CardinalFacingProperty::South, half: DoorHalfProperty::Upper, hinge: DoorHingeProperty::Right, open: true, powered: false}),
      22 => Some(Self {facing: CardinalFacingProperty::South, half: DoorHalfProperty::Upper, hinge: DoorHingeProperty::Right, open: false, powered: true}),
      23 => Some(Self {facing: CardinalFacingProperty::South, half: DoorHalfProperty::Upper, hinge: DoorHingeProperty::Right, open: false, powered: false}),
      24 => Some(Self {facing: CardinalFacingProperty::South, half: DoorHalfProperty::Lower, hinge: DoorHingeProperty::Left, open: true, powered: true}),
      25 => Some(Self {facing: CardinalFacingProperty::South, half: DoorHalfProperty::Lower, hinge: DoorHingeProperty::Left, open: true, powered: false}),
      26 => Some(Self {facing: CardinalFacingProperty::South, half: DoorHalfProperty::Lower, hinge: DoorHingeProperty::Left, open: false, powered: true}),
      27 => Some(Self {facing: CardinalFacingProperty::South, half: DoorHalfProperty::Lower, hinge: DoorHingeProperty::Left, open: false, powered: false}),
      28 => Some(Self {facing: CardinalFacingProperty::South, half: DoorHalfProperty::Lower, hinge: DoorHingeProperty::Right, open: true, powered: true}),
      29 => Some(Self {facing: CardinalFacingProperty::South, half: DoorHalfProperty::Lower, hinge: DoorHingeProperty::Right, open: true, powered: false}),
      30 => Some(Self {facing: CardinalFacingProperty::South, half: DoorHalfProperty::Lower, hinge: DoorHingeProperty::Right, open: false, powered: true}),
      31 => Some(Self {facing: CardinalFacingProperty::South, half: DoorHalfProperty::Lower, hinge: DoorHingeProperty::Right, open: false, powered: false}),
      32 => Some(Self {facing: CardinalFacingProperty::West, half: DoorHalfProperty::Upper, hinge: DoorHingeProperty::Left, open: true, powered: true}),
      33 => Some(Self {facing: CardinalFacingProperty::West, half: DoorHalfProperty::Upper, hinge: DoorHingeProperty::Left, open: true, powered: false}),
      34 => Some(Self {facing: CardinalFacingProperty::West, half: DoorHalfProperty::Upper, hinge: DoorHingeProperty::Left, open: false, powered: true}),
      35 => Some(Self {facing: CardinalFacingProperty::West, half: DoorHalfProperty::Upper, hinge: DoorHingeProperty::Left, open: false, powered: false}),
      36 => Some(Self {facing: CardinalFacingProperty::West, half: DoorHalfProperty::Upper, hinge: DoorHingeProperty::Right, open: true, powered: true}),
      37 => Some(Self {facing: CardinalFacingProperty::West, half: DoorHalfProperty::Upper, hinge: DoorHingeProperty::Right, open: true, powered: false}),
      38 => Some(Self {facing: CardinalFacingProperty::West, half: DoorHalfProperty::Upper, hinge: DoorHingeProperty::Right, open: false, powered: true}),
      39 => Some(Self {facing: CardinalFacingProperty::West, half: DoorHalfProperty::Upper, hinge: DoorHingeProperty::Right, open: false, powered: false}),
      40 => Some(Self {facing: CardinalFacingProperty::West, half: DoorHalfProperty::Lower, hinge: DoorHingeProperty::Left, open: true, powered: true}),
      41 => Some(Self {facing: CardinalFacingProperty::West, half: DoorHalfProperty::Lower, hinge: DoorHingeProperty::Left, open: true, powered: false}),
      42 => Some(Self {facing: CardinalFacingProperty::West, half: DoorHalfProperty::Lower, hinge: DoorHingeProperty::Left, open: false, powered: true}),
      43 => Some(Self {facing: CardinalFacingProperty::West, half: DoorHalfProperty::Lower, hinge: DoorHingeProperty::Left, open: false, powered: false}),
      44 => Some(Self {facing: CardinalFacingProperty::West, half: DoorHalfProperty::Lower, hinge: DoorHingeProperty::Right, open: true, powered: true}),
      45 => Some(Self {facing: CardinalFacingProperty::West, half: DoorHalfProperty::Lower, hinge: DoorHingeProperty::Right, open: true, powered: false}),
      46 => Some(Self {facing: CardinalFacingProperty::West, half: DoorHalfProperty::Lower, hinge: DoorHingeProperty::Right, open: false, powered: true}),
      47 => Some(Self {facing: CardinalFacingProperty::West, half: DoorHalfProperty::Lower, hinge: DoorHingeProperty::Right, open: false, powered: false}),
      48 => Some(Self {facing: CardinalFacingProperty::East, half: DoorHalfProperty::Upper, hinge: DoorHingeProperty::Left, open: true, powered: true}),
      49 => Some(Self {facing: CardinalFacingProperty::East, half: DoorHalfProperty::Upper, hinge: DoorHingeProperty::Left, open: true, powered: false}),
      50 => Some(Self {facing: CardinalFacingProperty::East, half: DoorHalfProperty::Upper, hinge: DoorHingeProperty::Left, open: false, powered: true}),
      51 => Some(Self {facing: CardinalFacingProperty::East, half: DoorHalfProperty::Upper, hinge: DoorHingeProperty::Left, open: false, powered: false}),
      52 => Some(Self {facing: CardinalFacingProperty::East, half: DoorHalfProperty::Upper, hinge: DoorHingeProperty::Right, open: true, powered: true}),
      53 => Some(Self {facing: CardinalFacingProperty::East, half: DoorHalfProperty::Upper, hinge: DoorHingeProperty::Right, open: true, powered: false}),
      54 => Some(Self {facing: CardinalFacingProperty::East, half: DoorHalfProperty::Upper, hinge: DoorHingeProperty::Right, open: false, powered: true}),
      55 => Some(Self {facing: CardinalFacingProperty::East, half: DoorHalfProperty::Upper, hinge: DoorHingeProperty::Right, open: false, powered: false}),
      56 => Some(Self {facing: CardinalFacingProperty::East, half: DoorHalfProperty::Lower, hinge: DoorHingeProperty::Left, open: true, powered: true}),
      57 => Some(Self {facing: CardinalFacingProperty::East, half: DoorHalfProperty::Lower, hinge: DoorHingeProperty::Left, open: true, powered: false}),
      58 => Some(Self {facing: CardinalFacingProperty::East, half: DoorHalfProperty::Lower, hinge: DoorHingeProperty::Left, open: false, powered: true}),
      59 => Some(Self {facing: CardinalFacingProperty::East, half: DoorHalfProperty::Lower, hinge: DoorHingeProperty::Left, open: false, powered: false}),
      60 => Some(Self {facing: CardinalFacingProperty::East, half: DoorHalfProperty::Lower, hinge: DoorHingeProperty::Right, open: true, powered: true}),
      61 => Some(Self {facing: CardinalFacingProperty::East, half: DoorHalfProperty::Lower, hinge: DoorHingeProperty::Right, open: true, powered: false}),
      62 => Some(Self {facing: CardinalFacingProperty::East, half: DoorHalfProperty::Lower, hinge: DoorHingeProperty::Right, open: false, powered: true}),
      63 => Some(Self {facing: CardinalFacingProperty::East, half: DoorHalfProperty::Lower, hinge: DoorHingeProperty::Right, open: false, powered: false}),
      _ => None,
    }
  }
  pub fn to_offset(self) -> usize {
    match self.facing {
      CardinalFacingProperty::North => match self.half {
        DoorHalfProperty::Upper => match self.hinge {
          DoorHingeProperty::Left => match self.open {
            true => match self.powered {
              true => 0,
              false => 1,
            },
            false => match self.powered {
              true => 2,
              false => 3,
            },
          },
          DoorHingeProperty::Right => match self.open {
            true => match self.powered {
              true => 4,
              false => 5,
            },
            false => match self.powered {
              true => 6,
              false => 7,
            },
          },
        },
        DoorHalfProperty::Lower => match self.hinge {
          DoorHingeProperty::Left => match self.open {
            true => match self.powered {
              true => 8,
              false => 9,
            },
            false => match self.powered {
              true => 10,
              false => 11,
            },
          },
          DoorHingeProperty::Right => match self.open {
            true => match self.powered {
              true => 12,
              false => 13,
            },
            false => match self.powered {
              true => 14,
              false => 15,
            },
          },
        },
      },
      CardinalFacingProperty::South => match self.half {
        DoorHalfProperty::Upper => match self.hinge {
          DoorHingeProperty::Left => match self.open {
            true => match self.powered {
              true => 16,
              false => 17,
            },
            false => match self.powered {
              true => 18,
              false => 19,
            },
          },
          DoorHingeProperty::Right => match self.open {
            true => match self.powered {
              true => 20,
              false => 21,
            },
            false => match self.powered {
              true => 22,
              false => 23,
            },
          },
        },
        DoorHalfProperty::Lower => match self.hinge {
          DoorHingeProperty::Left => match self.open {
            true => match self.powered {
              true => 24,
              false => 25,
            },
            false => match self.powered {
              true => 26,
              false => 27,
            },
          },
          DoorHingeProperty::Right => match self.open {
            true => match self.powered {
              true => 28,
              false => 29,
            },
            false => match self.powered {
              true => 30,
              false => 31,
            },
          },
        },
      },
      CardinalFacingProperty::West => match self.half {
        DoorHalfProperty::Upper => match self.hinge {
          DoorHingeProperty::Left => match self.open {
            true => match self.powered {
              true => 32,
              false => 33,
            },
            false => match self.powered {
              true => 34,
              false => 35,
            },
          },
          DoorHingeProperty::Right => match self.open {
            true => match self.powered {
              true => 36,
              false => 37,
            },
            false => match self.powered {
              true => 38,
              false => 39,
            },
          },
        },
        DoorHalfProperty::Lower => match self.hinge {
          DoorHingeProperty::Left => match self.open {
            true => match self.powered {
              true => 40,
              false => 41,
            },
            false => match self.powered {
              true => 42,
              false => 43,
            },
          },
          DoorHingeProperty::Right => match self.open {
            true => match self.powered {
              true => 44,
              false => 45,
            },
            false => match self.powered {
              true => 46,
              false => 47,
            },
          },
        },
      },
      CardinalFacingProperty::East => match self.half {
        DoorHalfProperty::Upper => match self.hinge {
          DoorHingeProperty::Left => match self.open {
            true => match self.powered {
              true => 48,
              false => 49,
            },
            false => match self.powered {
              true => 50,
              false => 51,
            },
          },
          DoorHingeProperty::Right => match self.open {
            true => match self.powered {
              true => 52,
              false => 53,
            },
            false => match self.powered {
              true => 54,
              false => 55,
            },
          },
        },
        DoorHalfProperty::Lower => match self.hinge {
          DoorHingeProperty::Left => match self.open {
            true => match self.powered {
              true => 56,
              false => 57,
            },
            false => match self.powered {
              true => 58,
              false => 59,
            },
          },
          DoorHingeProperty::Right => match self.open {
            true => match self.powered {
              true => 60,
              false => 61,
            },
            false => match self.powered {
              true => 62,
              false => 63,
            },
          },
        },
      },
    }
  }
}
impl Default for DoorData {
  fn default() -> Self {
    Self {facing: CardinalFacingProperty::North, half: DoorHalfProperty::Lower, hinge: DoorHingeProperty::Left, open: false, powered: false}
  }
}
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]
pub struct LadderData {
  pub facing: CardinalFacingProperty,
  pub waterlogged: bool,
}
impl LadderData {
  pub fn from_offset(offset: usize) -> Option<Self> {
    match offset {
      0 => Some(Self {facing: CardinalFacingProperty::North, waterlogged: true}),
      1 => Some(Self {facing: CardinalFacingProperty::North, waterlogged: false}),
      2 => Some(Self {facing: CardinalFacingProperty::South, waterlogged: true}),
      3 => Some(Self {facing: CardinalFacingProperty::South, waterlogged: false}),
      4 => Some(Self {facing: CardinalFacingProperty::West, waterlogged: true}),
      5 => Some(Self {facing: CardinalFacingProperty::West, waterlogged: false}),
      6 => Some(Self {facing: CardinalFacingProperty::East, waterlogged: true}),
      7 => Some(Self {facing: CardinalFacingProperty::East, waterlogged: false}),
      _ => None,
    }
  }
  pub fn to_offset(self) -> usize {
    match self.facing {
      CardinalFacingProperty::North => match self.waterlogged {
        true => 0,
        false => 1,
      },
      CardinalFacingProperty::South => match self.waterlogged {
        true => 2,
        false => 3,
      },
      CardinalFacingProperty::West => match self.waterlogged {
        true => 4,
        false => 5,
      },
      CardinalFacingProperty::East => match self.waterlogged {
        true => 6,
        false => 7,
      },
    }
  }
}
impl Default for LadderData {
  fn default() -> Self {
    Self {facing: CardinalFacingProperty::North, waterlogged: false}
  }
}
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]
pub struct RailData {
  pub shape: RailShapeProperty,
}
impl RailData {
  pub fn from_offset(offset: usize) -> Option<Self> {
    match offset {
      0 => Some(Self {shape: RailShapeProperty::NorthSouth}),
      1 => Some(Self {shape: RailShapeProperty::EastWest}),
      2 => Some(Self {shape: RailShapeProperty::AscendingEast}),
      3 => Some(Self {shape: RailShapeProperty::AscendingWest}),
      4 => Some(Self {shape: RailShapeProperty::AscendingNorth}),
      5 => Some(Self {shape: RailShapeProperty::AscendingSouth}),
      6 => Some(Self {shape: RailShapeProperty::SouthEast}),
      7 => Some(Self {shape: RailShapeProperty::SouthWest}),
      8 => Some(Self {shape: RailShapeProperty::NorthWest}),
      9 => Some(Self {shape: RailShapeProperty::NorthEast}),
      _ => None,
    }
  }
  pub fn to_offset(self) -> usize {
    match self.shape {
      RailShapeProperty::NorthSouth => 0,
      RailShapeProperty::EastWest => 1,
      RailShapeProperty::AscendingEast => 2,
      RailShapeProperty::AscendingWest => 3,
      RailShapeProperty::AscendingNorth => 4,
      RailShapeProperty::AscendingSouth => 5,
      RailShapeProperty::SouthEast => 6,
      RailShapeProperty::SouthWest => 7,
      RailShapeProperty::NorthWest => 8,
      RailShapeProperty::NorthEast => 9,
    }
  }
}
impl Default for RailData {
  fn default() -> Self {
    Self {shape: RailShapeProperty::NorthSouth}
  }
}
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]
pub struct WallSignData {
  pub facing: CardinalFacingProperty,
  pub waterlogged: bool,
}
impl WallSignData {
  pub fn from_offset(offset: usize) -> Option<Self> {
    match offset {
      0 => Some(Self {facing: CardinalFacingProperty::North, waterlogged: true}),
      1 => Some(Self {facing: CardinalFacingProperty::North, waterlogged: false}),
      2 => Some(Self {facing: CardinalFacingProperty::South, waterlogged: true}),
      3 => Some(Self {facing: CardinalFacingProperty::South, waterlogged: false}),
      4 => Some(Self {facing: CardinalFacingProperty::West, waterlogged: true}),
      5 => Some(Self {facing: CardinalFacingProperty::West, waterlogged: false}),
      6 => Some(Self {facing: CardinalFacingProperty::East, waterlogged: true}),
      7 => Some(Self {facing: CardinalFacingProperty::East, waterlogged: false}),
      _ => None,
    }
  }
  pub fn to_offset(self) -> usize {
    match self.facing {
      CardinalFacingProperty::North => match self.waterlogged {
        true => 0,
        false => 1,
      },
      CardinalFacingProperty::South => match self.waterlogged {
        true => 2,
        false => 3,
      },
      CardinalFacingProperty::West => match self.waterlogged {
        true => 4,
        false => 5,
      },
      CardinalFacingProperty::East => match self.waterlogged {
        true => 6,
        false => 7,
      },
    }
  }
}
impl Default for WallSignData {
  fn default() -> Self {
    Self {facing: CardinalFacingProperty::North, waterlogged: false}
  }
}
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]
pub struct LeverData {
  pub face: FaceProperty,
  pub facing: CardinalFacingProperty,
  pub powered: bool,
}
impl LeverData {
  pub fn from_offset(offset: usize) -> Option<Self> {
    match offset {
      0 => Some(Self {face: FaceProperty::Floor, facing: CardinalFacingProperty::North, powered: true}),
      1 => Some(Self {face: FaceProperty::Floor, facing: CardinalFacingProperty::North, powered: false}),
      2 => Some(Self {face: FaceProperty::Floor, facing: CardinalFacingProperty::South, powered: true}),
      3 => Some(Self {face: FaceProperty::Floor, facing: CardinalFacingProperty::South, powered: false}),
      4 => Some(Self {face: FaceProperty::Floor, facing: CardinalFacingProperty::West, powered: true}),
      5 => Some(Self {face: FaceProperty::Floor, facing: CardinalFacingProperty::West, powered: false}),
      6 => Some(Self {face: FaceProperty::Floor, facing: CardinalFacingProperty::East, powered: true}),
      7 => Some(Self {face: FaceProperty::Floor, facing: CardinalFacingProperty::East, powered: false}),
      8 => Some(Self {face: FaceProperty::Wall, facing: CardinalFacingProperty::North, powered: true}),
      9 => Some(Self {face: FaceProperty::Wall, facing: CardinalFacingProperty::North, powered: false}),
      10 => Some(Self {face: FaceProperty::Wall, facing: CardinalFacingProperty::South, powered: true}),
      11 => Some(Self {face: FaceProperty::Wall, facing: CardinalFacingProperty::South, powered: false}),
      12 => Some(Self {face: FaceProperty::Wall, facing: CardinalFacingProperty::West, powered: true}),
      13 => Some(Self {face: FaceProperty::Wall, facing: CardinalFacingProperty::West, powered: false}),
      14 => Some(Self {face: FaceProperty::Wall, facing: CardinalFacingProperty::East, powered: true}),
      15 => Some(Self {face: FaceProperty::Wall, facing: CardinalFacingProperty::East, powered: false}),
      16 => Some(Self {face: FaceProperty::Ceiling, facing: CardinalFacingProperty::North, powered: true}),
      17 => Some(Self {face: FaceProperty::Ceiling, facing: CardinalFacingProperty::North, powered: false}),
      18 => Some(Self {face: FaceProperty::Ceiling, facing: CardinalFacingProperty::South, powered: true}),
      19 => Some(Self {face: FaceProperty::Ceiling, facing: CardinalFacingProperty::South, powered: false}),
      20 => Some(Self {face: FaceProperty::Ceiling, facing: CardinalFacingProperty::West, powered: true}),
      21 => Some(Self {face: FaceProperty::Ceiling, facing: CardinalFacingProperty::West, powered: false}),
      22 => Some(Self {face: FaceProperty::Ceiling, facing: CardinalFacingProperty::East, powered: true}),
      23 => Some(Self {face: FaceProperty::Ceiling, facing: CardinalFacingProperty::East, powered: false}),
      _ => None,
    }
  }
  pub fn to_offset(self) -> usize {
    match self.face {
      FaceProperty::Floor => match self.facing {
        CardinalFacingProperty::North => match self.powered {
          true => 0,
          false => 1,
        },
        CardinalFacingProperty::South => match self.powered {
          true => 2,
          false => 3,
        },
        CardinalFacingProperty::West => match self.powered {
          true => 4,
          false => 5,
        },
        CardinalFacingProperty::East => match self.powered {
          true => 6,
          false => 7,
        },
      },
      FaceProperty::Wall => match self.facing {
        CardinalFacingProperty::North => match self.powered {
          true => 8,
          false => 9,
        },
        CardinalFacingProperty::South => match self.powered {
          true => 10,
          false => 11,
        },
        CardinalFacingProperty::West => match self.powered {
          true => 12,
          false => 13,
        },
        CardinalFacingProperty::East => match self.powered {
          true => 14,
          false => 15,
        },
      },
      FaceProperty::Ceiling => match self.facing {
        CardinalFacingProperty::North => match self.powered {
          true => 16,
          false => 17,
        },
        CardinalFacingProperty::South => match self.powered {
          true => 18,
          false => 19,
        },
        CardinalFacingProperty::West => match self.powered {
          true => 20,
          false => 21,
        },
        CardinalFacingProperty::East => match self.powered {
          true => 22,
          false => 23,
        },
      },
    }
  }
}
impl Default for LeverData {
  fn default() -> Self {
    Self {face: FaceProperty::Wall, facing: CardinalFacingProperty::North, powered: false}
  }
}
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]
pub struct PressurePlateData {
  pub powered: bool,
}
impl PressurePlateData {
  pub fn from_offset(offset: usize) -> Option<Self> {
    match offset {
      0 => Some(Self {powered: true}),
      1 => Some(Self {powered: false}),
      _ => None,
    }
  }
  pub fn to_offset(self) -> usize {
    match self.powered {
      true => 0,
      false => 1,
    }
  }
}
impl Default for PressurePlateData {
  fn default() -> Self {
    Self {powered: false}
  }
}
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]
pub struct IronDoorData {
  pub facing: CardinalFacingProperty,
  pub half: IronDoorHalfProperty,
  pub hinge: IronDoorHingeProperty,
  pub open: bool,
  pub powered: bool,
}
impl IronDoorData {
  pub fn from_offset(offset: usize) -> Option<Self> {
    match offset {
      0 => Some(Self {facing: CardinalFacingProperty::North, half: IronDoorHalfProperty::Upper, hinge: IronDoorHingeProperty::Left, open: true, powered: true}),
      1 => Some(Self {facing: CardinalFacingProperty::North, half: IronDoorHalfProperty::Upper, hinge: IronDoorHingeProperty::Left, open: true, powered: false}),
      2 => Some(Self {facing: CardinalFacingProperty::North, half: IronDoorHalfProperty::Upper, hinge: IronDoorHingeProperty::Left, open: false, powered: true}),
      3 => Some(Self {facing: CardinalFacingProperty::North, half: IronDoorHalfProperty::Upper, hinge: IronDoorHingeProperty::Left, open: false, powered: false}),
      4 => Some(Self {facing: CardinalFacingProperty::North, half: IronDoorHalfProperty::Upper, hinge: IronDoorHingeProperty::Right, open: true, powered: true}),
      5 => Some(Self {facing: CardinalFacingProperty::North, half: IronDoorHalfProperty::Upper, hinge: IronDoorHingeProperty::Right, open: true, powered: false}),
      6 => Some(Self {facing: CardinalFacingProperty::North, half: IronDoorHalfProperty::Upper, hinge: IronDoorHingeProperty::Right, open: false, powered: true}),
      7 => Some(Self {facing: CardinalFacingProperty::North, half: IronDoorHalfProperty::Upper, hinge: IronDoorHingeProperty::Right, open: false, powered: false}),
      8 => Some(Self {facing: CardinalFacingProperty::North, half: IronDoorHalfProperty::Lower, hinge: IronDoorHingeProperty::Left, open: true, powered: true}),
      9 => Some(Self {facing: CardinalFacingProperty::North, half: IronDoorHalfProperty::Lower, hinge: IronDoorHingeProperty::Left, open: true, powered: false}),
      10 => Some(Self {facing: CardinalFacingProperty::North, half: IronDoorHalfProperty::Lower, hinge: IronDoorHingeProperty::Left, open: false, powered: true}),
      11 => Some(Self {facing: CardinalFacingProperty::North, half: IronDoorHalfProperty::Lower, hinge: IronDoorHingeProperty::Left, open: false, powered: false}),
      12 => Some(Self {facing: CardinalFacingProperty::North, half: IronDoorHalfProperty::Lower, hinge: IronDoorHingeProperty::Right, open: true, powered: true}),
      13 => Some(Self {facing: CardinalFacingProperty::North, half: IronDoorHalfProperty::Lower, hinge: IronDoorHingeProperty::Right, open: true, powered: false}),
      14 => Some(Self {facing: CardinalFacingProperty::North, half: IronDoorHalfProperty::Lower, hinge: IronDoorHingeProperty::Right, open: false, powered: true}),
      15 => Some(Self {facing: CardinalFacingProperty::North, half: IronDoorHalfProperty::Lower, hinge: IronDoorHingeProperty::Right, open: false, powered: false}),
      16 => Some(Self {facing: CardinalFacingProperty::South, half: IronDoorHalfProperty::Upper, hinge: IronDoorHingeProperty::Left, open: true, powered: true}),
      17 => Some(Self {facing: CardinalFacingProperty::South, half: IronDoorHalfProperty::Upper, hinge: IronDoorHingeProperty::Left, open: true, powered: false}),
      18 => Some(Self {facing: CardinalFacingProperty::South, half: IronDoorHalfProperty::Upper, hinge: IronDoorHingeProperty::Left, open: false, powered: true}),
      19 => Some(Self {facing: CardinalFacingProperty::South, half: IronDoorHalfProperty::Upper, hinge: IronDoorHingeProperty::Left, open: false, powered: false}),
      20 => Some(Self {facing: CardinalFacingProperty::South, half: IronDoorHalfProperty::Upper, hinge: IronDoorHingeProperty::Right, open: true, powered: true}),
      21 => Some(Self {facing: CardinalFacingProperty::South, half: IronDoorHalfProperty::Upper, hinge: IronDoorHingeProperty::Right, open: true, powered: false}),
      22 => Some(Self {facing: CardinalFacingProperty::South, half: IronDoorHalfProperty::Upper, hinge: IronDoorHingeProperty::Right, open: false, powered: true}),
      23 => Some(Self {facing: CardinalFacingProperty::South, half: IronDoorHalfProperty::Upper, hinge: IronDoorHingeProperty::Right, open: false, powered: false}),
      24 => Some(Self {facing: CardinalFacingProperty::South, half: IronDoorHalfProperty::Lower, hinge: IronDoorHingeProperty::Left, open: true, powered: true}),
      25 => Some(Self {facing: CardinalFacingProperty::South, half: IronDoorHalfProperty::Lower, hinge: IronDoorHingeProperty::Left, open: true, powered: false}),
      26 => Some(Self {facing: CardinalFacingProperty::South, half: IronDoorHalfProperty::Lower, hinge: IronDoorHingeProperty::Left, open: false, powered: true}),
      27 => Some(Self {facing: CardinalFacingProperty::South, half: IronDoorHalfProperty::Lower, hinge: IronDoorHingeProperty::Left, open: false, powered: false}),
      28 => Some(Self {facing: CardinalFacingProperty::South, half: IronDoorHalfProperty::Lower, hinge: IronDoorHingeProperty::Right, open: true, powered: true}),
      29 => Some(Self {facing: CardinalFacingProperty::South, half: IronDoorHalfProperty::Lower, hinge: IronDoorHingeProperty::Right, open: true, powered: false}),
      30 => Some(Self {facing: CardinalFacingProperty::South, half: IronDoorHalfProperty::Lower, hinge: IronDoorHingeProperty::Right, open: false, powered: true}),
      31 => Some(Self {facing: CardinalFacingProperty::South, half: IronDoorHalfProperty::Lower, hinge: IronDoorHingeProperty::Right, open: false, powered: false}),
      32 => Some(Self {facing: CardinalFacingProperty::West, half: IronDoorHalfProperty::Upper, hinge: IronDoorHingeProperty::Left, open: true, powered: true}),
      33 => Some(Self {facing: CardinalFacingProperty::West, half: IronDoorHalfProperty::Upper, hinge: IronDoorHingeProperty::Left, open: true, powered: false}),
      34 => Some(Self {facing: CardinalFacingProperty::West, half: IronDoorHalfProperty::Upper, hinge: IronDoorHingeProperty::Left, open: false, powered: true}),
      35 => Some(Self {facing: CardinalFacingProperty::West, half: IronDoorHalfProperty::Upper, hinge: IronDoorHingeProperty::Left, open: false, powered: false}),
      36 => Some(Self {facing: CardinalFacingProperty::West, half: IronDoorHalfProperty::Upper, hinge: IronDoorHingeProperty::Right, open: true, powered: true}),
      37 => Some(Self {facing: CardinalFacingProperty::West, half: IronDoorHalfProperty::Upper, hinge: IronDoorHingeProperty::Right, open: true, powered: false}),
      38 => Some(Self {facing: CardinalFacingProperty::West, half: IronDoorHalfProperty::Upper, hinge: IronDoorHingeProperty::Right, open: false, powered: true}),
      39 => Some(Self {facing: CardinalFacingProperty::West, half: IronDoorHalfProperty::Upper, hinge: IronDoorHingeProperty::Right, open: false, powered: false}),
      40 => Some(Self {facing: CardinalFacingProperty::West, half: IronDoorHalfProperty::Lower, hinge: IronDoorHingeProperty::Left, open: true, powered: true}),
      41 => Some(Self {facing: CardinalFacingProperty::West, half: IronDoorHalfProperty::Lower, hinge: IronDoorHingeProperty::Left, open: true, powered: false}),
      42 => Some(Self {facing: CardinalFacingProperty::West, half: IronDoorHalfProperty::Lower, hinge: IronDoorHingeProperty::Left, open: false, powered: true}),
      43 => Some(Self {facing: CardinalFacingProperty::West, half: IronDoorHalfProperty::Lower, hinge: IronDoorHingeProperty::Left, open: false, powered: false}),
      44 => Some(Self {facing: CardinalFacingProperty::West, half: IronDoorHalfProperty::Lower, hinge: IronDoorHingeProperty::Right, open: true, powered: true}),
      45 => Some(Self {facing: CardinalFacingProperty::West, half: IronDoorHalfProperty::Lower, hinge: IronDoorHingeProperty::Right, open: true, powered: false}),
      46 => Some(Self {facing: CardinalFacingProperty::West, half: IronDoorHalfProperty::Lower, hinge: IronDoorHingeProperty::Right, open: false, powered: true}),
      47 => Some(Self {facing: CardinalFacingProperty::West, half: IronDoorHalfProperty::Lower, hinge: IronDoorHingeProperty::Right, open: false, powered: false}),
      48 => Some(Self {facing: CardinalFacingProperty::East, half: IronDoorHalfProperty::Upper, hinge: IronDoorHingeProperty::Left, open: true, powered: true}),
      49 => Some(Self {facing: CardinalFacingProperty::East, half: IronDoorHalfProperty::Upper, hinge: IronDoorHingeProperty::Left, open: true, powered: false}),
      50 => Some(Self {facing: CardinalFacingProperty::East, half: IronDoorHalfProperty::Upper, hinge: IronDoorHingeProperty::Left, open: false, powered: true}),
      51 => Some(Self {facing: CardinalFacingProperty::East, half: IronDoorHalfProperty::Upper, hinge: IronDoorHingeProperty::Left, open: false, powered: false}),
      52 => Some(Self {facing: CardinalFacingProperty::East, half: IronDoorHalfProperty::Upper, hinge: IronDoorHingeProperty::Right, open: true, powered: true}),
      53 => Some(Self {facing: CardinalFacingProperty::East, half: IronDoorHalfProperty::Upper, hinge: IronDoorHingeProperty::Right, open: true, powered: false}),
      54 => Some(Self {facing: CardinalFacingProperty::East, half: IronDoorHalfProperty::Upper, hinge: IronDoorHingeProperty::Right, open: false, powered: true}),
      55 => Some(Self {facing: CardinalFacingProperty::East, half: IronDoorHalfProperty::Upper, hinge: IronDoorHingeProperty::Right, open: false, powered: false}),
      56 => Some(Self {facing: CardinalFacingProperty::East, half: IronDoorHalfProperty::Lower, hinge: IronDoorHingeProperty::Left, open: true, powered: true}),
      57 => Some(Self {facing: CardinalFacingProperty::East, half: IronDoorHalfProperty::Lower, hinge: IronDoorHingeProperty::Left, open: true, powered: false}),
      58 => Some(Self {facing: CardinalFacingProperty::East, half: IronDoorHalfProperty::Lower, hinge: IronDoorHingeProperty::Left, open: false, powered: true}),
      59 => Some(Self {facing: CardinalFacingProperty::East, half: IronDoorHalfProperty::Lower, hinge: IronDoorHingeProperty::Left, open: false, powered: false}),
      60 => Some(Self {facing: CardinalFacingProperty::East, half: IronDoorHalfProperty::Lower, hinge: IronDoorHingeProperty::Right, open: true, powered: true}),
      61 => Some(Self {facing: CardinalFacingProperty::East, half: IronDoorHalfProperty::Lower, hinge: IronDoorHingeProperty::Right, open: true, powered: false}),
      62 => Some(Self {facing: CardinalFacingProperty::East, half: IronDoorHalfProperty::Lower, hinge: IronDoorHingeProperty::Right, open: false, powered: true}),
      63 => Some(Self {facing: CardinalFacingProperty::East, half: IronDoorHalfProperty::Lower, hinge: IronDoorHingeProperty::Right, open: false, powered: false}),
      _ => None,
    }
  }
  pub fn to_offset(self) -> usize {
    match self.facing {
      CardinalFacingProperty::North => match self.half {
        IronDoorHalfProperty::Upper => match self.hinge {
          IronDoorHingeProperty::Left => match self.open {
            true => match self.powered {
              true => 0,
              false => 1,
            },
            false => match self.powered {
              true => 2,
              false => 3,
            },
          },
          IronDoorHingeProperty::Right => match self.open {
            true => match self.powered {
              true => 4,
              false => 5,
            },
            false => match self.powered {
              true => 6,
              false => 7,
            },
          },
        },
        IronDoorHalfProperty::Lower => match self.hinge {
          IronDoorHingeProperty::Left => match self.open {
            true => match self.powered {
              true => 8,
              false => 9,
            },
            false => match self.powered {
              true => 10,
              false => 11,
            },
          },
          IronDoorHingeProperty::Right => match self.open {
            true => match self.powered {
              true => 12,
              false => 13,
            },
            false => match self.powered {
              true => 14,
              false => 15,
            },
          },
        },
      },
      CardinalFacingProperty::South => match self.half {
        IronDoorHalfProperty::Upper => match self.hinge {
          IronDoorHingeProperty::Left => match self.open {
            true => match self.powered {
              true => 16,
              false => 17,
            },
            false => match self.powered {
              true => 18,
              false => 19,
            },
          },
          IronDoorHingeProperty::Right => match self.open {
            true => match self.powered {
              true => 20,
              false => 21,
            },
            false => match self.powered {
              true => 22,
              false => 23,
            },
          },
        },
        IronDoorHalfProperty::Lower => match self.hinge {
          IronDoorHingeProperty::Left => match self.open {
            true => match self.powered {
              true => 24,
              false => 25,
            },
            false => match self.powered {
              true => 26,
              false => 27,
            },
          },
          IronDoorHingeProperty::Right => match self.open {
            true => match self.powered {
              true => 28,
              false => 29,
            },
            false => match self.powered {
              true => 30,
              false => 31,
            },
          },
        },
      },
      CardinalFacingProperty::West => match self.half {
        IronDoorHalfProperty::Upper => match self.hinge {
          IronDoorHingeProperty::Left => match self.open {
            true => match self.powered {
              true => 32,
              false => 33,
            },
            false => match self.powered {
              true => 34,
              false => 35,
            },
          },
          IronDoorHingeProperty::Right => match self.open {
            true => match self.powered {
              true => 36,
              false => 37,
            },
            false => match self.powered {
              true => 38,
              false => 39,
            },
          },
        },
        IronDoorHalfProperty::Lower => match self.hinge {
          IronDoorHingeProperty::Left => match self.open {
            true => match self.powered {
              true => 40,
              false => 41,
            },
            false => match self.powered {
              true => 42,
              false => 43,
            },
          },
          IronDoorHingeProperty::Right => match self.open {
            true => match self.powered {
              true => 44,
              false => 45,
            },
            false => match self.powered {
              true => 46,
              false => 47,
            },
          },
        },
      },
      CardinalFacingProperty::East => match self.half {
        IronDoorHalfProperty::Upper => match self.hinge {
          IronDoorHingeProperty::Left => match self.open {
            true => match self.powered {
              true => 48,
              false => 49,
            },
            false => match self.powered {
              true => 50,
              false => 51,
            },
          },
          IronDoorHingeProperty::Right => match self.open {
            true => match self.powered {
              true => 52,
              false => 53,
            },
            false => match self.powered {
              true => 54,
              false => 55,
            },
          },
        },
        IronDoorHalfProperty::Lower => match self.hinge {
          IronDoorHingeProperty::Left => match self.open {
            true => match self.powered {
              true => 56,
              false => 57,
            },
            false => match self.powered {
              true => 58,
              false => 59,
            },
          },
          IronDoorHingeProperty::Right => match self.open {
            true => match self.powered {
              true => 60,
              false => 61,
            },
            false => match self.powered {
              true => 62,
              false => 63,
            },
          },
        },
      },
    }
  }
}
impl Default for IronDoorData {
  fn default() -> Self {
    Self {facing: CardinalFacingProperty::North, half: IronDoorHalfProperty::Lower, hinge: IronDoorHingeProperty::Left, open: false, powered: false}
  }
}
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]
pub struct RedstoneOreData {
  pub lit: bool,
}
impl RedstoneOreData {
  pub fn from_offset(offset: usize) -> Option<Self> {
    match offset {
      0 => Some(Self {lit: true}),
      1 => Some(Self {lit: false}),
      _ => None,
    }
  }
  pub fn to_offset(self) -> usize {
    match self.lit {
      true => 0,
      false => 1,
    }
  }
}
impl Default for RedstoneOreData {
  fn default() -> Self {
    Self {lit: false}
  }
}
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]
pub struct RedstoneTorchData {
  pub lit: bool,
}
impl RedstoneTorchData {
  pub fn from_offset(offset: usize) -> Option<Self> {
    match offset {
      0 => Some(Self {lit: true}),
      1 => Some(Self {lit: false}),
      _ => None,
    }
  }
  pub fn to_offset(self) -> usize {
    match self.lit {
      true => 0,
      false => 1,
    }
  }
}
impl Default for RedstoneTorchData {
  fn default() -> Self {
    Self {lit: true}
  }
}
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]
pub struct ButtonData {
  pub face: FaceProperty,
  pub facing: CardinalFacingProperty,
  pub powered: bool,
}
impl ButtonData {
  pub fn from_offset(offset: usize) -> Option<Self> {
    match offset {
      0 => Some(Self {face: FaceProperty::Floor, facing: CardinalFacingProperty::North, powered: true}),
      1 => Some(Self {face: FaceProperty::Floor, facing: CardinalFacingProperty::North, powered: false}),
      2 => Some(Self {face: FaceProperty::Floor, facing: CardinalFacingProperty::South, powered: true}),
      3 => Some(Self {face: FaceProperty::Floor, facing: CardinalFacingProperty::South, powered: false}),
      4 => Some(Self {face: FaceProperty::Floor, facing: CardinalFacingProperty::West, powered: true}),
      5 => Some(Self {face: FaceProperty::Floor, facing: CardinalFacingProperty::West, powered: false}),
      6 => Some(Self {face: FaceProperty::Floor, facing: CardinalFacingProperty::East, powered: true}),
      7 => Some(Self {face: FaceProperty::Floor, facing: CardinalFacingProperty::East, powered: false}),
      8 => Some(Self {face: FaceProperty::Wall, facing: CardinalFacingProperty::North, powered: true}),
      9 => Some(Self {face: FaceProperty::Wall, facing: CardinalFacingProperty::North, powered: false}),
      10 => Some(Self {face: FaceProperty::Wall, facing: CardinalFacingProperty::South, powered: true}),
      11 => Some(Self {face: FaceProperty::Wall, facing: CardinalFacingProperty::South, powered: false}),
      12 => Some(Self {face: FaceProperty::Wall, facing: CardinalFacingProperty::West, powered: true}),
      13 => Some(Self {face: FaceProperty::Wall, facing: CardinalFacingProperty::West, powered: false}),
      14 => Some(Self {face: FaceProperty::Wall, facing: CardinalFacingProperty::East, powered: true}),
      15 => Some(Self {face: FaceProperty::Wall, facing: CardinalFacingProperty::East, powered: false}),
      16 => Some(Self {face: FaceProperty::Ceiling, facing: CardinalFacingProperty::North, powered: true}),
      17 => Some(Self {face: FaceProperty::Ceiling, facing: CardinalFacingProperty::North, powered: false}),
      18 => Some(Self {face: FaceProperty::Ceiling, facing: CardinalFacingProperty::South, powered: true}),
      19 => Some(Self {face: FaceProperty::Ceiling, facing: CardinalFacingProperty::South, powered: false}),
      20 => Some(Self {face: FaceProperty::Ceiling, facing: CardinalFacingProperty::West, powered: true}),
      21 => Some(Self {face: FaceProperty::Ceiling, facing: CardinalFacingProperty::West, powered: false}),
      22 => Some(Self {face: FaceProperty::Ceiling, facing: CardinalFacingProperty::East, powered: true}),
      23 => Some(Self {face: FaceProperty::Ceiling, facing: CardinalFacingProperty::East, powered: false}),
      _ => None,
    }
  }
  pub fn to_offset(self) -> usize {
    match self.face {
      FaceProperty::Floor => match self.facing {
        CardinalFacingProperty::North => match self.powered {
          true => 0,
          false => 1,
        },
        CardinalFacingProperty::South => match self.powered {
          true => 2,
          false => 3,
        },
        CardinalFacingProperty::West => match self.powered {
          true => 4,
          false => 5,
        },
        CardinalFacingProperty::East => match self.powered {
          true => 6,
          false => 7,
        },
      },
      FaceProperty::Wall => match self.facing {
        CardinalFacingProperty::North => match self.powered {
          true => 8,
          false => 9,
        },
        CardinalFacingProperty::South => match self.powered {
          true => 10,
          false => 11,
        },
        CardinalFacingProperty::West => match self.powered {
          true => 12,
          false => 13,
        },
        CardinalFacingProperty::East => match self.powered {
          true => 14,
          false => 15,
        },
      },
      FaceProperty::Ceiling => match self.facing {
        CardinalFacingProperty::North => match self.powered {
          true => 16,
          false => 17,
        },
        CardinalFacingProperty::South => match self.powered {
          true => 18,
          false => 19,
        },
        CardinalFacingProperty::West => match self.powered {
          true => 20,
          false => 21,
        },
        CardinalFacingProperty::East => match self.powered {
          true => 22,
          false => 23,
        },
      },
    }
  }
}
impl Default for ButtonData {
  fn default() -> Self {
    Self {face: FaceProperty::Wall, facing: CardinalFacingProperty::North, powered: false}
  }
}
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]
pub struct SnowData {
  pub layers: NumberFrom1To8Property,
}
impl SnowData {
  pub fn from_offset(offset: usize) -> Option<Self> {
    match offset {
      0 => Some(Self {layers: NumberFrom1To8Property::new(1)}),
      1 => Some(Self {layers: NumberFrom1To8Property::new(2)}),
      2 => Some(Self {layers: NumberFrom1To8Property::new(3)}),
      3 => Some(Self {layers: NumberFrom1To8Property::new(4)}),
      4 => Some(Self {layers: NumberFrom1To8Property::new(5)}),
      5 => Some(Self {layers: NumberFrom1To8Property::new(6)}),
      6 => Some(Self {layers: NumberFrom1To8Property::new(7)}),
      7 => Some(Self {layers: NumberFrom1To8Property::new(8)}),
      _ => None,
    }
  }
  pub fn to_offset(self) -> usize {
    match self.layers.value() {
      1 => 0,
      2 => 1,
      3 => 2,
      4 => 3,
      5 => 4,
      6 => 5,
      7 => 6,
      8 => 7,
      _ => panic!("Illegal Block State"),
    }
  }
}
impl Default for SnowData {
  fn default() -> Self {
    Self {layers: NumberFrom1To8Property::new(1)}
  }
}
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]
pub struct CactusData {
  pub age: NumberFrom0To15Property,
}
impl CactusData {
  pub fn from_offset(offset: usize) -> Option<Self> {
    match offset {
      0 => Some(Self {age: NumberFrom0To15Property::new(0)}),
      1 => Some(Self {age: NumberFrom0To15Property::new(1)}),
      2 => Some(Self {age: NumberFrom0To15Property::new(2)}),
      3 => Some(Self {age: NumberFrom0To15Property::new(3)}),
      4 => Some(Self {age: NumberFrom0To15Property::new(4)}),
      5 => Some(Self {age: NumberFrom0To15Property::new(5)}),
      6 => Some(Self {age: NumberFrom0To15Property::new(6)}),
      7 => Some(Self {age: NumberFrom0To15Property::new(7)}),
      8 => Some(Self {age: NumberFrom0To15Property::new(8)}),
      9 => Some(Self {age: NumberFrom0To15Property::new(9)}),
      10 => Some(Self {age: NumberFrom0To15Property::new(10)}),
      11 => Some(Self {age: NumberFrom0To15Property::new(11)}),
      12 => Some(Self {age: NumberFrom0To15Property::new(12)}),
      13 => Some(Self {age: NumberFrom0To15Property::new(13)}),
      14 => Some(Self {age: NumberFrom0To15Property::new(14)}),
      15 => Some(Self {age: NumberFrom0To15Property::new(15)}),
      _ => None,
    }
  }
  pub fn to_offset(self) -> usize {
    match self.age.value() {
      0 => 0,
      1 => 1,
      2 => 2,
      3 => 3,
      4 => 4,
      5 => 5,
      6 => 6,
      7 => 7,
      8 => 8,
      9 => 9,
      10 => 10,
      11 => 11,
      12 => 12,
      13 => 13,
      14 => 14,
      15 => 15,
      _ => panic!("Illegal Block State"),
    }
  }
}
impl Default for CactusData {
  fn default() -> Self {
    Self {age: NumberFrom0To15Property::new(0)}
  }
}
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]
pub struct SugarCaneData {
  pub age: NumberFrom0To15Property,
}
impl SugarCaneData {
  pub fn from_offset(offset: usize) -> Option<Self> {
    match offset {
      0 => Some(Self {age: NumberFrom0To15Property::new(0)}),
      1 => Some(Self {age: NumberFrom0To15Property::new(1)}),
      2 => Some(Self {age: NumberFrom0To15Property::new(2)}),
      3 => Some(Self {age: NumberFrom0To15Property::new(3)}),
      4 => Some(Self {age: NumberFrom0To15Property::new(4)}),
      5 => Some(Self {age: NumberFrom0To15Property::new(5)}),
      6 => Some(Self {age: NumberFrom0To15Property::new(6)}),
      7 => Some(Self {age: NumberFrom0To15Property::new(7)}),
      8 => Some(Self {age: NumberFrom0To15Property::new(8)}),
      9 => Some(Self {age: NumberFrom0To15Property::new(9)}),
      10 => Some(Self {age: NumberFrom0To15Property::new(10)}),
      11 => Some(Self {age: NumberFrom0To15Property::new(11)}),
      12 => Some(Self {age: NumberFrom0To15Property::new(12)}),
      13 => Some(Self {age: NumberFrom0To15Property::new(13)}),
      14 => Some(Self {age: NumberFrom0To15Property::new(14)}),
      15 => Some(Self {age: NumberFrom0To15Property::new(15)}),
      _ => None,
    }
  }
  pub fn to_offset(self) -> usize {
    match self.age.value() {
      0 => 0,
      1 => 1,
      2 => 2,
      3 => 3,
      4 => 4,
      5 => 5,
      6 => 6,
      7 => 7,
      8 => 8,
      9 => 9,
      10 => 10,
      11 => 11,
      12 => 12,
      13 => 13,
      14 => 14,
      15 => 15,
      _ => panic!("Illegal Block State"),
    }
  }
}
impl Default for SugarCaneData {
  fn default() -> Self {
    Self {age: NumberFrom0To15Property::new(0)}
  }
}
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]
pub struct JukeboxData {
  pub has_record: bool,
}
impl JukeboxData {
  pub fn from_offset(offset: usize) -> Option<Self> {
    match offset {
      0 => Some(Self {has_record: true}),
      1 => Some(Self {has_record: false}),
      _ => None,
    }
  }
  pub fn to_offset(self) -> usize {
    match self.has_record {
      true => 0,
      false => 1,
    }
  }
}
impl Default for JukeboxData {
  fn default() -> Self {
    Self {has_record: false}
  }
}
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]
pub struct FenceData {
  pub east: bool,
  pub north: bool,
  pub south: bool,
  pub waterlogged: bool,
  pub west: bool,
}
impl FenceData {
  pub fn from_offset(offset: usize) -> Option<Self> {
    match offset {
      0 => Some(Self {east: true, north: true, south: true, waterlogged: true, west: true}),
      1 => Some(Self {east: true, north: true, south: true, waterlogged: true, west: false}),
      2 => Some(Self {east: true, north: true, south: true, waterlogged: false, west: true}),
      3 => Some(Self {east: true, north: true, south: true, waterlogged: false, west: false}),
      4 => Some(Self {east: true, north: true, south: false, waterlogged: true, west: true}),
      5 => Some(Self {east: true, north: true, south: false, waterlogged: true, west: false}),
      6 => Some(Self {east: true, north: true, south: false, waterlogged: false, west: true}),
      7 => Some(Self {east: true, north: true, south: false, waterlogged: false, west: false}),
      8 => Some(Self {east: true, north: false, south: true, waterlogged: true, west: true}),
      9 => Some(Self {east: true, north: false, south: true, waterlogged: true, west: false}),
      10 => Some(Self {east: true, north: false, south: true, waterlogged: false, west: true}),
      11 => Some(Self {east: true, north: false, south: true, waterlogged: false, west: false}),
      12 => Some(Self {east: true, north: false, south: false, waterlogged: true, west: true}),
      13 => Some(Self {east: true, north: false, south: false, waterlogged: true, west: false}),
      14 => Some(Self {east: true, north: false, south: false, waterlogged: false, west: true}),
      15 => Some(Self {east: true, north: false, south: false, waterlogged: false, west: false}),
      16 => Some(Self {east: false, north: true, south: true, waterlogged: true, west: true}),
      17 => Some(Self {east: false, north: true, south: true, waterlogged: true, west: false}),
      18 => Some(Self {east: false, north: true, south: true, waterlogged: false, west: true}),
      19 => Some(Self {east: false, north: true, south: true, waterlogged: false, west: false}),
      20 => Some(Self {east: false, north: true, south: false, waterlogged: true, west: true}),
      21 => Some(Self {east: false, north: true, south: false, waterlogged: true, west: false}),
      22 => Some(Self {east: false, north: true, south: false, waterlogged: false, west: true}),
      23 => Some(Self {east: false, north: true, south: false, waterlogged: false, west: false}),
      24 => Some(Self {east: false, north: false, south: true, waterlogged: true, west: true}),
      25 => Some(Self {east: false, north: false, south: true, waterlogged: true, west: false}),
      26 => Some(Self {east: false, north: false, south: true, waterlogged: false, west: true}),
      27 => Some(Self {east: false, north: false, south: true, waterlogged: false, west: false}),
      28 => Some(Self {east: false, north: false, south: false, waterlogged: true, west: true}),
      29 => Some(Self {east: false, north: false, south: false, waterlogged: true, west: false}),
      30 => Some(Self {east: false, north: false, south: false, waterlogged: false, west: true}),
      31 => Some(Self {east: false, north: false, south: false, waterlogged: false, west: false}),
      _ => None,
    }
  }
  pub fn to_offset(self) -> usize {
    match self.east {
      true => match self.north {
        true => match self.south {
          true => match self.waterlogged {
            true => match self.west {
              true => 0,
              false => 1,
            },
            false => match self.west {
              true => 2,
              false => 3,
            },
          },
          false => match self.waterlogged {
            true => match self.west {
              true => 4,
              false => 5,
            },
            false => match self.west {
              true => 6,
              false => 7,
            },
          },
        },
        false => match self.south {
          true => match self.waterlogged {
            true => match self.west {
              true => 8,
              false => 9,
            },
            false => match self.west {
              true => 10,
              false => 11,
            },
          },
          false => match self.waterlogged {
            true => match self.west {
              true => 12,
              false => 13,
            },
            false => match self.west {
              true => 14,
              false => 15,
            },
          },
        },
      },
      false => match self.north {
        true => match self.south {
          true => match self.waterlogged {
            true => match self.west {
              true => 16,
              false => 17,
            },
            false => match self.west {
              true => 18,
              false => 19,
            },
          },
          false => match self.waterlogged {
            true => match self.west {
              true => 20,
              false => 21,
            },
            false => match self.west {
              true => 22,
              false => 23,
            },
          },
        },
        false => match self.south {
          true => match self.waterlogged {
            true => match self.west {
              true => 24,
              false => 25,
            },
            false => match self.west {
              true => 26,
              false => 27,
            },
          },
          false => match self.waterlogged {
            true => match self.west {
              true => 28,
              false => 29,
            },
            false => match self.west {
              true => 30,
              false => 31,
            },
          },
        },
      },
    }
  }
}
impl Default for FenceData {
  fn default() -> Self {
    Self {east: false, north: false, south: false, waterlogged: false, west: false}
  }
}
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]
pub struct NetherPortalData {
  pub axis: NetherPortalAxisProperty,
}
impl NetherPortalData {
  pub fn from_offset(offset: usize) -> Option<Self> {
    match offset {
      0 => Some(Self {axis: NetherPortalAxisProperty::X}),
      1 => Some(Self {axis: NetherPortalAxisProperty::Z}),
      _ => None,
    }
  }
  pub fn to_offset(self) -> usize {
    match self.axis {
      NetherPortalAxisProperty::X => 0,
      NetherPortalAxisProperty::Z => 1,
    }
  }
}
impl Default for NetherPortalData {
  fn default() -> Self {
    Self {axis: NetherPortalAxisProperty::X}
  }
}
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]
pub struct CakeData {
  pub bites: NumberFrom0To6Property,
}
impl CakeData {
  pub fn from_offset(offset: usize) -> Option<Self> {
    match offset {
      0 => Some(Self {bites: NumberFrom0To6Property::new(0)}),
      1 => Some(Self {bites: NumberFrom0To6Property::new(1)}),
      2 => Some(Self {bites: NumberFrom0To6Property::new(2)}),
      3 => Some(Self {bites: NumberFrom0To6Property::new(3)}),
      4 => Some(Self {bites: NumberFrom0To6Property::new(4)}),
      5 => Some(Self {bites: NumberFrom0To6Property::new(5)}),
      6 => Some(Self {bites: NumberFrom0To6Property::new(6)}),
      _ => None,
    }
  }
  pub fn to_offset(self) -> usize {
    match self.bites.value() {
      0 => 0,
      1 => 1,
      2 => 2,
      3 => 3,
      4 => 4,
      5 => 5,
      6 => 6,
      _ => panic!("Illegal Block State"),
    }
  }
}
impl Default for CakeData {
  fn default() -> Self {
    Self {bites: NumberFrom0To6Property::new(0)}
  }
}
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]
pub struct RepeaterData {
  pub delay: NumberFrom1To4Property,
  pub facing: CardinalFacingProperty,
  pub locked: bool,
  pub powered: bool,
}
impl RepeaterData {
  pub fn from_offset(offset: usize) -> Option<Self> {
    match offset {
      0 => Some(Self {delay: NumberFrom1To4Property::new(1), facing: CardinalFacingProperty::North, locked: true, powered: true}),
      1 => Some(Self {delay: NumberFrom1To4Property::new(1), facing: CardinalFacingProperty::North, locked: true, powered: false}),
      2 => Some(Self {delay: NumberFrom1To4Property::new(1), facing: CardinalFacingProperty::North, locked: false, powered: true}),
      3 => Some(Self {delay: NumberFrom1To4Property::new(1), facing: CardinalFacingProperty::North, locked: false, powered: false}),
      4 => Some(Self {delay: NumberFrom1To4Property::new(1), facing: CardinalFacingProperty::South, locked: true, powered: true}),
      5 => Some(Self {delay: NumberFrom1To4Property::new(1), facing: CardinalFacingProperty::South, locked: true, powered: false}),
      6 => Some(Self {delay: NumberFrom1To4Property::new(1), facing: CardinalFacingProperty::South, locked: false, powered: true}),
      7 => Some(Self {delay: NumberFrom1To4Property::new(1), facing: CardinalFacingProperty::South, locked: false, powered: false}),
      8 => Some(Self {delay: NumberFrom1To4Property::new(1), facing: CardinalFacingProperty::West, locked: true, powered: true}),
      9 => Some(Self {delay: NumberFrom1To4Property::new(1), facing: CardinalFacingProperty::West, locked: true, powered: false}),
      10 => Some(Self {delay: NumberFrom1To4Property::new(1), facing: CardinalFacingProperty::West, locked: false, powered: true}),
      11 => Some(Self {delay: NumberFrom1To4Property::new(1), facing: CardinalFacingProperty::West, locked: false, powered: false}),
      12 => Some(Self {delay: NumberFrom1To4Property::new(1), facing: CardinalFacingProperty::East, locked: true, powered: true}),
      13 => Some(Self {delay: NumberFrom1To4Property::new(1), facing: CardinalFacingProperty::East, locked: true, powered: false}),
      14 => Some(Self {delay: NumberFrom1To4Property::new(1), facing: CardinalFacingProperty::East, locked: false, powered: true}),
      15 => Some(Self {delay: NumberFrom1To4Property::new(1), facing: CardinalFacingProperty::East, locked: false, powered: false}),
      16 => Some(Self {delay: NumberFrom1To4Property::new(2), facing: CardinalFacingProperty::North, locked: true, powered: true}),
      17 => Some(Self {delay: NumberFrom1To4Property::new(2), facing: CardinalFacingProperty::North, locked: true, powered: false}),
      18 => Some(Self {delay: NumberFrom1To4Property::new(2), facing: CardinalFacingProperty::North, locked: false, powered: true}),
      19 => Some(Self {delay: NumberFrom1To4Property::new(2), facing: CardinalFacingProperty::North, locked: false, powered: false}),
      20 => Some(Self {delay: NumberFrom1To4Property::new(2), facing: CardinalFacingProperty::South, locked: true, powered: true}),
      21 => Some(Self {delay: NumberFrom1To4Property::new(2), facing: CardinalFacingProperty::South, locked: true, powered: false}),
      22 => Some(Self {delay: NumberFrom1To4Property::new(2), facing: CardinalFacingProperty::South, locked: false, powered: true}),
      23 => Some(Self {delay: NumberFrom1To4Property::new(2), facing: CardinalFacingProperty::South, locked: false, powered: false}),
      24 => Some(Self {delay: NumberFrom1To4Property::new(2), facing: CardinalFacingProperty::West, locked: true, powered: true}),
      25 => Some(Self {delay: NumberFrom1To4Property::new(2), facing: CardinalFacingProperty::West, locked: true, powered: false}),
      26 => Some(Self {delay: NumberFrom1To4Property::new(2), facing: CardinalFacingProperty::West, locked: false, powered: true}),
      27 => Some(Self {delay: NumberFrom1To4Property::new(2), facing: CardinalFacingProperty::West, locked: false, powered: false}),
      28 => Some(Self {delay: NumberFrom1To4Property::new(2), facing: CardinalFacingProperty::East, locked: true, powered: true}),
      29 => Some(Self {delay: NumberFrom1To4Property::new(2), facing: CardinalFacingProperty::East, locked: true, powered: false}),
      30 => Some(Self {delay: NumberFrom1To4Property::new(2), facing: CardinalFacingProperty::East, locked: false, powered: true}),
      31 => Some(Self {delay: NumberFrom1To4Property::new(2), facing: CardinalFacingProperty::East, locked: false, powered: false}),
      32 => Some(Self {delay: NumberFrom1To4Property::new(3), facing: CardinalFacingProperty::North, locked: true, powered: true}),
      33 => Some(Self {delay: NumberFrom1To4Property::new(3), facing: CardinalFacingProperty::North, locked: true, powered: false}),
      34 => Some(Self {delay: NumberFrom1To4Property::new(3), facing: CardinalFacingProperty::North, locked: false, powered: true}),
      35 => Some(Self {delay: NumberFrom1To4Property::new(3), facing: CardinalFacingProperty::North, locked: false, powered: false}),
      36 => Some(Self {delay: NumberFrom1To4Property::new(3), facing: CardinalFacingProperty::South, locked: true, powered: true}),
      37 => Some(Self {delay: NumberFrom1To4Property::new(3), facing: CardinalFacingProperty::South, locked: true, powered: false}),
      38 => Some(Self {delay: NumberFrom1To4Property::new(3), facing: CardinalFacingProperty::South, locked: false, powered: true}),
      39 => Some(Self {delay: NumberFrom1To4Property::new(3), facing: CardinalFacingProperty::South, locked: false, powered: false}),
      40 => Some(Self {delay: NumberFrom1To4Property::new(3), facing: CardinalFacingProperty::West, locked: true, powered: true}),
      41 => Some(Self {delay: NumberFrom1To4Property::new(3), facing: CardinalFacingProperty::West, locked: true, powered: false}),
      42 => Some(Self {delay: NumberFrom1To4Property::new(3), facing: CardinalFacingProperty::West, locked: false, powered: true}),
      43 => Some(Self {delay: NumberFrom1To4Property::new(3), facing: CardinalFacingProperty::West, locked: false, powered: false}),
      44 => Some(Self {delay: NumberFrom1To4Property::new(3), facing: CardinalFacingProperty::East, locked: true, powered: true}),
      45 => Some(Self {delay: NumberFrom1To4Property::new(3), facing: CardinalFacingProperty::East, locked: true, powered: false}),
      46 => Some(Self {delay: NumberFrom1To4Property::new(3), facing: CardinalFacingProperty::East, locked: false, powered: true}),
      47 => Some(Self {delay: NumberFrom1To4Property::new(3), facing: CardinalFacingProperty::East, locked: false, powered: false}),
      48 => Some(Self {delay: NumberFrom1To4Property::new(4), facing: CardinalFacingProperty::North, locked: true, powered: true}),
      49 => Some(Self {delay: NumberFrom1To4Property::new(4), facing: CardinalFacingProperty::North, locked: true, powered: false}),
      50 => Some(Self {delay: NumberFrom1To4Property::new(4), facing: CardinalFacingProperty::North, locked: false, powered: true}),
      51 => Some(Self {delay: NumberFrom1To4Property::new(4), facing: CardinalFacingProperty::North, locked: false, powered: false}),
      52 => Some(Self {delay: NumberFrom1To4Property::new(4), facing: CardinalFacingProperty::South, locked: true, powered: true}),
      53 => Some(Self {delay: NumberFrom1To4Property::new(4), facing: CardinalFacingProperty::South, locked: true, powered: false}),
      54 => Some(Self {delay: NumberFrom1To4Property::new(4), facing: CardinalFacingProperty::South, locked: false, powered: true}),
      55 => Some(Self {delay: NumberFrom1To4Property::new(4), facing: CardinalFacingProperty::South, locked: false, powered: false}),
      56 => Some(Self {delay: NumberFrom1To4Property::new(4), facing: CardinalFacingProperty::West, locked: true, powered: true}),
      57 => Some(Self {delay: NumberFrom1To4Property::new(4), facing: CardinalFacingProperty::West, locked: true, powered: false}),
      58 => Some(Self {delay: NumberFrom1To4Property::new(4), facing: CardinalFacingProperty::West, locked: false, powered: true}),
      59 => Some(Self {delay: NumberFrom1To4Property::new(4), facing: CardinalFacingProperty::West, locked: false, powered: false}),
      60 => Some(Self {delay: NumberFrom1To4Property::new(4), facing: CardinalFacingProperty::East, locked: true, powered: true}),
      61 => Some(Self {delay: NumberFrom1To4Property::new(4), facing: CardinalFacingProperty::East, locked: true, powered: false}),
      62 => Some(Self {delay: NumberFrom1To4Property::new(4), facing: CardinalFacingProperty::East, locked: false, powered: true}),
      63 => Some(Self {delay: NumberFrom1To4Property::new(4), facing: CardinalFacingProperty::East, locked: false, powered: false}),
      _ => None,
    }
  }
  pub fn to_offset(self) -> usize {
    match self.delay.value() {
      1 => match self.facing {
        CardinalFacingProperty::North => match self.locked {
          true => match self.powered {
            true => 0,
            false => 1,
          },
          false => match self.powered {
            true => 2,
            false => 3,
          },
        },
        CardinalFacingProperty::South => match self.locked {
          true => match self.powered {
            true => 4,
            false => 5,
          },
          false => match self.powered {
            true => 6,
            false => 7,
          },
        },
        CardinalFacingProperty::West => match self.locked {
          true => match self.powered {
            true => 8,
            false => 9,
          },
          false => match self.powered {
            true => 10,
            false => 11,
          },
        },
        CardinalFacingProperty::East => match self.locked {
          true => match self.powered {
            true => 12,
            false => 13,
          },
          false => match self.powered {
            true => 14,
            false => 15,
          },
        },
      },
      2 => match self.facing {
        CardinalFacingProperty::North => match self.locked {
          true => match self.powered {
            true => 16,
            false => 17,
          },
          false => match self.powered {
            true => 18,
            false => 19,
          },
        },
        CardinalFacingProperty::South => match self.locked {
          true => match self.powered {
            true => 20,
            false => 21,
          },
          false => match self.powered {
            true => 22,
            false => 23,
          },
        },
        CardinalFacingProperty::West => match self.locked {
          true => match self.powered {
            true => 24,
            false => 25,
          },
          false => match self.powered {
            true => 26,
            false => 27,
          },
        },
        CardinalFacingProperty::East => match self.locked {
          true => match self.powered {
            true => 28,
            false => 29,
          },
          false => match self.powered {
            true => 30,
            false => 31,
          },
        },
      },
      3 => match self.facing {
        CardinalFacingProperty::North => match self.locked {
          true => match self.powered {
            true => 32,
            false => 33,
          },
          false => match self.powered {
            true => 34,
            false => 35,
          },
        },
        CardinalFacingProperty::South => match self.locked {
          true => match self.powered {
            true => 36,
            false => 37,
          },
          false => match self.powered {
            true => 38,
            false => 39,
          },
        },
        CardinalFacingProperty::West => match self.locked {
          true => match self.powered {
            true => 40,
            false => 41,
          },
          false => match self.powered {
            true => 42,
            false => 43,
          },
        },
        CardinalFacingProperty::East => match self.locked {
          true => match self.powered {
            true => 44,
            false => 45,
          },
          false => match self.powered {
            true => 46,
            false => 47,
          },
        },
      },
      4 => match self.facing {
        CardinalFacingProperty::North => match self.locked {
          true => match self.powered {
            true => 48,
            false => 49,
          },
          false => match self.powered {
            true => 50,
            false => 51,
          },
        },
        CardinalFacingProperty::South => match self.locked {
          true => match self.powered {
            true => 52,
            false => 53,
          },
          false => match self.powered {
            true => 54,
            false => 55,
          },
        },
        CardinalFacingProperty::West => match self.locked {
          true => match self.powered {
            true => 56,
            false => 57,
          },
          false => match self.powered {
            true => 58,
            false => 59,
          },
        },
        CardinalFacingProperty::East => match self.locked {
          true => match self.powered {
            true => 60,
            false => 61,
          },
          false => match self.powered {
            true => 62,
            false => 63,
          },
        },
      },
      _ => panic!("Illegal Block State"),
    }
  }
}
impl Default for RepeaterData {
  fn default() -> Self {
    Self {delay: NumberFrom1To4Property::new(1), facing: CardinalFacingProperty::North, locked: false, powered: false}
  }
}
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]
pub struct TrapdoorData {
  pub facing: CardinalFacingProperty,
  pub half: TrapdoorHalfProperty,
  pub open: bool,
  pub powered: bool,
  pub waterlogged: bool,
}
impl TrapdoorData {
  pub fn from_offset(offset: usize) -> Option<Self> {
    match offset {
      0 => Some(Self {facing: CardinalFacingProperty::North, half: TrapdoorHalfProperty::Top, open: true, powered: true, waterlogged: true}),
      1 => Some(Self {facing: CardinalFacingProperty::North, half: TrapdoorHalfProperty::Top, open: true, powered: true, waterlogged: false}),
      2 => Some(Self {facing: CardinalFacingProperty::North, half: TrapdoorHalfProperty::Top, open: true, powered: false, waterlogged: true}),
      3 => Some(Self {facing: CardinalFacingProperty::North, half: TrapdoorHalfProperty::Top, open: true, powered: false, waterlogged: false}),
      4 => Some(Self {facing: CardinalFacingProperty::North, half: TrapdoorHalfProperty::Top, open: false, powered: true, waterlogged: true}),
      5 => Some(Self {facing: CardinalFacingProperty::North, half: TrapdoorHalfProperty::Top, open: false, powered: true, waterlogged: false}),
      6 => Some(Self {facing: CardinalFacingProperty::North, half: TrapdoorHalfProperty::Top, open: false, powered: false, waterlogged: true}),
      7 => Some(Self {facing: CardinalFacingProperty::North, half: TrapdoorHalfProperty::Top, open: false, powered: false, waterlogged: false}),
      8 => Some(Self {facing: CardinalFacingProperty::North, half: TrapdoorHalfProperty::Bottom, open: true, powered: true, waterlogged: true}),
      9 => Some(Self {facing: CardinalFacingProperty::North, half: TrapdoorHalfProperty::Bottom, open: true, powered: true, waterlogged: false}),
      10 => Some(Self {facing: CardinalFacingProperty::North, half: TrapdoorHalfProperty::Bottom, open: true, powered: false, waterlogged: true}),
      11 => Some(Self {facing: CardinalFacingProperty::North, half: TrapdoorHalfProperty::Bottom, open: true, powered: false, waterlogged: false}),
      12 => Some(Self {facing: CardinalFacingProperty::North, half: TrapdoorHalfProperty::Bottom, open: false, powered: true, waterlogged: true}),
      13 => Some(Self {facing: CardinalFacingProperty::North, half: TrapdoorHalfProperty::Bottom, open: false, powered: true, waterlogged: false}),
      14 => Some(Self {facing: CardinalFacingProperty::North, half: TrapdoorHalfProperty::Bottom, open: false, powered: false, waterlogged: true}),
      15 => Some(Self {facing: CardinalFacingProperty::North, half: TrapdoorHalfProperty::Bottom, open: false, powered: false, waterlogged: false}),
      16 => Some(Self {facing: CardinalFacingProperty::South, half: TrapdoorHalfProperty::Top, open: true, powered: true, waterlogged: true}),
      17 => Some(Self {facing: CardinalFacingProperty::South, half: TrapdoorHalfProperty::Top, open: true, powered: true, waterlogged: false}),
      18 => Some(Self {facing: CardinalFacingProperty::South, half: TrapdoorHalfProperty::Top, open: true, powered: false, waterlogged: true}),
      19 => Some(Self {facing: CardinalFacingProperty::South, half: TrapdoorHalfProperty::Top, open: true, powered: false, waterlogged: false}),
      20 => Some(Self {facing: CardinalFacingProperty::South, half: TrapdoorHalfProperty::Top, open: false, powered: true, waterlogged: true}),
      21 => Some(Self {facing: CardinalFacingProperty::South, half: TrapdoorHalfProperty::Top, open: false, powered: true, waterlogged: false}),
      22 => Some(Self {facing: CardinalFacingProperty::South, half: TrapdoorHalfProperty::Top, open: false, powered: false, waterlogged: true}),
      23 => Some(Self {facing: CardinalFacingProperty::South, half: TrapdoorHalfProperty::Top, open: false, powered: false, waterlogged: false}),
      24 => Some(Self {facing: CardinalFacingProperty::South, half: TrapdoorHalfProperty::Bottom, open: true, powered: true, waterlogged: true}),
      25 => Some(Self {facing: CardinalFacingProperty::South, half: TrapdoorHalfProperty::Bottom, open: true, powered: true, waterlogged: false}),
      26 => Some(Self {facing: CardinalFacingProperty::South, half: TrapdoorHalfProperty::Bottom, open: true, powered: false, waterlogged: true}),
      27 => Some(Self {facing: CardinalFacingProperty::South, half: TrapdoorHalfProperty::Bottom, open: true, powered: false, waterlogged: false}),
      28 => Some(Self {facing: CardinalFacingProperty::South, half: TrapdoorHalfProperty::Bottom, open: false, powered: true, waterlogged: true}),
      29 => Some(Self {facing: CardinalFacingProperty::South, half: TrapdoorHalfProperty::Bottom, open: false, powered: true, waterlogged: false}),
      30 => Some(Self {facing: CardinalFacingProperty::South, half: TrapdoorHalfProperty::Bottom, open: false, powered: false, waterlogged: true}),
      31 => Some(Self {facing: CardinalFacingProperty::South, half: TrapdoorHalfProperty::Bottom, open: false, powered: false, waterlogged: false}),
      32 => Some(Self {facing: CardinalFacingProperty::West, half: TrapdoorHalfProperty::Top, open: true, powered: true, waterlogged: true}),
      33 => Some(Self {facing: CardinalFacingProperty::West, half: TrapdoorHalfProperty::Top, open: true, powered: true, waterlogged: false}),
      34 => Some(Self {facing: CardinalFacingProperty::West, half: TrapdoorHalfProperty::Top, open: true, powered: false, waterlogged: true}),
      35 => Some(Self {facing: CardinalFacingProperty::West, half: TrapdoorHalfProperty::Top, open: true, powered: false, waterlogged: false}),
      36 => Some(Self {facing: CardinalFacingProperty::West, half: TrapdoorHalfProperty::Top, open: false, powered: true, waterlogged: true}),
      37 => Some(Self {facing: CardinalFacingProperty::West, half: TrapdoorHalfProperty::Top, open: false, powered: true, waterlogged: false}),
      38 => Some(Self {facing: CardinalFacingProperty::West, half: TrapdoorHalfProperty::Top, open: false, powered: false, waterlogged: true}),
      39 => Some(Self {facing: CardinalFacingProperty::West, half: TrapdoorHalfProperty::Top, open: false, powered: false, waterlogged: false}),
      40 => Some(Self {facing: CardinalFacingProperty::West, half: TrapdoorHalfProperty::Bottom, open: true, powered: true, waterlogged: true}),
      41 => Some(Self {facing: CardinalFacingProperty::West, half: TrapdoorHalfProperty::Bottom, open: true, powered: true, waterlogged: false}),
      42 => Some(Self {facing: CardinalFacingProperty::West, half: TrapdoorHalfProperty::Bottom, open: true, powered: false, waterlogged: true}),
      43 => Some(Self {facing: CardinalFacingProperty::West, half: TrapdoorHalfProperty::Bottom, open: true, powered: false, waterlogged: false}),
      44 => Some(Self {facing: CardinalFacingProperty::West, half: TrapdoorHalfProperty::Bottom, open: false, powered: true, waterlogged: true}),
      45 => Some(Self {facing: CardinalFacingProperty::West, half: TrapdoorHalfProperty::Bottom, open: false, powered: true, waterlogged: false}),
      46 => Some(Self {facing: CardinalFacingProperty::West, half: TrapdoorHalfProperty::Bottom, open: false, powered: false, waterlogged: true}),
      47 => Some(Self {facing: CardinalFacingProperty::West, half: TrapdoorHalfProperty::Bottom, open: false, powered: false, waterlogged: false}),
      48 => Some(Self {facing: CardinalFacingProperty::East, half: TrapdoorHalfProperty::Top, open: true, powered: true, waterlogged: true}),
      49 => Some(Self {facing: CardinalFacingProperty::East, half: TrapdoorHalfProperty::Top, open: true, powered: true, waterlogged: false}),
      50 => Some(Self {facing: CardinalFacingProperty::East, half: TrapdoorHalfProperty::Top, open: true, powered: false, waterlogged: true}),
      51 => Some(Self {facing: CardinalFacingProperty::East, half: TrapdoorHalfProperty::Top, open: true, powered: false, waterlogged: false}),
      52 => Some(Self {facing: CardinalFacingProperty::East, half: TrapdoorHalfProperty::Top, open: false, powered: true, waterlogged: true}),
      53 => Some(Self {facing: CardinalFacingProperty::East, half: TrapdoorHalfProperty::Top, open: false, powered: true, waterlogged: false}),
      54 => Some(Self {facing: CardinalFacingProperty::East, half: TrapdoorHalfProperty::Top, open: false, powered: false, waterlogged: true}),
      55 => Some(Self {facing: CardinalFacingProperty::East, half: TrapdoorHalfProperty::Top, open: false, powered: false, waterlogged: false}),
      56 => Some(Self {facing: CardinalFacingProperty::East, half: TrapdoorHalfProperty::Bottom, open: true, powered: true, waterlogged: true}),
      57 => Some(Self {facing: CardinalFacingProperty::East, half: TrapdoorHalfProperty::Bottom, open: true, powered: true, waterlogged: false}),
      58 => Some(Self {facing: CardinalFacingProperty::East, half: TrapdoorHalfProperty::Bottom, open: true, powered: false, waterlogged: true}),
      59 => Some(Self {facing: CardinalFacingProperty::East, half: TrapdoorHalfProperty::Bottom, open: true, powered: false, waterlogged: false}),
      60 => Some(Self {facing: CardinalFacingProperty::East, half: TrapdoorHalfProperty::Bottom, open: false, powered: true, waterlogged: true}),
      61 => Some(Self {facing: CardinalFacingProperty::East, half: TrapdoorHalfProperty::Bottom, open: false, powered: true, waterlogged: false}),
      62 => Some(Self {facing: CardinalFacingProperty::East, half: TrapdoorHalfProperty::Bottom, open: false, powered: false, waterlogged: true}),
      63 => Some(Self {facing: CardinalFacingProperty::East, half: TrapdoorHalfProperty::Bottom, open: false, powered: false, waterlogged: false}),
      _ => None,
    }
  }
  pub fn to_offset(self) -> usize {
    match self.facing {
      CardinalFacingProperty::North => match self.half {
        TrapdoorHalfProperty::Top => match self.open {
          true => match self.powered {
            true => match self.waterlogged {
              true => 0,
              false => 1,
            },
            false => match self.waterlogged {
              true => 2,
              false => 3,
            },
          },
          false => match self.powered {
            true => match self.waterlogged {
              true => 4,
              false => 5,
            },
            false => match self.waterlogged {
              true => 6,
              false => 7,
            },
          },
        },
        TrapdoorHalfProperty::Bottom => match self.open {
          true => match self.powered {
            true => match self.waterlogged {
              true => 8,
              false => 9,
            },
            false => match self.waterlogged {
              true => 10,
              false => 11,
            },
          },
          false => match self.powered {
            true => match self.waterlogged {
              true => 12,
              false => 13,
            },
            false => match self.waterlogged {
              true => 14,
              false => 15,
            },
          },
        },
      },
      CardinalFacingProperty::South => match self.half {
        TrapdoorHalfProperty::Top => match self.open {
          true => match self.powered {
            true => match self.waterlogged {
              true => 16,
              false => 17,
            },
            false => match self.waterlogged {
              true => 18,
              false => 19,
            },
          },
          false => match self.powered {
            true => match self.waterlogged {
              true => 20,
              false => 21,
            },
            false => match self.waterlogged {
              true => 22,
              false => 23,
            },
          },
        },
        TrapdoorHalfProperty::Bottom => match self.open {
          true => match self.powered {
            true => match self.waterlogged {
              true => 24,
              false => 25,
            },
            false => match self.waterlogged {
              true => 26,
              false => 27,
            },
          },
          false => match self.powered {
            true => match self.waterlogged {
              true => 28,
              false => 29,
            },
            false => match self.waterlogged {
              true => 30,
              false => 31,
            },
          },
        },
      },
      CardinalFacingProperty::West => match self.half {
        TrapdoorHalfProperty::Top => match self.open {
          true => match self.powered {
            true => match self.waterlogged {
              true => 32,
              false => 33,
            },
            false => match self.waterlogged {
              true => 34,
              false => 35,
            },
          },
          false => match self.powered {
            true => match self.waterlogged {
              true => 36,
              false => 37,
            },
            false => match self.waterlogged {
              true => 38,
              false => 39,
            },
          },
        },
        TrapdoorHalfProperty::Bottom => match self.open {
          true => match self.powered {
            true => match self.waterlogged {
              true => 40,
              false => 41,
            },
            false => match self.waterlogged {
              true => 42,
              false => 43,
            },
          },
          false => match self.powered {
            true => match self.waterlogged {
              true => 44,
              false => 45,
            },
            false => match self.waterlogged {
              true => 46,
              false => 47,
            },
          },
        },
      },
      CardinalFacingProperty::East => match self.half {
        TrapdoorHalfProperty::Top => match self.open {
          true => match self.powered {
            true => match self.waterlogged {
              true => 48,
              false => 49,
            },
            false => match self.waterlogged {
              true => 50,
              false => 51,
            },
          },
          false => match self.powered {
            true => match self.waterlogged {
              true => 52,
              false => 53,
            },
            false => match self.waterlogged {
              true => 54,
              false => 55,
            },
          },
        },
        TrapdoorHalfProperty::Bottom => match self.open {
          true => match self.powered {
            true => match self.waterlogged {
              true => 56,
              false => 57,
            },
            false => match self.waterlogged {
              true => 58,
              false => 59,
            },
          },
          false => match self.powered {
            true => match self.waterlogged {
              true => 60,
              false => 61,
            },
            false => match self.waterlogged {
              true => 62,
              false => 63,
            },
          },
        },
      },
    }
  }
}
impl Default for TrapdoorData {
  fn default() -> Self {
    Self {facing: CardinalFacingProperty::North, half: TrapdoorHalfProperty::Bottom, open: false, powered: false, waterlogged: false}
  }
}
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]
pub struct MushroomBlockData {
  pub down: bool,
  pub east: bool,
  pub north: bool,
  pub south: bool,
  pub up: bool,
  pub west: bool,
}
impl MushroomBlockData {
  pub fn from_offset(offset: usize) -> Option<Self> {
    match offset {
      0 => Some(Self {down: true, east: true, north: true, south: true, up: true, west: true}),
      1 => Some(Self {down: true, east: true, north: true, south: true, up: true, west: false}),
      2 => Some(Self {down: true, east: true, north: true, south: true, up: false, west: true}),
      3 => Some(Self {down: true, east: true, north: true, south: true, up: false, west: false}),
      4 => Some(Self {down: true, east: true, north: true, south: false, up: true, west: true}),
      5 => Some(Self {down: true, east: true, north: true, south: false, up: true, west: false}),
      6 => Some(Self {down: true, east: true, north: true, south: false, up: false, west: true}),
      7 => Some(Self {down: true, east: true, north: true, south: false, up: false, west: false}),
      8 => Some(Self {down: true, east: true, north: false, south: true, up: true, west: true}),
      9 => Some(Self {down: true, east: true, north: false, south: true, up: true, west: false}),
      10 => Some(Self {down: true, east: true, north: false, south: true, up: false, west: true}),
      11 => Some(Self {down: true, east: true, north: false, south: true, up: false, west: false}),
      12 => Some(Self {down: true, east: true, north: false, south: false, up: true, west: true}),
      13 => Some(Self {down: true, east: true, north: false, south: false, up: true, west: false}),
      14 => Some(Self {down: true, east: true, north: false, south: false, up: false, west: true}),
      15 => Some(Self {down: true, east: true, north: false, south: false, up: false, west: false}),
      16 => Some(Self {down: true, east: false, north: true, south: true, up: true, west: true}),
      17 => Some(Self {down: true, east: false, north: true, south: true, up: true, west: false}),
      18 => Some(Self {down: true, east: false, north: true, south: true, up: false, west: true}),
      19 => Some(Self {down: true, east: false, north: true, south: true, up: false, west: false}),
      20 => Some(Self {down: true, east: false, north: true, south: false, up: true, west: true}),
      21 => Some(Self {down: true, east: false, north: true, south: false, up: true, west: false}),
      22 => Some(Self {down: true, east: false, north: true, south: false, up: false, west: true}),
      23 => Some(Self {down: true, east: false, north: true, south: false, up: false, west: false}),
      24 => Some(Self {down: true, east: false, north: false, south: true, up: true, west: true}),
      25 => Some(Self {down: true, east: false, north: false, south: true, up: true, west: false}),
      26 => Some(Self {down: true, east: false, north: false, south: true, up: false, west: true}),
      27 => Some(Self {down: true, east: false, north: false, south: true, up: false, west: false}),
      28 => Some(Self {down: true, east: false, north: false, south: false, up: true, west: true}),
      29 => Some(Self {down: true, east: false, north: false, south: false, up: true, west: false}),
      30 => Some(Self {down: true, east: false, north: false, south: false, up: false, west: true}),
      31 => Some(Self {down: true, east: false, north: false, south: false, up: false, west: false}),
      32 => Some(Self {down: false, east: true, north: true, south: true, up: true, west: true}),
      33 => Some(Self {down: false, east: true, north: true, south: true, up: true, west: false}),
      34 => Some(Self {down: false, east: true, north: true, south: true, up: false, west: true}),
      35 => Some(Self {down: false, east: true, north: true, south: true, up: false, west: false}),
      36 => Some(Self {down: false, east: true, north: true, south: false, up: true, west: true}),
      37 => Some(Self {down: false, east: true, north: true, south: false, up: true, west: false}),
      38 => Some(Self {down: false, east: true, north: true, south: false, up: false, west: true}),
      39 => Some(Self {down: false, east: true, north: true, south: false, up: false, west: false}),
      40 => Some(Self {down: false, east: true, north: false, south: true, up: true, west: true}),
      41 => Some(Self {down: false, east: true, north: false, south: true, up: true, west: false}),
      42 => Some(Self {down: false, east: true, north: false, south: true, up: false, west: true}),
      43 => Some(Self {down: false, east: true, north: false, south: true, up: false, west: false}),
      44 => Some(Self {down: false, east: true, north: false, south: false, up: true, west: true}),
      45 => Some(Self {down: false, east: true, north: false, south: false, up: true, west: false}),
      46 => Some(Self {down: false, east: true, north: false, south: false, up: false, west: true}),
      47 => Some(Self {down: false, east: true, north: false, south: false, up: false, west: false}),
      48 => Some(Self {down: false, east: false, north: true, south: true, up: true, west: true}),
      49 => Some(Self {down: false, east: false, north: true, south: true, up: true, west: false}),
      50 => Some(Self {down: false, east: false, north: true, south: true, up: false, west: true}),
      51 => Some(Self {down: false, east: false, north: true, south: true, up: false, west: false}),
      52 => Some(Self {down: false, east: false, north: true, south: false, up: true, west: true}),
      53 => Some(Self {down: false, east: false, north: true, south: false, up: true, west: false}),
      54 => Some(Self {down: false, east: false, north: true, south: false, up: false, west: true}),
      55 => Some(Self {down: false, east: false, north: true, south: false, up: false, west: false}),
      56 => Some(Self {down: false, east: false, north: false, south: true, up: true, west: true}),
      57 => Some(Self {down: false, east: false, north: false, south: true, up: true, west: false}),
      58 => Some(Self {down: false, east: false, north: false, south: true, up: false, west: true}),
      59 => Some(Self {down: false, east: false, north: false, south: true, up: false, west: false}),
      60 => Some(Self {down: false, east: false, north: false, south: false, up: true, west: true}),
      61 => Some(Self {down: false, east: false, north: false, south: false, up: true, west: false}),
      62 => Some(Self {down: false, east: false, north: false, south: false, up: false, west: true}),
      63 => Some(Self {down: false, east: false, north: false, south: false, up: false, west: false}),
      _ => None,
    }
  }
  pub fn to_offset(self) -> usize {
    match self.down {
      true => match self.east {
        true => match self.north {
          true => match self.south {
            true => match self.up {
              true => match self.west {
                true => 0,
                false => 1,
              },
              false => match self.west {
                true => 2,
                false => 3,
              },
            },
            false => match self.up {
              true => match self.west {
                true => 4,
                false => 5,
              },
              false => match self.west {
                true => 6,
                false => 7,
              },
            },
          },
          false => match self.south {
            true => match self.up {
              true => match self.west {
                true => 8,
                false => 9,
              },
              false => match self.west {
                true => 10,
                false => 11,
              },
            },
            false => match self.up {
              true => match self.west {
                true => 12,
                false => 13,
              },
              false => match self.west {
                true => 14,
                false => 15,
              },
            },
          },
        },
        false => match self.north {
          true => match self.south {
            true => match self.up {
              true => match self.west {
                true => 16,
                false => 17,
              },
              false => match self.west {
                true => 18,
                false => 19,
              },
            },
            false => match self.up {
              true => match self.west {
                true => 20,
                false => 21,
              },
              false => match self.west {
                true => 22,
                false => 23,
              },
            },
          },
          false => match self.south {
            true => match self.up {
              true => match self.west {
                true => 24,
                false => 25,
              },
              false => match self.west {
                true => 26,
                false => 27,
              },
            },
            false => match self.up {
              true => match self.west {
                true => 28,
                false => 29,
              },
              false => match self.west {
                true => 30,
                false => 31,
              },
            },
          },
        },
      },
      false => match self.east {
        true => match self.north {
          true => match self.south {
            true => match self.up {
              true => match self.west {
                true => 32,
                false => 33,
              },
              false => match self.west {
                true => 34,
                false => 35,
              },
            },
            false => match self.up {
              true => match self.west {
                true => 36,
                false => 37,
              },
              false => match self.west {
                true => 38,
                false => 39,
              },
            },
          },
          false => match self.south {
            true => match self.up {
              true => match self.west {
                true => 40,
                false => 41,
              },
              false => match self.west {
                true => 42,
                false => 43,
              },
            },
            false => match self.up {
              true => match self.west {
                true => 44,
                false => 45,
              },
              false => match self.west {
                true => 46,
                false => 47,
              },
            },
          },
        },
        false => match self.north {
          true => match self.south {
            true => match self.up {
              true => match self.west {
                true => 48,
                false => 49,
              },
              false => match self.west {
                true => 50,
                false => 51,
              },
            },
            false => match self.up {
              true => match self.west {
                true => 52,
                false => 53,
              },
              false => match self.west {
                true => 54,
                false => 55,
              },
            },
          },
          false => match self.south {
            true => match self.up {
              true => match self.west {
                true => 56,
                false => 57,
              },
              false => match self.west {
                true => 58,
                false => 59,
              },
            },
            false => match self.up {
              true => match self.west {
                true => 60,
                false => 61,
              },
              false => match self.west {
                true => 62,
                false => 63,
              },
            },
          },
        },
      },
    }
  }
}
impl Default for MushroomBlockData {
  fn default() -> Self {
    Self {down: true, east: true, north: true, south: true, up: true, west: true}
  }
}
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]
pub struct MushroomStemData {
  pub down: bool,
  pub east: bool,
  pub north: bool,
  pub south: bool,
  pub up: bool,
  pub west: bool,
}
impl MushroomStemData {
  pub fn from_offset(offset: usize) -> Option<Self> {
    match offset {
      0 => Some(Self {down: true, east: true, north: true, south: true, up: true, west: true}),
      1 => Some(Self {down: true, east: true, north: true, south: true, up: true, west: false}),
      2 => Some(Self {down: true, east: true, north: true, south: true, up: false, west: true}),
      3 => Some(Self {down: true, east: true, north: true, south: true, up: false, west: false}),
      4 => Some(Self {down: true, east: true, north: true, south: false, up: true, west: true}),
      5 => Some(Self {down: true, east: true, north: true, south: false, up: true, west: false}),
      6 => Some(Self {down: true, east: true, north: true, south: false, up: false, west: true}),
      7 => Some(Self {down: true, east: true, north: true, south: false, up: false, west: false}),
      8 => Some(Self {down: true, east: true, north: false, south: true, up: true, west: true}),
      9 => Some(Self {down: true, east: true, north: false, south: true, up: true, west: false}),
      10 => Some(Self {down: true, east: true, north: false, south: true, up: false, west: true}),
      11 => Some(Self {down: true, east: true, north: false, south: true, up: false, west: false}),
      12 => Some(Self {down: true, east: true, north: false, south: false, up: true, west: true}),
      13 => Some(Self {down: true, east: true, north: false, south: false, up: true, west: false}),
      14 => Some(Self {down: true, east: true, north: false, south: false, up: false, west: true}),
      15 => Some(Self {down: true, east: true, north: false, south: false, up: false, west: false}),
      16 => Some(Self {down: true, east: false, north: true, south: true, up: true, west: true}),
      17 => Some(Self {down: true, east: false, north: true, south: true, up: true, west: false}),
      18 => Some(Self {down: true, east: false, north: true, south: true, up: false, west: true}),
      19 => Some(Self {down: true, east: false, north: true, south: true, up: false, west: false}),
      20 => Some(Self {down: true, east: false, north: true, south: false, up: true, west: true}),
      21 => Some(Self {down: true, east: false, north: true, south: false, up: true, west: false}),
      22 => Some(Self {down: true, east: false, north: true, south: false, up: false, west: true}),
      23 => Some(Self {down: true, east: false, north: true, south: false, up: false, west: false}),
      24 => Some(Self {down: true, east: false, north: false, south: true, up: true, west: true}),
      25 => Some(Self {down: true, east: false, north: false, south: true, up: true, west: false}),
      26 => Some(Self {down: true, east: false, north: false, south: true, up: false, west: true}),
      27 => Some(Self {down: true, east: false, north: false, south: true, up: false, west: false}),
      28 => Some(Self {down: true, east: false, north: false, south: false, up: true, west: true}),
      29 => Some(Self {down: true, east: false, north: false, south: false, up: true, west: false}),
      30 => Some(Self {down: true, east: false, north: false, south: false, up: false, west: true}),
      31 => Some(Self {down: true, east: false, north: false, south: false, up: false, west: false}),
      32 => Some(Self {down: false, east: true, north: true, south: true, up: true, west: true}),
      33 => Some(Self {down: false, east: true, north: true, south: true, up: true, west: false}),
      34 => Some(Self {down: false, east: true, north: true, south: true, up: false, west: true}),
      35 => Some(Self {down: false, east: true, north: true, south: true, up: false, west: false}),
      36 => Some(Self {down: false, east: true, north: true, south: false, up: true, west: true}),
      37 => Some(Self {down: false, east: true, north: true, south: false, up: true, west: false}),
      38 => Some(Self {down: false, east: true, north: true, south: false, up: false, west: true}),
      39 => Some(Self {down: false, east: true, north: true, south: false, up: false, west: false}),
      40 => Some(Self {down: false, east: true, north: false, south: true, up: true, west: true}),
      41 => Some(Self {down: false, east: true, north: false, south: true, up: true, west: false}),
      42 => Some(Self {down: false, east: true, north: false, south: true, up: false, west: true}),
      43 => Some(Self {down: false, east: true, north: false, south: true, up: false, west: false}),
      44 => Some(Self {down: false, east: true, north: false, south: false, up: true, west: true}),
      45 => Some(Self {down: false, east: true, north: false, south: false, up: true, west: false}),
      46 => Some(Self {down: false, east: true, north: false, south: false, up: false, west: true}),
      47 => Some(Self {down: false, east: true, north: false, south: false, up: false, west: false}),
      48 => Some(Self {down: false, east: false, north: true, south: true, up: true, west: true}),
      49 => Some(Self {down: false, east: false, north: true, south: true, up: true, west: false}),
      50 => Some(Self {down: false, east: false, north: true, south: true, up: false, west: true}),
      51 => Some(Self {down: false, east: false, north: true, south: true, up: false, west: false}),
      52 => Some(Self {down: false, east: false, north: true, south: false, up: true, west: true}),
      53 => Some(Self {down: false, east: false, north: true, south: false, up: true, west: false}),
      54 => Some(Self {down: false, east: false, north: true, south: false, up: false, west: true}),
      55 => Some(Self {down: false, east: false, north: true, south: false, up: false, west: false}),
      56 => Some(Self {down: false, east: false, north: false, south: true, up: true, west: true}),
      57 => Some(Self {down: false, east: false, north: false, south: true, up: true, west: false}),
      58 => Some(Self {down: false, east: false, north: false, south: true, up: false, west: true}),
      59 => Some(Self {down: false, east: false, north: false, south: true, up: false, west: false}),
      60 => Some(Self {down: false, east: false, north: false, south: false, up: true, west: true}),
      61 => Some(Self {down: false, east: false, north: false, south: false, up: true, west: false}),
      62 => Some(Self {down: false, east: false, north: false, south: false, up: false, west: true}),
      63 => Some(Self {down: false, east: false, north: false, south: false, up: false, west: false}),
      _ => None,
    }
  }
  pub fn to_offset(self) -> usize {
    match self.down {
      true => match self.east {
        true => match self.north {
          true => match self.south {
            true => match self.up {
              true => match self.west {
                true => 0,
                false => 1,
              },
              false => match self.west {
                true => 2,
                false => 3,
              },
            },
            false => match self.up {
              true => match self.west {
                true => 4,
                false => 5,
              },
              false => match self.west {
                true => 6,
                false => 7,
              },
            },
          },
          false => match self.south {
            true => match self.up {
              true => match self.west {
                true => 8,
                false => 9,
              },
              false => match self.west {
                true => 10,
                false => 11,
              },
            },
            false => match self.up {
              true => match self.west {
                true => 12,
                false => 13,
              },
              false => match self.west {
                true => 14,
                false => 15,
              },
            },
          },
        },
        false => match self.north {
          true => match self.south {
            true => match self.up {
              true => match self.west {
                true => 16,
                false => 17,
              },
              false => match self.west {
                true => 18,
                false => 19,
              },
            },
            false => match self.up {
              true => match self.west {
                true => 20,
                false => 21,
              },
              false => match self.west {
                true => 22,
                false => 23,
              },
            },
          },
          false => match self.south {
            true => match self.up {
              true => match self.west {
                true => 24,
                false => 25,
              },
              false => match self.west {
                true => 26,
                false => 27,
              },
            },
            false => match self.up {
              true => match self.west {
                true => 28,
                false => 29,
              },
              false => match self.west {
                true => 30,
                false => 31,
              },
            },
          },
        },
      },
      false => match self.east {
        true => match self.north {
          true => match self.south {
            true => match self.up {
              true => match self.west {
                true => 32,
                false => 33,
              },
              false => match self.west {
                true => 34,
                false => 35,
              },
            },
            false => match self.up {
              true => match self.west {
                true => 36,
                false => 37,
              },
              false => match self.west {
                true => 38,
                false => 39,
              },
            },
          },
          false => match self.south {
            true => match self.up {
              true => match self.west {
                true => 40,
                false => 41,
              },
              false => match self.west {
                true => 42,
                false => 43,
              },
            },
            false => match self.up {
              true => match self.west {
                true => 44,
                false => 45,
              },
              false => match self.west {
                true => 46,
                false => 47,
              },
            },
          },
        },
        false => match self.north {
          true => match self.south {
            true => match self.up {
              true => match self.west {
                true => 48,
                false => 49,
              },
              false => match self.west {
                true => 50,
                false => 51,
              },
            },
            false => match self.up {
              true => match self.west {
                true => 52,
                false => 53,
              },
              false => match self.west {
                true => 54,
                false => 55,
              },
            },
          },
          false => match self.south {
            true => match self.up {
              true => match self.west {
                true => 56,
                false => 57,
              },
              false => match self.west {
                true => 58,
                false => 59,
              },
            },
            false => match self.up {
              true => match self.west {
                true => 60,
                false => 61,
              },
              false => match self.west {
                true => 62,
                false => 63,
              },
            },
          },
        },
      },
    }
  }
}
impl Default for MushroomStemData {
  fn default() -> Self {
    Self {down: true, east: true, north: true, south: true, up: true, west: true}
  }
}
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]
pub struct IronBarsData {
  pub east: bool,
  pub north: bool,
  pub south: bool,
  pub waterlogged: bool,
  pub west: bool,
}
impl IronBarsData {
  pub fn from_offset(offset: usize) -> Option<Self> {
    match offset {
      0 => Some(Self {east: true, north: true, south: true, waterlogged: true, west: true}),
      1 => Some(Self {east: true, north: true, south: true, waterlogged: true, west: false}),
      2 => Some(Self {east: true, north: true, south: true, waterlogged: false, west: true}),
      3 => Some(Self {east: true, north: true, south: true, waterlogged: false, west: false}),
      4 => Some(Self {east: true, north: true, south: false, waterlogged: true, west: true}),
      5 => Some(Self {east: true, north: true, south: false, waterlogged: true, west: false}),
      6 => Some(Self {east: true, north: true, south: false, waterlogged: false, west: true}),
      7 => Some(Self {east: true, north: true, south: false, waterlogged: false, west: false}),
      8 => Some(Self {east: true, north: false, south: true, waterlogged: true, west: true}),
      9 => Some(Self {east: true, north: false, south: true, waterlogged: true, west: false}),
      10 => Some(Self {east: true, north: false, south: true, waterlogged: false, west: true}),
      11 => Some(Self {east: true, north: false, south: true, waterlogged: false, west: false}),
      12 => Some(Self {east: true, north: false, south: false, waterlogged: true, west: true}),
      13 => Some(Self {east: true, north: false, south: false, waterlogged: true, west: false}),
      14 => Some(Self {east: true, north: false, south: false, waterlogged: false, west: true}),
      15 => Some(Self {east: true, north: false, south: false, waterlogged: false, west: false}),
      16 => Some(Self {east: false, north: true, south: true, waterlogged: true, west: true}),
      17 => Some(Self {east: false, north: true, south: true, waterlogged: true, west: false}),
      18 => Some(Self {east: false, north: true, south: true, waterlogged: false, west: true}),
      19 => Some(Self {east: false, north: true, south: true, waterlogged: false, west: false}),
      20 => Some(Self {east: false, north: true, south: false, waterlogged: true, west: true}),
      21 => Some(Self {east: false, north: true, south: false, waterlogged: true, west: false}),
      22 => Some(Self {east: false, north: true, south: false, waterlogged: false, west: true}),
      23 => Some(Self {east: false, north: true, south: false, waterlogged: false, west: false}),
      24 => Some(Self {east: false, north: false, south: true, waterlogged: true, west: true}),
      25 => Some(Self {east: false, north: false, south: true, waterlogged: true, west: false}),
      26 => Some(Self {east: false, north: false, south: true, waterlogged: false, west: true}),
      27 => Some(Self {east: false, north: false, south: true, waterlogged: false, west: false}),
      28 => Some(Self {east: false, north: false, south: false, waterlogged: true, west: true}),
      29 => Some(Self {east: false, north: false, south: false, waterlogged: true, west: false}),
      30 => Some(Self {east: false, north: false, south: false, waterlogged: false, west: true}),
      31 => Some(Self {east: false, north: false, south: false, waterlogged: false, west: false}),
      _ => None,
    }
  }
  pub fn to_offset(self) -> usize {
    match self.east {
      true => match self.north {
        true => match self.south {
          true => match self.waterlogged {
            true => match self.west {
              true => 0,
              false => 1,
            },
            false => match self.west {
              true => 2,
              false => 3,
            },
          },
          false => match self.waterlogged {
            true => match self.west {
              true => 4,
              false => 5,
            },
            false => match self.west {
              true => 6,
              false => 7,
            },
          },
        },
        false => match self.south {
          true => match self.waterlogged {
            true => match self.west {
              true => 8,
              false => 9,
            },
            false => match self.west {
              true => 10,
              false => 11,
            },
          },
          false => match self.waterlogged {
            true => match self.west {
              true => 12,
              false => 13,
            },
            false => match self.west {
              true => 14,
              false => 15,
            },
          },
        },
      },
      false => match self.north {
        true => match self.south {
          true => match self.waterlogged {
            true => match self.west {
              true => 16,
              false => 17,
            },
            false => match self.west {
              true => 18,
              false => 19,
            },
          },
          false => match self.waterlogged {
            true => match self.west {
              true => 20,
              false => 21,
            },
            false => match self.west {
              true => 22,
              false => 23,
            },
          },
        },
        false => match self.south {
          true => match self.waterlogged {
            true => match self.west {
              true => 24,
              false => 25,
            },
            false => match self.west {
              true => 26,
              false => 27,
            },
          },
          false => match self.waterlogged {
            true => match self.west {
              true => 28,
              false => 29,
            },
            false => match self.west {
              true => 30,
              false => 31,
            },
          },
        },
      },
    }
  }
}
impl Default for IronBarsData {
  fn default() -> Self {
    Self {east: false, north: false, south: false, waterlogged: false, west: false}
  }
}
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]
pub struct GlassPaneData {
  pub east: bool,
  pub north: bool,
  pub south: bool,
  pub waterlogged: bool,
  pub west: bool,
}
impl GlassPaneData {
  pub fn from_offset(offset: usize) -> Option<Self> {
    match offset {
      0 => Some(Self {east: true, north: true, south: true, waterlogged: true, west: true}),
      1 => Some(Self {east: true, north: true, south: true, waterlogged: true, west: false}),
      2 => Some(Self {east: true, north: true, south: true, waterlogged: false, west: true}),
      3 => Some(Self {east: true, north: true, south: true, waterlogged: false, west: false}),
      4 => Some(Self {east: true, north: true, south: false, waterlogged: true, west: true}),
      5 => Some(Self {east: true, north: true, south: false, waterlogged: true, west: false}),
      6 => Some(Self {east: true, north: true, south: false, waterlogged: false, west: true}),
      7 => Some(Self {east: true, north: true, south: false, waterlogged: false, west: false}),
      8 => Some(Self {east: true, north: false, south: true, waterlogged: true, west: true}),
      9 => Some(Self {east: true, north: false, south: true, waterlogged: true, west: false}),
      10 => Some(Self {east: true, north: false, south: true, waterlogged: false, west: true}),
      11 => Some(Self {east: true, north: false, south: true, waterlogged: false, west: false}),
      12 => Some(Self {east: true, north: false, south: false, waterlogged: true, west: true}),
      13 => Some(Self {east: true, north: false, south: false, waterlogged: true, west: false}),
      14 => Some(Self {east: true, north: false, south: false, waterlogged: false, west: true}),
      15 => Some(Self {east: true, north: false, south: false, waterlogged: false, west: false}),
      16 => Some(Self {east: false, north: true, south: true, waterlogged: true, west: true}),
      17 => Some(Self {east: false, north: true, south: true, waterlogged: true, west: false}),
      18 => Some(Self {east: false, north: true, south: true, waterlogged: false, west: true}),
      19 => Some(Self {east: false, north: true, south: true, waterlogged: false, west: false}),
      20 => Some(Self {east: false, north: true, south: false, waterlogged: true, west: true}),
      21 => Some(Self {east: false, north: true, south: false, waterlogged: true, west: false}),
      22 => Some(Self {east: false, north: true, south: false, waterlogged: false, west: true}),
      23 => Some(Self {east: false, north: true, south: false, waterlogged: false, west: false}),
      24 => Some(Self {east: false, north: false, south: true, waterlogged: true, west: true}),
      25 => Some(Self {east: false, north: false, south: true, waterlogged: true, west: false}),
      26 => Some(Self {east: false, north: false, south: true, waterlogged: false, west: true}),
      27 => Some(Self {east: false, north: false, south: true, waterlogged: false, west: false}),
      28 => Some(Self {east: false, north: false, south: false, waterlogged: true, west: true}),
      29 => Some(Self {east: false, north: false, south: false, waterlogged: true, west: false}),
      30 => Some(Self {east: false, north: false, south: false, waterlogged: false, west: true}),
      31 => Some(Self {east: false, north: false, south: false, waterlogged: false, west: false}),
      _ => None,
    }
  }
  pub fn to_offset(self) -> usize {
    match self.east {
      true => match self.north {
        true => match self.south {
          true => match self.waterlogged {
            true => match self.west {
              true => 0,
              false => 1,
            },
            false => match self.west {
              true => 2,
              false => 3,
            },
          },
          false => match self.waterlogged {
            true => match self.west {
              true => 4,
              false => 5,
            },
            false => match self.west {
              true => 6,
              false => 7,
            },
          },
        },
        false => match self.south {
          true => match self.waterlogged {
            true => match self.west {
              true => 8,
              false => 9,
            },
            false => match self.west {
              true => 10,
              false => 11,
            },
          },
          false => match self.waterlogged {
            true => match self.west {
              true => 12,
              false => 13,
            },
            false => match self.west {
              true => 14,
              false => 15,
            },
          },
        },
      },
      false => match self.north {
        true => match self.south {
          true => match self.waterlogged {
            true => match self.west {
              true => 16,
              false => 17,
            },
            false => match self.west {
              true => 18,
              false => 19,
            },
          },
          false => match self.waterlogged {
            true => match self.west {
              true => 20,
              false => 21,
            },
            false => match self.west {
              true => 22,
              false => 23,
            },
          },
        },
        false => match self.south {
          true => match self.waterlogged {
            true => match self.west {
              true => 24,
              false => 25,
            },
            false => match self.west {
              true => 26,
              false => 27,
            },
          },
          false => match self.waterlogged {
            true => match self.west {
              true => 28,
              false => 29,
            },
            false => match self.west {
              true => 30,
              false => 31,
            },
          },
        },
      },
    }
  }
}
impl Default for GlassPaneData {
  fn default() -> Self {
    Self {east: false, north: false, south: false, waterlogged: false, west: false}
  }
}
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]
pub struct CropStemData {
  pub age: NumberFrom0To7Property,
}
impl CropStemData {
  pub fn from_offset(offset: usize) -> Option<Self> {
    match offset {
      0 => Some(Self {age: NumberFrom0To7Property::new(0)}),
      1 => Some(Self {age: NumberFrom0To7Property::new(1)}),
      2 => Some(Self {age: NumberFrom0To7Property::new(2)}),
      3 => Some(Self {age: NumberFrom0To7Property::new(3)}),
      4 => Some(Self {age: NumberFrom0To7Property::new(4)}),
      5 => Some(Self {age: NumberFrom0To7Property::new(5)}),
      6 => Some(Self {age: NumberFrom0To7Property::new(6)}),
      7 => Some(Self {age: NumberFrom0To7Property::new(7)}),
      _ => None,
    }
  }
  pub fn to_offset(self) -> usize {
    match self.age.value() {
      0 => 0,
      1 => 1,
      2 => 2,
      3 => 3,
      4 => 4,
      5 => 5,
      6 => 6,
      7 => 7,
      _ => panic!("Illegal Block State"),
    }
  }
}
impl Default for CropStemData {
  fn default() -> Self {
    Self {age: NumberFrom0To7Property::new(0)}
  }
}
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]
pub struct VineData {
  pub east: bool,
  pub north: bool,
  pub south: bool,
  pub up: bool,
  pub west: bool,
}
impl VineData {
  pub fn from_offset(offset: usize) -> Option<Self> {
    match offset {
      0 => Some(Self {east: true, north: true, south: true, up: true, west: true}),
      1 => Some(Self {east: true, north: true, south: true, up: true, west: false}),
      2 => Some(Self {east: true, north: true, south: true, up: false, west: true}),
      3 => Some(Self {east: true, north: true, south: true, up: false, west: false}),
      4 => Some(Self {east: true, north: true, south: false, up: true, west: true}),
      5 => Some(Self {east: true, north: true, south: false, up: true, west: false}),
      6 => Some(Self {east: true, north: true, south: false, up: false, west: true}),
      7 => Some(Self {east: true, north: true, south: false, up: false, west: false}),
      8 => Some(Self {east: true, north: false, south: true, up: true, west: true}),
      9 => Some(Self {east: true, north: false, south: true, up: true, west: false}),
      10 => Some(Self {east: true, north: false, south: true, up: false, west: true}),
      11 => Some(Self {east: true, north: false, south: true, up: false, west: false}),
      12 => Some(Self {east: true, north: false, south: false, up: true, west: true}),
      13 => Some(Self {east: true, north: false, south: false, up: true, west: false}),
      14 => Some(Self {east: true, north: false, south: false, up: false, west: true}),
      15 => Some(Self {east: true, north: false, south: false, up: false, west: false}),
      16 => Some(Self {east: false, north: true, south: true, up: true, west: true}),
      17 => Some(Self {east: false, north: true, south: true, up: true, west: false}),
      18 => Some(Self {east: false, north: true, south: true, up: false, west: true}),
      19 => Some(Self {east: false, north: true, south: true, up: false, west: false}),
      20 => Some(Self {east: false, north: true, south: false, up: true, west: true}),
      21 => Some(Self {east: false, north: true, south: false, up: true, west: false}),
      22 => Some(Self {east: false, north: true, south: false, up: false, west: true}),
      23 => Some(Self {east: false, north: true, south: false, up: false, west: false}),
      24 => Some(Self {east: false, north: false, south: true, up: true, west: true}),
      25 => Some(Self {east: false, north: false, south: true, up: true, west: false}),
      26 => Some(Self {east: false, north: false, south: true, up: false, west: true}),
      27 => Some(Self {east: false, north: false, south: true, up: false, west: false}),
      28 => Some(Self {east: false, north: false, south: false, up: true, west: true}),
      29 => Some(Self {east: false, north: false, south: false, up: true, west: false}),
      30 => Some(Self {east: false, north: false, south: false, up: false, west: true}),
      31 => Some(Self {east: false, north: false, south: false, up: false, west: false}),
      _ => None,
    }
  }
  pub fn to_offset(self) -> usize {
    match self.east {
      true => match self.north {
        true => match self.south {
          true => match self.up {
            true => match self.west {
              true => 0,
              false => 1,
            },
            false => match self.west {
              true => 2,
              false => 3,
            },
          },
          false => match self.up {
            true => match self.west {
              true => 4,
              false => 5,
            },
            false => match self.west {
              true => 6,
              false => 7,
            },
          },
        },
        false => match self.south {
          true => match self.up {
            true => match self.west {
              true => 8,
              false => 9,
            },
            false => match self.west {
              true => 10,
              false => 11,
            },
          },
          false => match self.up {
            true => match self.west {
              true => 12,
              false => 13,
            },
            false => match self.west {
              true => 14,
              false => 15,
            },
          },
        },
      },
      false => match self.north {
        true => match self.south {
          true => match self.up {
            true => match self.west {
              true => 16,
              false => 17,
            },
            false => match self.west {
              true => 18,
              false => 19,
            },
          },
          false => match self.up {
            true => match self.west {
              true => 20,
              false => 21,
            },
            false => match self.west {
              true => 22,
              false => 23,
            },
          },
        },
        false => match self.south {
          true => match self.up {
            true => match self.west {
              true => 24,
              false => 25,
            },
            false => match self.west {
              true => 26,
              false => 27,
            },
          },
          false => match self.up {
            true => match self.west {
              true => 28,
              false => 29,
            },
            false => match self.west {
              true => 30,
              false => 31,
            },
          },
        },
      },
    }
  }
}
impl Default for VineData {
  fn default() -> Self {
    Self {east: false, north: false, south: false, up: false, west: false}
  }
}
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]
pub struct FenceGateData {
  pub facing: CardinalFacingProperty,
  pub in_wall: bool,
  pub open: bool,
  pub powered: bool,
}
impl FenceGateData {
  pub fn from_offset(offset: usize) -> Option<Self> {
    match offset {
      0 => Some(Self {facing: CardinalFacingProperty::North, in_wall: true, open: true, powered: true}),
      1 => Some(Self {facing: CardinalFacingProperty::North, in_wall: true, open: true, powered: false}),
      2 => Some(Self {facing: CardinalFacingProperty::North, in_wall: true, open: false, powered: true}),
      3 => Some(Self {facing: CardinalFacingProperty::North, in_wall: true, open: false, powered: false}),
      4 => Some(Self {facing: CardinalFacingProperty::North, in_wall: false, open: true, powered: true}),
      5 => Some(Self {facing: CardinalFacingProperty::North, in_wall: false, open: true, powered: false}),
      6 => Some(Self {facing: CardinalFacingProperty::North, in_wall: false, open: false, powered: true}),
      7 => Some(Self {facing: CardinalFacingProperty::North, in_wall: false, open: false, powered: false}),
      8 => Some(Self {facing: CardinalFacingProperty::South, in_wall: true, open: true, powered: true}),
      9 => Some(Self {facing: CardinalFacingProperty::South, in_wall: true, open: true, powered: false}),
      10 => Some(Self {facing: CardinalFacingProperty::South, in_wall: true, open: false, powered: true}),
      11 => Some(Self {facing: CardinalFacingProperty::South, in_wall: true, open: false, powered: false}),
      12 => Some(Self {facing: CardinalFacingProperty::South, in_wall: false, open: true, powered: true}),
      13 => Some(Self {facing: CardinalFacingProperty::South, in_wall: false, open: true, powered: false}),
      14 => Some(Self {facing: CardinalFacingProperty::South, in_wall: false, open: false, powered: true}),
      15 => Some(Self {facing: CardinalFacingProperty::South, in_wall: false, open: false, powered: false}),
      16 => Some(Self {facing: CardinalFacingProperty::West, in_wall: true, open: true, powered: true}),
      17 => Some(Self {facing: CardinalFacingProperty::West, in_wall: true, open: true, powered: false}),
      18 => Some(Self {facing: CardinalFacingProperty::West, in_wall: true, open: false, powered: true}),
      19 => Some(Self {facing: CardinalFacingProperty::West, in_wall: true, open: false, powered: false}),
      20 => Some(Self {facing: CardinalFacingProperty::West, in_wall: false, open: true, powered: true}),
      21 => Some(Self {facing: CardinalFacingProperty::West, in_wall: false, open: true, powered: false}),
      22 => Some(Self {facing: CardinalFacingProperty::West, in_wall: false, open: false, powered: true}),
      23 => Some(Self {facing: CardinalFacingProperty::West, in_wall: false, open: false, powered: false}),
      24 => Some(Self {facing: CardinalFacingProperty::East, in_wall: true, open: true, powered: true}),
      25 => Some(Self {facing: CardinalFacingProperty::East, in_wall: true, open: true, powered: false}),
      26 => Some(Self {facing: CardinalFacingProperty::East, in_wall: true, open: false, powered: true}),
      27 => Some(Self {facing: CardinalFacingProperty::East, in_wall: true, open: false, powered: false}),
      28 => Some(Self {facing: CardinalFacingProperty::East, in_wall: false, open: true, powered: true}),
      29 => Some(Self {facing: CardinalFacingProperty::East, in_wall: false, open: true, powered: false}),
      30 => Some(Self {facing: CardinalFacingProperty::East, in_wall: false, open: false, powered: true}),
      31 => Some(Self {facing: CardinalFacingProperty::East, in_wall: false, open: false, powered: false}),
      _ => None,
    }
  }
  pub fn to_offset(self) -> usize {
    match self.facing {
      CardinalFacingProperty::North => match self.in_wall {
        true => match self.open {
          true => match self.powered {
            true => 0,
            false => 1,
          },
          false => match self.powered {
            true => 2,
            false => 3,
          },
        },
        false => match self.open {
          true => match self.powered {
            true => 4,
            false => 5,
          },
          false => match self.powered {
            true => 6,
            false => 7,
          },
        },
      },
      CardinalFacingProperty::South => match self.in_wall {
        true => match self.open {
          true => match self.powered {
            true => 8,
            false => 9,
          },
          false => match self.powered {
            true => 10,
            false => 11,
          },
        },
        false => match self.open {
          true => match self.powered {
            true => 12,
            false => 13,
          },
          false => match self.powered {
            true => 14,
            false => 15,
          },
        },
      },
      CardinalFacingProperty::West => match self.in_wall {
        true => match self.open {
          true => match self.powered {
            true => 16,
            false => 17,
          },
          false => match self.powered {
            true => 18,
            false => 19,
          },
        },
        false => match self.open {
          true => match self.powered {
            true => 20,
            false => 21,
          },
          false => match self.powered {
            true => 22,
            false => 23,
          },
        },
      },
      CardinalFacingProperty::East => match self.in_wall {
        true => match self.open {
          true => match self.powered {
            true => 24,
            false => 25,
          },
          false => match self.powered {
            true => 26,
            false => 27,
          },
        },
        false => match self.open {
          true => match self.powered {
            true => 28,
            false => 29,
          },
          false => match self.powered {
            true => 30,
            false => 31,
          },
        },
      },
    }
  }
}
impl Default for FenceGateData {
  fn default() -> Self {
    Self {facing: CardinalFacingProperty::North, in_wall: false, open: false, powered: false}
  }
}
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]
pub struct MyceliumData {
  pub snowy: bool,
}
impl MyceliumData {
  pub fn from_offset(offset: usize) -> Option<Self> {
    match offset {
      0 => Some(Self {snowy: true}),
      1 => Some(Self {snowy: false}),
      _ => None,
    }
  }
  pub fn to_offset(self) -> usize {
    match self.snowy {
      true => 0,
      false => 1,
    }
  }
}
impl Default for MyceliumData {
  fn default() -> Self {
    Self {snowy: false}
  }
}
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]
pub struct NetherWartData {
  pub age: NumberFrom0To3Property,
}
impl NetherWartData {
  pub fn from_offset(offset: usize) -> Option<Self> {
    match offset {
      0 => Some(Self {age: NumberFrom0To3Property::new(0)}),
      1 => Some(Self {age: NumberFrom0To3Property::new(1)}),
      2 => Some(Self {age: NumberFrom0To3Property::new(2)}),
      3 => Some(Self {age: NumberFrom0To3Property::new(3)}),
      _ => None,
    }
  }
  pub fn to_offset(self) -> usize {
    match self.age.value() {
      0 => 0,
      1 => 1,
      2 => 2,
      3 => 3,
      _ => panic!("Illegal Block State"),
    }
  }
}
impl Default for NetherWartData {
  fn default() -> Self {
    Self {age: NumberFrom0To3Property::new(0)}
  }
}
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]
pub struct BrewingStandData {
  pub has_bottle_0: bool,
  pub has_bottle_1: bool,
  pub has_bottle_2: bool,
}
impl BrewingStandData {
  pub fn from_offset(offset: usize) -> Option<Self> {
    match offset {
      0 => Some(Self {has_bottle_0: true, has_bottle_1: true, has_bottle_2: true}),
      1 => Some(Self {has_bottle_0: true, has_bottle_1: true, has_bottle_2: false}),
      2 => Some(Self {has_bottle_0: true, has_bottle_1: false, has_bottle_2: true}),
      3 => Some(Self {has_bottle_0: true, has_bottle_1: false, has_bottle_2: false}),
      4 => Some(Self {has_bottle_0: false, has_bottle_1: true, has_bottle_2: true}),
      5 => Some(Self {has_bottle_0: false, has_bottle_1: true, has_bottle_2: false}),
      6 => Some(Self {has_bottle_0: false, has_bottle_1: false, has_bottle_2: true}),
      7 => Some(Self {has_bottle_0: false, has_bottle_1: false, has_bottle_2: false}),
      _ => None,
    }
  }
  pub fn to_offset(self) -> usize {
    match self.has_bottle_0 {
      true => match self.has_bottle_1 {
        true => match self.has_bottle_2 {
          true => 0,
          false => 1,
        },
        false => match self.has_bottle_2 {
          true => 2,
          false => 3,
        },
      },
      false => match self.has_bottle_1 {
        true => match self.has_bottle_2 {
          true => 4,
          false => 5,
        },
        false => match self.has_bottle_2 {
          true => 6,
          false => 7,
        },
      },
    }
  }
}
impl Default for BrewingStandData {
  fn default() -> Self {
    Self {has_bottle_0: false, has_bottle_1: false, has_bottle_2: false}
  }
}
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]
pub struct CauldronData {
  pub level: NumberFrom0To3Property,
}
impl CauldronData {
  pub fn from_offset(offset: usize) -> Option<Self> {
    match offset {
      0 => Some(Self {level: NumberFrom0To3Property::new(0)}),
      1 => Some(Self {level: NumberFrom0To3Property::new(1)}),
      2 => Some(Self {level: NumberFrom0To3Property::new(2)}),
      3 => Some(Self {level: NumberFrom0To3Property::new(3)}),
      _ => None,
    }
  }
  pub fn to_offset(self) -> usize {
    match self.level.value() {
      0 => 0,
      1 => 1,
      2 => 2,
      3 => 3,
      _ => panic!("Illegal Block State"),
    }
  }
}
impl Default for CauldronData {
  fn default() -> Self {
    Self {level: NumberFrom0To3Property::new(0)}
  }
}
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]
pub struct EndPortalFrameData {
  pub eye: bool,
  pub facing: CardinalFacingProperty,
}
impl EndPortalFrameData {
  pub fn from_offset(offset: usize) -> Option<Self> {
    match offset {
      0 => Some(Self {eye: true, facing: CardinalFacingProperty::North}),
      1 => Some(Self {eye: true, facing: CardinalFacingProperty::South}),
      2 => Some(Self {eye: true, facing: CardinalFacingProperty::West}),
      3 => Some(Self {eye: true, facing: CardinalFacingProperty::East}),
      4 => Some(Self {eye: false, facing: CardinalFacingProperty::North}),
      5 => Some(Self {eye: false, facing: CardinalFacingProperty::South}),
      6 => Some(Self {eye: false, facing: CardinalFacingProperty::West}),
      7 => Some(Self {eye: false, facing: CardinalFacingProperty::East}),
      _ => None,
    }
  }
  pub fn to_offset(self) -> usize {
    match self.eye {
      true => match self.facing {
        CardinalFacingProperty::North => 0,
        CardinalFacingProperty::South => 1,
        CardinalFacingProperty::West => 2,
        CardinalFacingProperty::East => 3,
      },
      false => match self.facing {
        CardinalFacingProperty::North => 4,
        CardinalFacingProperty::South => 5,
        CardinalFacingProperty::West => 6,
        CardinalFacingProperty::East => 7,
      },
    }
  }
}
impl Default for EndPortalFrameData {
  fn default() -> Self {
    Self {eye: false, facing: CardinalFacingProperty::North}
  }
}
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]
pub struct RedstoneLampData {
  pub lit: bool,
}
impl RedstoneLampData {
  pub fn from_offset(offset: usize) -> Option<Self> {
    match offset {
      0 => Some(Self {lit: true}),
      1 => Some(Self {lit: false}),
      _ => None,
    }
  }
  pub fn to_offset(self) -> usize {
    match self.lit {
      true => 0,
      false => 1,
    }
  }
}
impl Default for RedstoneLampData {
  fn default() -> Self {
    Self {lit: false}
  }
}
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]
pub struct CocoaData {
  pub age: NumberFrom0To2Property,
  pub facing: CardinalFacingProperty,
}
impl CocoaData {
  pub fn from_offset(offset: usize) -> Option<Self> {
    match offset {
      0 => Some(Self {age: NumberFrom0To2Property::new(0), facing: CardinalFacingProperty::North}),
      1 => Some(Self {age: NumberFrom0To2Property::new(0), facing: CardinalFacingProperty::South}),
      2 => Some(Self {age: NumberFrom0To2Property::new(0), facing: CardinalFacingProperty::West}),
      3 => Some(Self {age: NumberFrom0To2Property::new(0), facing: CardinalFacingProperty::East}),
      4 => Some(Self {age: NumberFrom0To2Property::new(1), facing: CardinalFacingProperty::North}),
      5 => Some(Self {age: NumberFrom0To2Property::new(1), facing: CardinalFacingProperty::South}),
      6 => Some(Self {age: NumberFrom0To2Property::new(1), facing: CardinalFacingProperty::West}),
      7 => Some(Self {age: NumberFrom0To2Property::new(1), facing: CardinalFacingProperty::East}),
      8 => Some(Self {age: NumberFrom0To2Property::new(2), facing: CardinalFacingProperty::North}),
      9 => Some(Self {age: NumberFrom0To2Property::new(2), facing: CardinalFacingProperty::South}),
      10 => Some(Self {age: NumberFrom0To2Property::new(2), facing: CardinalFacingProperty::West}),
      11 => Some(Self {age: NumberFrom0To2Property::new(2), facing: CardinalFacingProperty::East}),
      _ => None,
    }
  }
  pub fn to_offset(self) -> usize {
    match self.age.value() {
      0 => match self.facing {
        CardinalFacingProperty::North => 0,
        CardinalFacingProperty::South => 1,
        CardinalFacingProperty::West => 2,
        CardinalFacingProperty::East => 3,
      },
      1 => match self.facing {
        CardinalFacingProperty::North => 4,
        CardinalFacingProperty::South => 5,
        CardinalFacingProperty::West => 6,
        CardinalFacingProperty::East => 7,
      },
      2 => match self.facing {
        CardinalFacingProperty::North => 8,
        CardinalFacingProperty::South => 9,
        CardinalFacingProperty::West => 10,
        CardinalFacingProperty::East => 11,
      },
      _ => panic!("Illegal Block State"),
    }
  }
}
impl Default for CocoaData {
  fn default() -> Self {
    Self {age: NumberFrom0To2Property::new(0), facing: CardinalFacingProperty::North}
  }
}
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]
pub struct EnderChestData {
  pub facing: CardinalFacingProperty,
  pub waterlogged: bool,
}
impl EnderChestData {
  pub fn from_offset(offset: usize) -> Option<Self> {
    match offset {
      0 => Some(Self {facing: CardinalFacingProperty::North, waterlogged: true}),
      1 => Some(Self {facing: CardinalFacingProperty::North, waterlogged: false}),
      2 => Some(Self {facing: CardinalFacingProperty::South, waterlogged: true}),
      3 => Some(Self {facing: CardinalFacingProperty::South, waterlogged: false}),
      4 => Some(Self {facing: CardinalFacingProperty::West, waterlogged: true}),
      5 => Some(Self {facing: CardinalFacingProperty::West, waterlogged: false}),
      6 => Some(Self {facing: CardinalFacingProperty::East, waterlogged: true}),
      7 => Some(Self {facing: CardinalFacingProperty::East, waterlogged: false}),
      _ => None,
    }
  }
  pub fn to_offset(self) -> usize {
    match self.facing {
      CardinalFacingProperty::North => match self.waterlogged {
        true => 0,
        false => 1,
      },
      CardinalFacingProperty::South => match self.waterlogged {
        true => 2,
        false => 3,
      },
      CardinalFacingProperty::West => match self.waterlogged {
        true => 4,
        false => 5,
      },
      CardinalFacingProperty::East => match self.waterlogged {
        true => 6,
        false => 7,
      },
    }
  }
}
impl Default for EnderChestData {
  fn default() -> Self {
    Self {facing: CardinalFacingProperty::North, waterlogged: false}
  }
}
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]
pub struct TripwireHookData {
  pub attached: bool,
  pub facing: CardinalFacingProperty,
  pub powered: bool,
}
impl TripwireHookData {
  pub fn from_offset(offset: usize) -> Option<Self> {
    match offset {
      0 => Some(Self {attached: true, facing: CardinalFacingProperty::North, powered: true}),
      1 => Some(Self {attached: true, facing: CardinalFacingProperty::North, powered: false}),
      2 => Some(Self {attached: true, facing: CardinalFacingProperty::South, powered: true}),
      3 => Some(Self {attached: true, facing: CardinalFacingProperty::South, powered: false}),
      4 => Some(Self {attached: true, facing: CardinalFacingProperty::West, powered: true}),
      5 => Some(Self {attached: true, facing: CardinalFacingProperty::West, powered: false}),
      6 => Some(Self {attached: true, facing: CardinalFacingProperty::East, powered: true}),
      7 => Some(Self {attached: true, facing: CardinalFacingProperty::East, powered: false}),
      8 => Some(Self {attached: false, facing: CardinalFacingProperty::North, powered: true}),
      9 => Some(Self {attached: false, facing: CardinalFacingProperty::North, powered: false}),
      10 => Some(Self {attached: false, facing: CardinalFacingProperty::South, powered: true}),
      11 => Some(Self {attached: false, facing: CardinalFacingProperty::South, powered: false}),
      12 => Some(Self {attached: false, facing: CardinalFacingProperty::West, powered: true}),
      13 => Some(Self {attached: false, facing: CardinalFacingProperty::West, powered: false}),
      14 => Some(Self {attached: false, facing: CardinalFacingProperty::East, powered: true}),
      15 => Some(Self {attached: false, facing: CardinalFacingProperty::East, powered: false}),
      _ => None,
    }
  }
  pub fn to_offset(self) -> usize {
    match self.attached {
      true => match self.facing {
        CardinalFacingProperty::North => match self.powered {
          true => 0,
          false => 1,
        },
        CardinalFacingProperty::South => match self.powered {
          true => 2,
          false => 3,
        },
        CardinalFacingProperty::West => match self.powered {
          true => 4,
          false => 5,
        },
        CardinalFacingProperty::East => match self.powered {
          true => 6,
          false => 7,
        },
      },
      false => match self.facing {
        CardinalFacingProperty::North => match self.powered {
          true => 8,
          false => 9,
        },
        CardinalFacingProperty::South => match self.powered {
          true => 10,
          false => 11,
        },
        CardinalFacingProperty::West => match self.powered {
          true => 12,
          false => 13,
        },
        CardinalFacingProperty::East => match self.powered {
          true => 14,
          false => 15,
        },
      },
    }
  }
}
impl Default for TripwireHookData {
  fn default() -> Self {
    Self {attached: false, facing: CardinalFacingProperty::North, powered: false}
  }
}
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]
pub struct TripwireData {
  pub attached: bool,
  pub disarmed: bool,
  pub east: bool,
  pub north: bool,
  pub powered: bool,
  pub south: bool,
  pub west: bool,
}
impl TripwireData {
  pub fn from_offset(offset: usize) -> Option<Self> {
    match offset {
      0 => Some(Self {attached: true, disarmed: true, east: true, north: true, powered: true, south: true, west: true}),
      1 => Some(Self {attached: true, disarmed: true, east: true, north: true, powered: true, south: true, west: false}),
      2 => Some(Self {attached: true, disarmed: true, east: true, north: true, powered: true, south: false, west: true}),
      3 => Some(Self {attached: true, disarmed: true, east: true, north: true, powered: true, south: false, west: false}),
      4 => Some(Self {attached: true, disarmed: true, east: true, north: true, powered: false, south: true, west: true}),
      5 => Some(Self {attached: true, disarmed: true, east: true, north: true, powered: false, south: true, west: false}),
      6 => Some(Self {attached: true, disarmed: true, east: true, north: true, powered: false, south: false, west: true}),
      7 => Some(Self {attached: true, disarmed: true, east: true, north: true, powered: false, south: false, west: false}),
      8 => Some(Self {attached: true, disarmed: true, east: true, north: false, powered: true, south: true, west: true}),
      9 => Some(Self {attached: true, disarmed: true, east: true, north: false, powered: true, south: true, west: false}),
      10 => Some(Self {attached: true, disarmed: true, east: true, north: false, powered: true, south: false, west: true}),
      11 => Some(Self {attached: true, disarmed: true, east: true, north: false, powered: true, south: false, west: false}),
      12 => Some(Self {attached: true, disarmed: true, east: true, north: false, powered: false, south: true, west: true}),
      13 => Some(Self {attached: true, disarmed: true, east: true, north: false, powered: false, south: true, west: false}),
      14 => Some(Self {attached: true, disarmed: true, east: true, north: false, powered: false, south: false, west: true}),
      15 => Some(Self {attached: true, disarmed: true, east: true, north: false, powered: false, south: false, west: false}),
      16 => Some(Self {attached: true, disarmed: true, east: false, north: true, powered: true, south: true, west: true}),
      17 => Some(Self {attached: true, disarmed: true, east: false, north: true, powered: true, south: true, west: false}),
      18 => Some(Self {attached: true, disarmed: true, east: false, north: true, powered: true, south: false, west: true}),
      19 => Some(Self {attached: true, disarmed: true, east: false, north: true, powered: true, south: false, west: false}),
      20 => Some(Self {attached: true, disarmed: true, east: false, north: true, powered: false, south: true, west: true}),
      21 => Some(Self {attached: true, disarmed: true, east: false, north: true, powered: false, south: true, west: false}),
      22 => Some(Self {attached: true, disarmed: true, east: false, north: true, powered: false, south: false, west: true}),
      23 => Some(Self {attached: true, disarmed: true, east: false, north: true, powered: false, south: false, west: false}),
      24 => Some(Self {attached: true, disarmed: true, east: false, north: false, powered: true, south: true, west: true}),
      25 => Some(Self {attached: true, disarmed: true, east: false, north: false, powered: true, south: true, west: false}),
      26 => Some(Self {attached: true, disarmed: true, east: false, north: false, powered: true, south: false, west: true}),
      27 => Some(Self {attached: true, disarmed: true, east: false, north: false, powered: true, south: false, west: false}),
      28 => Some(Self {attached: true, disarmed: true, east: false, north: false, powered: false, south: true, west: true}),
      29 => Some(Self {attached: true, disarmed: true, east: false, north: false, powered: false, south: true, west: false}),
      30 => Some(Self {attached: true, disarmed: true, east: false, north: false, powered: false, south: false, west: true}),
      31 => Some(Self {attached: true, disarmed: true, east: false, north: false, powered: false, south: false, west: false}),
      32 => Some(Self {attached: true, disarmed: false, east: true, north: true, powered: true, south: true, west: true}),
      33 => Some(Self {attached: true, disarmed: false, east: true, north: true, powered: true, south: true, west: false}),
      34 => Some(Self {attached: true, disarmed: false, east: true, north: true, powered: true, south: false, west: true}),
      35 => Some(Self {attached: true, disarmed: false, east: true, north: true, powered: true, south: false, west: false}),
      36 => Some(Self {attached: true, disarmed: false, east: true, north: true, powered: false, south: true, west: true}),
      37 => Some(Self {attached: true, disarmed: false, east: true, north: true, powered: false, south: true, west: false}),
      38 => Some(Self {attached: true, disarmed: false, east: true, north: true, powered: false, south: false, west: true}),
      39 => Some(Self {attached: true, disarmed: false, east: true, north: true, powered: false, south: false, west: false}),
      40 => Some(Self {attached: true, disarmed: false, east: true, north: false, powered: true, south: true, west: true}),
      41 => Some(Self {attached: true, disarmed: false, east: true, north: false, powered: true, south: true, west: false}),
      42 => Some(Self {attached: true, disarmed: false, east: true, north: false, powered: true, south: false, west: true}),
      43 => Some(Self {attached: true, disarmed: false, east: true, north: false, powered: true, south: false, west: false}),
      44 => Some(Self {attached: true, disarmed: false, east: true, north: false, powered: false, south: true, west: true}),
      45 => Some(Self {attached: true, disarmed: false, east: true, north: false, powered: false, south: true, west: false}),
      46 => Some(Self {attached: true, disarmed: false, east: true, north: false, powered: false, south: false, west: true}),
      47 => Some(Self {attached: true, disarmed: false, east: true, north: false, powered: false, south: false, west: false}),
      48 => Some(Self {attached: true, disarmed: false, east: false, north: true, powered: true, south: true, west: true}),
      49 => Some(Self {attached: true, disarmed: false, east: false, north: true, powered: true, south: true, west: false}),
      50 => Some(Self {attached: true, disarmed: false, east: false, north: true, powered: true, south: false, west: true}),
      51 => Some(Self {attached: true, disarmed: false, east: false, north: true, powered: true, south: false, west: false}),
      52 => Some(Self {attached: true, disarmed: false, east: false, north: true, powered: false, south: true, west: true}),
      53 => Some(Self {attached: true, disarmed: false, east: false, north: true, powered: false, south: true, west: false}),
      54 => Some(Self {attached: true, disarmed: false, east: false, north: true, powered: false, south: false, west: true}),
      55 => Some(Self {attached: true, disarmed: false, east: false, north: true, powered: false, south: false, west: false}),
      56 => Some(Self {attached: true, disarmed: false, east: false, north: false, powered: true, south: true, west: true}),
      57 => Some(Self {attached: true, disarmed: false, east: false, north: false, powered: true, south: true, west: false}),
      58 => Some(Self {attached: true, disarmed: false, east: false, north: false, powered: true, south: false, west: true}),
      59 => Some(Self {attached: true, disarmed: false, east: false, north: false, powered: true, south: false, west: false}),
      60 => Some(Self {attached: true, disarmed: false, east: false, north: false, powered: false, south: true, west: true}),
      61 => Some(Self {attached: true, disarmed: false, east: false, north: false, powered: false, south: true, west: false}),
      62 => Some(Self {attached: true, disarmed: false, east: false, north: false, powered: false, south: false, west: true}),
      63 => Some(Self {attached: true, disarmed: false, east: false, north: false, powered: false, south: false, west: false}),
      64 => Some(Self {attached: false, disarmed: true, east: true, north: true, powered: true, south: true, west: true}),
      65 => Some(Self {attached: false, disarmed: true, east: true, north: true, powered: true, south: true, west: false}),
      66 => Some(Self {attached: false, disarmed: true, east: true, north: true, powered: true, south: false, west: true}),
      67 => Some(Self {attached: false, disarmed: true, east: true, north: true, powered: true, south: false, west: false}),
      68 => Some(Self {attached: false, disarmed: true, east: true, north: true, powered: false, south: true, west: true}),
      69 => Some(Self {attached: false, disarmed: true, east: true, north: true, powered: false, south: true, west: false}),
      70 => Some(Self {attached: false, disarmed: true, east: true, north: true, powered: false, south: false, west: true}),
      71 => Some(Self {attached: false, disarmed: true, east: true, north: true, powered: false, south: false, west: false}),
      72 => Some(Self {attached: false, disarmed: true, east: true, north: false, powered: true, south: true, west: true}),
      73 => Some(Self {attached: false, disarmed: true, east: true, north: false, powered: true, south: true, west: false}),
      74 => Some(Self {attached: false, disarmed: true, east: true, north: false, powered: true, south: false, west: true}),
      75 => Some(Self {attached: false, disarmed: true, east: true, north: false, powered: true, south: false, west: false}),
      76 => Some(Self {attached: false, disarmed: true, east: true, north: false, powered: false, south: true, west: true}),
      77 => Some(Self {attached: false, disarmed: true, east: true, north: false, powered: false, south: true, west: false}),
      78 => Some(Self {attached: false, disarmed: true, east: true, north: false, powered: false, south: false, west: true}),
      79 => Some(Self {attached: false, disarmed: true, east: true, north: false, powered: false, south: false, west: false}),
      80 => Some(Self {attached: false, disarmed: true, east: false, north: true, powered: true, south: true, west: true}),
      81 => Some(Self {attached: false, disarmed: true, east: false, north: true, powered: true, south: true, west: false}),
      82 => Some(Self {attached: false, disarmed: true, east: false, north: true, powered: true, south: false, west: true}),
      83 => Some(Self {attached: false, disarmed: true, east: false, north: true, powered: true, south: false, west: false}),
      84 => Some(Self {attached: false, disarmed: true, east: false, north: true, powered: false, south: true, west: true}),
      85 => Some(Self {attached: false, disarmed: true, east: false, north: true, powered: false, south: true, west: false}),
      86 => Some(Self {attached: false, disarmed: true, east: false, north: true, powered: false, south: false, west: true}),
      87 => Some(Self {attached: false, disarmed: true, east: false, north: true, powered: false, south: false, west: false}),
      88 => Some(Self {attached: false, disarmed: true, east: false, north: false, powered: true, south: true, west: true}),
      89 => Some(Self {attached: false, disarmed: true, east: false, north: false, powered: true, south: true, west: false}),
      90 => Some(Self {attached: false, disarmed: true, east: false, north: false, powered: true, south: false, west: true}),
      91 => Some(Self {attached: false, disarmed: true, east: false, north: false, powered: true, south: false, west: false}),
      92 => Some(Self {attached: false, disarmed: true, east: false, north: false, powered: false, south: true, west: true}),
      93 => Some(Self {attached: false, disarmed: true, east: false, north: false, powered: false, south: true, west: false}),
      94 => Some(Self {attached: false, disarmed: true, east: false, north: false, powered: false, south: false, west: true}),
      95 => Some(Self {attached: false, disarmed: true, east: false, north: false, powered: false, south: false, west: false}),
      96 => Some(Self {attached: false, disarmed: false, east: true, north: true, powered: true, south: true, west: true}),
      97 => Some(Self {attached: false, disarmed: false, east: true, north: true, powered: true, south: true, west: false}),
      98 => Some(Self {attached: false, disarmed: false, east: true, north: true, powered: true, south: false, west: true}),
      99 => Some(Self {attached: false, disarmed: false, east: true, north: true, powered: true, south: false, west: false}),
      100 => Some(Self {attached: false, disarmed: false, east: true, north: true, powered: false, south: true, west: true}),
      101 => Some(Self {attached: false, disarmed: false, east: true, north: true, powered: false, south: true, west: false}),
      102 => Some(Self {attached: false, disarmed: false, east: true, north: true, powered: false, south: false, west: true}),
      103 => Some(Self {attached: false, disarmed: false, east: true, north: true, powered: false, south: false, west: false}),
      104 => Some(Self {attached: false, disarmed: false, east: true, north: false, powered: true, south: true, west: true}),
      105 => Some(Self {attached: false, disarmed: false, east: true, north: false, powered: true, south: true, west: false}),
      106 => Some(Self {attached: false, disarmed: false, east: true, north: false, powered: true, south: false, west: true}),
      107 => Some(Self {attached: false, disarmed: false, east: true, north: false, powered: true, south: false, west: false}),
      108 => Some(Self {attached: false, disarmed: false, east: true, north: false, powered: false, south: true, west: true}),
      109 => Some(Self {attached: false, disarmed: false, east: true, north: false, powered: false, south: true, west: false}),
      110 => Some(Self {attached: false, disarmed: false, east: true, north: false, powered: false, south: false, west: true}),
      111 => Some(Self {attached: false, disarmed: false, east: true, north: false, powered: false, south: false, west: false}),
      112 => Some(Self {attached: false, disarmed: false, east: false, north: true, powered: true, south: true, west: true}),
      113 => Some(Self {attached: false, disarmed: false, east: false, north: true, powered: true, south: true, west: false}),
      114 => Some(Self {attached: false, disarmed: false, east: false, north: true, powered: true, south: false, west: true}),
      115 => Some(Self {attached: false, disarmed: false, east: false, north: true, powered: true, south: false, west: false}),
      116 => Some(Self {attached: false, disarmed: false, east: false, north: true, powered: false, south: true, west: true}),
      117 => Some(Self {attached: false, disarmed: false, east: false, north: true, powered: false, south: true, west: false}),
      118 => Some(Self {attached: false, disarmed: false, east: false, north: true, powered: false, south: false, west: true}),
      119 => Some(Self {attached: false, disarmed: false, east: false, north: true, powered: false, south: false, west: false}),
      120 => Some(Self {attached: false, disarmed: false, east: false, north: false, powered: true, south: true, west: true}),
      121 => Some(Self {attached: false, disarmed: false, east: false, north: false, powered: true, south: true, west: false}),
      122 => Some(Self {attached: false, disarmed: false, east: false, north: false, powered: true, south: false, west: true}),
      123 => Some(Self {attached: false, disarmed: false, east: false, north: false, powered: true, south: false, west: false}),
      124 => Some(Self {attached: false, disarmed: false, east: false, north: false, powered: false, south: true, west: true}),
      125 => Some(Self {attached: false, disarmed: false, east: false, north: false, powered: false, south: true, west: false}),
      126 => Some(Self {attached: false, disarmed: false, east: false, north: false, powered: false, south: false, west: true}),
      127 => Some(Self {attached: false, disarmed: false, east: false, north: false, powered: false, south: false, west: false}),
      _ => None,
    }
  }
  pub fn to_offset(self) -> usize {
    match self.attached {
      true => match self.disarmed {
        true => match self.east {
          true => match self.north {
            true => match self.powered {
              true => match self.south {
                true => match self.west {
                  true => 0,
                  false => 1,
                },
                false => match self.west {
                  true => 2,
                  false => 3,
                },
              },
              false => match self.south {
                true => match self.west {
                  true => 4,
                  false => 5,
                },
                false => match self.west {
                  true => 6,
                  false => 7,
                },
              },
            },
            false => match self.powered {
              true => match self.south {
                true => match self.west {
                  true => 8,
                  false => 9,
                },
                false => match self.west {
                  true => 10,
                  false => 11,
                },
              },
              false => match self.south {
                true => match self.west {
                  true => 12,
                  false => 13,
                },
                false => match self.west {
                  true => 14,
                  false => 15,
                },
              },
            },
          },
          false => match self.north {
            true => match self.powered {
              true => match self.south {
                true => match self.west {
                  true => 16,
                  false => 17,
                },
                false => match self.west {
                  true => 18,
                  false => 19,
                },
              },
              false => match self.south {
                true => match self.west {
                  true => 20,
                  false => 21,
                },
                false => match self.west {
                  true => 22,
                  false => 23,
                },
              },
            },
            false => match self.powered {
              true => match self.south {
                true => match self.west {
                  true => 24,
                  false => 25,
                },
                false => match self.west {
                  true => 26,
                  false => 27,
                },
              },
              false => match self.south {
                true => match self.west {
                  true => 28,
                  false => 29,
                },
                false => match self.west {
                  true => 30,
                  false => 31,
                },
              },
            },
          },
        },
        false => match self.east {
          true => match self.north {
            true => match self.powered {
              true => match self.south {
                true => match self.west {
                  true => 32,
                  false => 33,
                },
                false => match self.west {
                  true => 34,
                  false => 35,
                },
              },
              false => match self.south {
                true => match self.west {
                  true => 36,
                  false => 37,
                },
                false => match self.west {
                  true => 38,
                  false => 39,
                },
              },
            },
            false => match self.powered {
              true => match self.south {
                true => match self.west {
                  true => 40,
                  false => 41,
                },
                false => match self.west {
                  true => 42,
                  false => 43,
                },
              },
              false => match self.south {
                true => match self.west {
                  true => 44,
                  false => 45,
                },
                false => match self.west {
                  true => 46,
                  false => 47,
                },
              },
            },
          },
          false => match self.north {
            true => match self.powered {
              true => match self.south {
                true => match self.west {
                  true => 48,
                  false => 49,
                },
                false => match self.west {
                  true => 50,
                  false => 51,
                },
              },
              false => match self.south {
                true => match self.west {
                  true => 52,
                  false => 53,
                },
                false => match self.west {
                  true => 54,
                  false => 55,
                },
              },
            },
            false => match self.powered {
              true => match self.south {
                true => match self.west {
                  true => 56,
                  false => 57,
                },
                false => match self.west {
                  true => 58,
                  false => 59,
                },
              },
              false => match self.south {
                true => match self.west {
                  true => 60,
                  false => 61,
                },
                false => match self.west {
                  true => 62,
                  false => 63,
                },
              },
            },
          },
        },
      },
      false => match self.disarmed {
        true => match self.east {
          true => match self.north {
            true => match self.powered {
              true => match self.south {
                true => match self.west {
                  true => 64,
                  false => 65,
                },
                false => match self.west {
                  true => 66,
                  false => 67,
                },
              },
              false => match self.south {
                true => match self.west {
                  true => 68,
                  false => 69,
                },
                false => match self.west {
                  true => 70,
                  false => 71,
                },
              },
            },
            false => match self.powered {
              true => match self.south {
                true => match self.west {
                  true => 72,
                  false => 73,
                },
                false => match self.west {
                  true => 74,
                  false => 75,
                },
              },
              false => match self.south {
                true => match self.west {
                  true => 76,
                  false => 77,
                },
                false => match self.west {
                  true => 78,
                  false => 79,
                },
              },
            },
          },
          false => match self.north {
            true => match self.powered {
              true => match self.south {
                true => match self.west {
                  true => 80,
                  false => 81,
                },
                false => match self.west {
                  true => 82,
                  false => 83,
                },
              },
              false => match self.south {
                true => match self.west {
                  true => 84,
                  false => 85,
                },
                false => match self.west {
                  true => 86,
                  false => 87,
                },
              },
            },
            false => match self.powered {
              true => match self.south {
                true => match self.west {
                  true => 88,
                  false => 89,
                },
                false => match self.west {
                  true => 90,
                  false => 91,
                },
              },
              false => match self.south {
                true => match self.west {
                  true => 92,
                  false => 93,
                },
                false => match self.west {
                  true => 94,
                  false => 95,
                },
              },
            },
          },
        },
        false => match self.east {
          true => match self.north {
            true => match self.powered {
              true => match self.south {
                true => match self.west {
                  true => 96,
                  false => 97,
                },
                false => match self.west {
                  true => 98,
                  false => 99,
                },
              },
              false => match self.south {
                true => match self.west {
                  true => 100,
                  false => 101,
                },
                false => match self.west {
                  true => 102,
                  false => 103,
                },
              },
            },
            false => match self.powered {
              true => match self.south {
                true => match self.west {
                  true => 104,
                  false => 105,
                },
                false => match self.west {
                  true => 106,
                  false => 107,
                },
              },
              false => match self.south {
                true => match self.west {
                  true => 108,
                  false => 109,
                },
                false => match self.west {
                  true => 110,
                  false => 111,
                },
              },
            },
          },
          false => match self.north {
            true => match self.powered {
              true => match self.south {
                true => match self.west {
                  true => 112,
                  false => 113,
                },
                false => match self.west {
                  true => 114,
                  false => 115,
                },
              },
              false => match self.south {
                true => match self.west {
                  true => 116,
                  false => 117,
                },
                false => match self.west {
                  true => 118,
                  false => 119,
                },
              },
            },
            false => match self.powered {
              true => match self.south {
                true => match self.west {
                  true => 120,
                  false => 121,
                },
                false => match self.west {
                  true => 122,
                  false => 123,
                },
              },
              false => match self.south {
                true => match self.west {
                  true => 124,
                  false => 125,
                },
                false => match self.west {
                  true => 126,
                  false => 127,
                },
              },
            },
          },
        },
      },
    }
  }
}
impl Default for TripwireData {
  fn default() -> Self {
    Self {attached: false, disarmed: false, east: false, north: false, powered: false, south: false, west: false}
  }
}
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]
pub struct CommandBlockData {
  pub conditional: bool,
  pub facing: BlockFacingProperty,
}
impl CommandBlockData {
  pub fn from_offset(offset: usize) -> Option<Self> {
    match offset {
      0 => Some(Self {conditional: true, facing: BlockFacingProperty::North}),
      1 => Some(Self {conditional: true, facing: BlockFacingProperty::East}),
      2 => Some(Self {conditional: true, facing: BlockFacingProperty::South}),
      3 => Some(Self {conditional: true, facing: BlockFacingProperty::West}),
      4 => Some(Self {conditional: true, facing: BlockFacingProperty::Up}),
      5 => Some(Self {conditional: true, facing: BlockFacingProperty::Down}),
      6 => Some(Self {conditional: false, facing: BlockFacingProperty::North}),
      7 => Some(Self {conditional: false, facing: BlockFacingProperty::East}),
      8 => Some(Self {conditional: false, facing: BlockFacingProperty::South}),
      9 => Some(Self {conditional: false, facing: BlockFacingProperty::West}),
      10 => Some(Self {conditional: false, facing: BlockFacingProperty::Up}),
      11 => Some(Self {conditional: false, facing: BlockFacingProperty::Down}),
      _ => None,
    }
  }
  pub fn to_offset(self) -> usize {
    match self.conditional {
      true => match self.facing {
        BlockFacingProperty::North => 0,
        BlockFacingProperty::East => 1,
        BlockFacingProperty::South => 2,
        BlockFacingProperty::West => 3,
        BlockFacingProperty::Up => 4,
        BlockFacingProperty::Down => 5,
      },
      false => match self.facing {
        BlockFacingProperty::North => 6,
        BlockFacingProperty::East => 7,
        BlockFacingProperty::South => 8,
        BlockFacingProperty::West => 9,
        BlockFacingProperty::Up => 10,
        BlockFacingProperty::Down => 11,
      },
    }
  }
}
impl Default for CommandBlockData {
  fn default() -> Self {
    Self {conditional: false, facing: BlockFacingProperty::North}
  }
}
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]
pub struct WallData {
  pub east: bool,
  pub north: bool,
  pub south: bool,
  pub up: bool,
  pub waterlogged: bool,
  pub west: bool,
}
impl WallData {
  pub fn from_offset(offset: usize) -> Option<Self> {
    match offset {
      0 => Some(Self {east: true, north: true, south: true, up: true, waterlogged: true, west: true}),
      1 => Some(Self {east: true, north: true, south: true, up: true, waterlogged: true, west: false}),
      2 => Some(Self {east: true, north: true, south: true, up: true, waterlogged: false, west: true}),
      3 => Some(Self {east: true, north: true, south: true, up: true, waterlogged: false, west: false}),
      4 => Some(Self {east: true, north: true, south: true, up: false, waterlogged: true, west: true}),
      5 => Some(Self {east: true, north: true, south: true, up: false, waterlogged: true, west: false}),
      6 => Some(Self {east: true, north: true, south: true, up: false, waterlogged: false, west: true}),
      7 => Some(Self {east: true, north: true, south: true, up: false, waterlogged: false, west: false}),
      8 => Some(Self {east: true, north: true, south: false, up: true, waterlogged: true, west: true}),
      9 => Some(Self {east: true, north: true, south: false, up: true, waterlogged: true, west: false}),
      10 => Some(Self {east: true, north: true, south: false, up: true, waterlogged: false, west: true}),
      11 => Some(Self {east: true, north: true, south: false, up: true, waterlogged: false, west: false}),
      12 => Some(Self {east: true, north: true, south: false, up: false, waterlogged: true, west: true}),
      13 => Some(Self {east: true, north: true, south: false, up: false, waterlogged: true, west: false}),
      14 => Some(Self {east: true, north: true, south: false, up: false, waterlogged: false, west: true}),
      15 => Some(Self {east: true, north: true, south: false, up: false, waterlogged: false, west: false}),
      16 => Some(Self {east: true, north: false, south: true, up: true, waterlogged: true, west: true}),
      17 => Some(Self {east: true, north: false, south: true, up: true, waterlogged: true, west: false}),
      18 => Some(Self {east: true, north: false, south: true, up: true, waterlogged: false, west: true}),
      19 => Some(Self {east: true, north: false, south: true, up: true, waterlogged: false, west: false}),
      20 => Some(Self {east: true, north: false, south: true, up: false, waterlogged: true, west: true}),
      21 => Some(Self {east: true, north: false, south: true, up: false, waterlogged: true, west: false}),
      22 => Some(Self {east: true, north: false, south: true, up: false, waterlogged: false, west: true}),
      23 => Some(Self {east: true, north: false, south: true, up: false, waterlogged: false, west: false}),
      24 => Some(Self {east: true, north: false, south: false, up: true, waterlogged: true, west: true}),
      25 => Some(Self {east: true, north: false, south: false, up: true, waterlogged: true, west: false}),
      26 => Some(Self {east: true, north: false, south: false, up: true, waterlogged: false, west: true}),
      27 => Some(Self {east: true, north: false, south: false, up: true, waterlogged: false, west: false}),
      28 => Some(Self {east: true, north: false, south: false, up: false, waterlogged: true, west: true}),
      29 => Some(Self {east: true, north: false, south: false, up: false, waterlogged: true, west: false}),
      30 => Some(Self {east: true, north: false, south: false, up: false, waterlogged: false, west: true}),
      31 => Some(Self {east: true, north: false, south: false, up: false, waterlogged: false, west: false}),
      32 => Some(Self {east: false, north: true, south: true, up: true, waterlogged: true, west: true}),
      33 => Some(Self {east: false, north: true, south: true, up: true, waterlogged: true, west: false}),
      34 => Some(Self {east: false, north: true, south: true, up: true, waterlogged: false, west: true}),
      35 => Some(Self {east: false, north: true, south: true, up: true, waterlogged: false, west: false}),
      36 => Some(Self {east: false, north: true, south: true, up: false, waterlogged: true, west: true}),
      37 => Some(Self {east: false, north: true, south: true, up: false, waterlogged: true, west: false}),
      38 => Some(Self {east: false, north: true, south: true, up: false, waterlogged: false, west: true}),
      39 => Some(Self {east: false, north: true, south: true, up: false, waterlogged: false, west: false}),
      40 => Some(Self {east: false, north: true, south: false, up: true, waterlogged: true, west: true}),
      41 => Some(Self {east: false, north: true, south: false, up: true, waterlogged: true, west: false}),
      42 => Some(Self {east: false, north: true, south: false, up: true, waterlogged: false, west: true}),
      43 => Some(Self {east: false, north: true, south: false, up: true, waterlogged: false, west: false}),
      44 => Some(Self {east: false, north: true, south: false, up: false, waterlogged: true, west: true}),
      45 => Some(Self {east: false, north: true, south: false, up: false, waterlogged: true, west: false}),
      46 => Some(Self {east: false, north: true, south: false, up: false, waterlogged: false, west: true}),
      47 => Some(Self {east: false, north: true, south: false, up: false, waterlogged: false, west: false}),
      48 => Some(Self {east: false, north: false, south: true, up: true, waterlogged: true, west: true}),
      49 => Some(Self {east: false, north: false, south: true, up: true, waterlogged: true, west: false}),
      50 => Some(Self {east: false, north: false, south: true, up: true, waterlogged: false, west: true}),
      51 => Some(Self {east: false, north: false, south: true, up: true, waterlogged: false, west: false}),
      52 => Some(Self {east: false, north: false, south: true, up: false, waterlogged: true, west: true}),
      53 => Some(Self {east: false, north: false, south: true, up: false, waterlogged: true, west: false}),
      54 => Some(Self {east: false, north: false, south: true, up: false, waterlogged: false, west: true}),
      55 => Some(Self {east: false, north: false, south: true, up: false, waterlogged: false, west: false}),
      56 => Some(Self {east: false, north: false, south: false, up: true, waterlogged: true, west: true}),
      57 => Some(Self {east: false, north: false, south: false, up: true, waterlogged: true, west: false}),
      58 => Some(Self {east: false, north: false, south: false, up: true, waterlogged: false, west: true}),
      59 => Some(Self {east: false, north: false, south: false, up: true, waterlogged: false, west: false}),
      60 => Some(Self {east: false, north: false, south: false, up: false, waterlogged: true, west: true}),
      61 => Some(Self {east: false, north: false, south: false, up: false, waterlogged: true, west: false}),
      62 => Some(Self {east: false, north: false, south: false, up: false, waterlogged: false, west: true}),
      63 => Some(Self {east: false, north: false, south: false, up: false, waterlogged: false, west: false}),
      _ => None,
    }
  }
  pub fn to_offset(self) -> usize {
    match self.east {
      true => match self.north {
        true => match self.south {
          true => match self.up {
            true => match self.waterlogged {
              true => match self.west {
                true => 0,
                false => 1,
              },
              false => match self.west {
                true => 2,
                false => 3,
              },
            },
            false => match self.waterlogged {
              true => match self.west {
                true => 4,
                false => 5,
              },
              false => match self.west {
                true => 6,
                false => 7,
              },
            },
          },
          false => match self.up {
            true => match self.waterlogged {
              true => match self.west {
                true => 8,
                false => 9,
              },
              false => match self.west {
                true => 10,
                false => 11,
              },
            },
            false => match self.waterlogged {
              true => match self.west {
                true => 12,
                false => 13,
              },
              false => match self.west {
                true => 14,
                false => 15,
              },
            },
          },
        },
        false => match self.south {
          true => match self.up {
            true => match self.waterlogged {
              true => match self.west {
                true => 16,
                false => 17,
              },
              false => match self.west {
                true => 18,
                false => 19,
              },
            },
            false => match self.waterlogged {
              true => match self.west {
                true => 20,
                false => 21,
              },
              false => match self.west {
                true => 22,
                false => 23,
              },
            },
          },
          false => match self.up {
            true => match self.waterlogged {
              true => match self.west {
                true => 24,
                false => 25,
              },
              false => match self.west {
                true => 26,
                false => 27,
              },
            },
            false => match self.waterlogged {
              true => match self.west {
                true => 28,
                false => 29,
              },
              false => match self.west {
                true => 30,
                false => 31,
              },
            },
          },
        },
      },
      false => match self.north {
        true => match self.south {
          true => match self.up {
            true => match self.waterlogged {
              true => match self.west {
                true => 32,
                false => 33,
              },
              false => match self.west {
                true => 34,
                false => 35,
              },
            },
            false => match self.waterlogged {
              true => match self.west {
                true => 36,
                false => 37,
              },
              false => match self.west {
                true => 38,
                false => 39,
              },
            },
          },
          false => match self.up {
            true => match self.waterlogged {
              true => match self.west {
                true => 40,
                false => 41,
              },
              false => match self.west {
                true => 42,
                false => 43,
              },
            },
            false => match self.waterlogged {
              true => match self.west {
                true => 44,
                false => 45,
              },
              false => match self.west {
                true => 46,
                false => 47,
              },
            },
          },
        },
        false => match self.south {
          true => match self.up {
            true => match self.waterlogged {
              true => match self.west {
                true => 48,
                false => 49,
              },
              false => match self.west {
                true => 50,
                false => 51,
              },
            },
            false => match self.waterlogged {
              true => match self.west {
                true => 52,
                false => 53,
              },
              false => match self.west {
                true => 54,
                false => 55,
              },
            },
          },
          false => match self.up {
            true => match self.waterlogged {
              true => match self.west {
                true => 56,
                false => 57,
              },
              false => match self.west {
                true => 58,
                false => 59,
              },
            },
            false => match self.waterlogged {
              true => match self.west {
                true => 60,
                false => 61,
              },
              false => match self.west {
                true => 62,
                false => 63,
              },
            },
          },
        },
      },
    }
  }
}
impl Default for WallData {
  fn default() -> Self {
    Self {east: false, north: false, south: false, up: true, waterlogged: false, west: false}
  }
}
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]
pub struct CarrotsData {
  pub age: NumberFrom0To7Property,
}
impl CarrotsData {
  pub fn from_offset(offset: usize) -> Option<Self> {
    match offset {
      0 => Some(Self {age: NumberFrom0To7Property::new(0)}),
      1 => Some(Self {age: NumberFrom0To7Property::new(1)}),
      2 => Some(Self {age: NumberFrom0To7Property::new(2)}),
      3 => Some(Self {age: NumberFrom0To7Property::new(3)}),
      4 => Some(Self {age: NumberFrom0To7Property::new(4)}),
      5 => Some(Self {age: NumberFrom0To7Property::new(5)}),
      6 => Some(Self {age: NumberFrom0To7Property::new(6)}),
      7 => Some(Self {age: NumberFrom0To7Property::new(7)}),
      _ => None,
    }
  }
  pub fn to_offset(self) -> usize {
    match self.age.value() {
      0 => 0,
      1 => 1,
      2 => 2,
      3 => 3,
      4 => 4,
      5 => 5,
      6 => 6,
      7 => 7,
      _ => panic!("Illegal Block State"),
    }
  }
}
impl Default for CarrotsData {
  fn default() -> Self {
    Self {age: NumberFrom0To7Property::new(0)}
  }
}
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]
pub struct PotatoesData {
  pub age: NumberFrom0To7Property,
}
impl PotatoesData {
  pub fn from_offset(offset: usize) -> Option<Self> {
    match offset {
      0 => Some(Self {age: NumberFrom0To7Property::new(0)}),
      1 => Some(Self {age: NumberFrom0To7Property::new(1)}),
      2 => Some(Self {age: NumberFrom0To7Property::new(2)}),
      3 => Some(Self {age: NumberFrom0To7Property::new(3)}),
      4 => Some(Self {age: NumberFrom0To7Property::new(4)}),
      5 => Some(Self {age: NumberFrom0To7Property::new(5)}),
      6 => Some(Self {age: NumberFrom0To7Property::new(6)}),
      7 => Some(Self {age: NumberFrom0To7Property::new(7)}),
      _ => None,
    }
  }
  pub fn to_offset(self) -> usize {
    match self.age.value() {
      0 => 0,
      1 => 1,
      2 => 2,
      3 => 3,
      4 => 4,
      5 => 5,
      6 => 6,
      7 => 7,
      _ => panic!("Illegal Block State"),
    }
  }
}
impl Default for PotatoesData {
  fn default() -> Self {
    Self {age: NumberFrom0To7Property::new(0)}
  }
}
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]
pub struct SkeletonSkullData {
  pub rotation: NumberFrom0To15Property,
}
impl SkeletonSkullData {
  pub fn from_offset(offset: usize) -> Option<Self> {
    match offset {
      0 => Some(Self {rotation: NumberFrom0To15Property::new(0)}),
      1 => Some(Self {rotation: NumberFrom0To15Property::new(1)}),
      2 => Some(Self {rotation: NumberFrom0To15Property::new(2)}),
      3 => Some(Self {rotation: NumberFrom0To15Property::new(3)}),
      4 => Some(Self {rotation: NumberFrom0To15Property::new(4)}),
      5 => Some(Self {rotation: NumberFrom0To15Property::new(5)}),
      6 => Some(Self {rotation: NumberFrom0To15Property::new(6)}),
      7 => Some(Self {rotation: NumberFrom0To15Property::new(7)}),
      8 => Some(Self {rotation: NumberFrom0To15Property::new(8)}),
      9 => Some(Self {rotation: NumberFrom0To15Property::new(9)}),
      10 => Some(Self {rotation: NumberFrom0To15Property::new(10)}),
      11 => Some(Self {rotation: NumberFrom0To15Property::new(11)}),
      12 => Some(Self {rotation: NumberFrom0To15Property::new(12)}),
      13 => Some(Self {rotation: NumberFrom0To15Property::new(13)}),
      14 => Some(Self {rotation: NumberFrom0To15Property::new(14)}),
      15 => Some(Self {rotation: NumberFrom0To15Property::new(15)}),
      _ => None,
    }
  }
  pub fn to_offset(self) -> usize {
    match self.rotation.value() {
      0 => 0,
      1 => 1,
      2 => 2,
      3 => 3,
      4 => 4,
      5 => 5,
      6 => 6,
      7 => 7,
      8 => 8,
      9 => 9,
      10 => 10,
      11 => 11,
      12 => 12,
      13 => 13,
      14 => 14,
      15 => 15,
      _ => panic!("Illegal Block State"),
    }
  }
}
impl Default for SkeletonSkullData {
  fn default() -> Self {
    Self {rotation: NumberFrom0To15Property::new(0)}
  }
}
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]
pub struct WitherSkeletonSkullData {
  pub rotation: NumberFrom0To15Property,
}
impl WitherSkeletonSkullData {
  pub fn from_offset(offset: usize) -> Option<Self> {
    match offset {
      0 => Some(Self {rotation: NumberFrom0To15Property::new(0)}),
      1 => Some(Self {rotation: NumberFrom0To15Property::new(1)}),
      2 => Some(Self {rotation: NumberFrom0To15Property::new(2)}),
      3 => Some(Self {rotation: NumberFrom0To15Property::new(3)}),
      4 => Some(Self {rotation: NumberFrom0To15Property::new(4)}),
      5 => Some(Self {rotation: NumberFrom0To15Property::new(5)}),
      6 => Some(Self {rotation: NumberFrom0To15Property::new(6)}),
      7 => Some(Self {rotation: NumberFrom0To15Property::new(7)}),
      8 => Some(Self {rotation: NumberFrom0To15Property::new(8)}),
      9 => Some(Self {rotation: NumberFrom0To15Property::new(9)}),
      10 => Some(Self {rotation: NumberFrom0To15Property::new(10)}),
      11 => Some(Self {rotation: NumberFrom0To15Property::new(11)}),
      12 => Some(Self {rotation: NumberFrom0To15Property::new(12)}),
      13 => Some(Self {rotation: NumberFrom0To15Property::new(13)}),
      14 => Some(Self {rotation: NumberFrom0To15Property::new(14)}),
      15 => Some(Self {rotation: NumberFrom0To15Property::new(15)}),
      _ => None,
    }
  }
  pub fn to_offset(self) -> usize {
    match self.rotation.value() {
      0 => 0,
      1 => 1,
      2 => 2,
      3 => 3,
      4 => 4,
      5 => 5,
      6 => 6,
      7 => 7,
      8 => 8,
      9 => 9,
      10 => 10,
      11 => 11,
      12 => 12,
      13 => 13,
      14 => 14,
      15 => 15,
      _ => panic!("Illegal Block State"),
    }
  }
}
impl Default for WitherSkeletonSkullData {
  fn default() -> Self {
    Self {rotation: NumberFrom0To15Property::new(0)}
  }
}
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]
pub struct ZombieHeadData {
  pub rotation: NumberFrom0To15Property,
}
impl ZombieHeadData {
  pub fn from_offset(offset: usize) -> Option<Self> {
    match offset {
      0 => Some(Self {rotation: NumberFrom0To15Property::new(0)}),
      1 => Some(Self {rotation: NumberFrom0To15Property::new(1)}),
      2 => Some(Self {rotation: NumberFrom0To15Property::new(2)}),
      3 => Some(Self {rotation: NumberFrom0To15Property::new(3)}),
      4 => Some(Self {rotation: NumberFrom0To15Property::new(4)}),
      5 => Some(Self {rotation: NumberFrom0To15Property::new(5)}),
      6 => Some(Self {rotation: NumberFrom0To15Property::new(6)}),
      7 => Some(Self {rotation: NumberFrom0To15Property::new(7)}),
      8 => Some(Self {rotation: NumberFrom0To15Property::new(8)}),
      9 => Some(Self {rotation: NumberFrom0To15Property::new(9)}),
      10 => Some(Self {rotation: NumberFrom0To15Property::new(10)}),
      11 => Some(Self {rotation: NumberFrom0To15Property::new(11)}),
      12 => Some(Self {rotation: NumberFrom0To15Property::new(12)}),
      13 => Some(Self {rotation: NumberFrom0To15Property::new(13)}),
      14 => Some(Self {rotation: NumberFrom0To15Property::new(14)}),
      15 => Some(Self {rotation: NumberFrom0To15Property::new(15)}),
      _ => None,
    }
  }
  pub fn to_offset(self) -> usize {
    match self.rotation.value() {
      0 => 0,
      1 => 1,
      2 => 2,
      3 => 3,
      4 => 4,
      5 => 5,
      6 => 6,
      7 => 7,
      8 => 8,
      9 => 9,
      10 => 10,
      11 => 11,
      12 => 12,
      13 => 13,
      14 => 14,
      15 => 15,
      _ => panic!("Illegal Block State"),
    }
  }
}
impl Default for ZombieHeadData {
  fn default() -> Self {
    Self {rotation: NumberFrom0To15Property::new(0)}
  }
}
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]
pub struct PlayerHeadData {
  pub rotation: NumberFrom0To15Property,
}
impl PlayerHeadData {
  pub fn from_offset(offset: usize) -> Option<Self> {
    match offset {
      0 => Some(Self {rotation: NumberFrom0To15Property::new(0)}),
      1 => Some(Self {rotation: NumberFrom0To15Property::new(1)}),
      2 => Some(Self {rotation: NumberFrom0To15Property::new(2)}),
      3 => Some(Self {rotation: NumberFrom0To15Property::new(3)}),
      4 => Some(Self {rotation: NumberFrom0To15Property::new(4)}),
      5 => Some(Self {rotation: NumberFrom0To15Property::new(5)}),
      6 => Some(Self {rotation: NumberFrom0To15Property::new(6)}),
      7 => Some(Self {rotation: NumberFrom0To15Property::new(7)}),
      8 => Some(Self {rotation: NumberFrom0To15Property::new(8)}),
      9 => Some(Self {rotation: NumberFrom0To15Property::new(9)}),
      10 => Some(Self {rotation: NumberFrom0To15Property::new(10)}),
      11 => Some(Self {rotation: NumberFrom0To15Property::new(11)}),
      12 => Some(Self {rotation: NumberFrom0To15Property::new(12)}),
      13 => Some(Self {rotation: NumberFrom0To15Property::new(13)}),
      14 => Some(Self {rotation: NumberFrom0To15Property::new(14)}),
      15 => Some(Self {rotation: NumberFrom0To15Property::new(15)}),
      _ => None,
    }
  }
  pub fn to_offset(self) -> usize {
    match self.rotation.value() {
      0 => 0,
      1 => 1,
      2 => 2,
      3 => 3,
      4 => 4,
      5 => 5,
      6 => 6,
      7 => 7,
      8 => 8,
      9 => 9,
      10 => 10,
      11 => 11,
      12 => 12,
      13 => 13,
      14 => 14,
      15 => 15,
      _ => panic!("Illegal Block State"),
    }
  }
}
impl Default for PlayerHeadData {
  fn default() -> Self {
    Self {rotation: NumberFrom0To15Property::new(0)}
  }
}
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]
pub struct CreeperHeadData {
  pub rotation: NumberFrom0To15Property,
}
impl CreeperHeadData {
  pub fn from_offset(offset: usize) -> Option<Self> {
    match offset {
      0 => Some(Self {rotation: NumberFrom0To15Property::new(0)}),
      1 => Some(Self {rotation: NumberFrom0To15Property::new(1)}),
      2 => Some(Self {rotation: NumberFrom0To15Property::new(2)}),
      3 => Some(Self {rotation: NumberFrom0To15Property::new(3)}),
      4 => Some(Self {rotation: NumberFrom0To15Property::new(4)}),
      5 => Some(Self {rotation: NumberFrom0To15Property::new(5)}),
      6 => Some(Self {rotation: NumberFrom0To15Property::new(6)}),
      7 => Some(Self {rotation: NumberFrom0To15Property::new(7)}),
      8 => Some(Self {rotation: NumberFrom0To15Property::new(8)}),
      9 => Some(Self {rotation: NumberFrom0To15Property::new(9)}),
      10 => Some(Self {rotation: NumberFrom0To15Property::new(10)}),
      11 => Some(Self {rotation: NumberFrom0To15Property::new(11)}),
      12 => Some(Self {rotation: NumberFrom0To15Property::new(12)}),
      13 => Some(Self {rotation: NumberFrom0To15Property::new(13)}),
      14 => Some(Self {rotation: NumberFrom0To15Property::new(14)}),
      15 => Some(Self {rotation: NumberFrom0To15Property::new(15)}),
      _ => None,
    }
  }
  pub fn to_offset(self) -> usize {
    match self.rotation.value() {
      0 => 0,
      1 => 1,
      2 => 2,
      3 => 3,
      4 => 4,
      5 => 5,
      6 => 6,
      7 => 7,
      8 => 8,
      9 => 9,
      10 => 10,
      11 => 11,
      12 => 12,
      13 => 13,
      14 => 14,
      15 => 15,
      _ => panic!("Illegal Block State"),
    }
  }
}
impl Default for CreeperHeadData {
  fn default() -> Self {
    Self {rotation: NumberFrom0To15Property::new(0)}
  }
}
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]
pub struct DragonHeadData {
  pub rotation: NumberFrom0To15Property,
}
impl DragonHeadData {
  pub fn from_offset(offset: usize) -> Option<Self> {
    match offset {
      0 => Some(Self {rotation: NumberFrom0To15Property::new(0)}),
      1 => Some(Self {rotation: NumberFrom0To15Property::new(1)}),
      2 => Some(Self {rotation: NumberFrom0To15Property::new(2)}),
      3 => Some(Self {rotation: NumberFrom0To15Property::new(3)}),
      4 => Some(Self {rotation: NumberFrom0To15Property::new(4)}),
      5 => Some(Self {rotation: NumberFrom0To15Property::new(5)}),
      6 => Some(Self {rotation: NumberFrom0To15Property::new(6)}),
      7 => Some(Self {rotation: NumberFrom0To15Property::new(7)}),
      8 => Some(Self {rotation: NumberFrom0To15Property::new(8)}),
      9 => Some(Self {rotation: NumberFrom0To15Property::new(9)}),
      10 => Some(Self {rotation: NumberFrom0To15Property::new(10)}),
      11 => Some(Self {rotation: NumberFrom0To15Property::new(11)}),
      12 => Some(Self {rotation: NumberFrom0To15Property::new(12)}),
      13 => Some(Self {rotation: NumberFrom0To15Property::new(13)}),
      14 => Some(Self {rotation: NumberFrom0To15Property::new(14)}),
      15 => Some(Self {rotation: NumberFrom0To15Property::new(15)}),
      _ => None,
    }
  }
  pub fn to_offset(self) -> usize {
    match self.rotation.value() {
      0 => 0,
      1 => 1,
      2 => 2,
      3 => 3,
      4 => 4,
      5 => 5,
      6 => 6,
      7 => 7,
      8 => 8,
      9 => 9,
      10 => 10,
      11 => 11,
      12 => 12,
      13 => 13,
      14 => 14,
      15 => 15,
      _ => panic!("Illegal Block State"),
    }
  }
}
impl Default for DragonHeadData {
  fn default() -> Self {
    Self {rotation: NumberFrom0To15Property::new(0)}
  }
}
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]
pub struct TrappedChestData {
  pub facing: CardinalFacingProperty,
  pub r#type: ChestTypeProperty,
  pub waterlogged: bool,
}
impl TrappedChestData {
  pub fn from_offset(offset: usize) -> Option<Self> {
    match offset {
      0 => Some(Self {facing: CardinalFacingProperty::North, r#type: ChestTypeProperty::Single, waterlogged: true}),
      1 => Some(Self {facing: CardinalFacingProperty::North, r#type: ChestTypeProperty::Single, waterlogged: false}),
      2 => Some(Self {facing: CardinalFacingProperty::North, r#type: ChestTypeProperty::Left, waterlogged: true}),
      3 => Some(Self {facing: CardinalFacingProperty::North, r#type: ChestTypeProperty::Left, waterlogged: false}),
      4 => Some(Self {facing: CardinalFacingProperty::North, r#type: ChestTypeProperty::Right, waterlogged: true}),
      5 => Some(Self {facing: CardinalFacingProperty::North, r#type: ChestTypeProperty::Right, waterlogged: false}),
      6 => Some(Self {facing: CardinalFacingProperty::South, r#type: ChestTypeProperty::Single, waterlogged: true}),
      7 => Some(Self {facing: CardinalFacingProperty::South, r#type: ChestTypeProperty::Single, waterlogged: false}),
      8 => Some(Self {facing: CardinalFacingProperty::South, r#type: ChestTypeProperty::Left, waterlogged: true}),
      9 => Some(Self {facing: CardinalFacingProperty::South, r#type: ChestTypeProperty::Left, waterlogged: false}),
      10 => Some(Self {facing: CardinalFacingProperty::South, r#type: ChestTypeProperty::Right, waterlogged: true}),
      11 => Some(Self {facing: CardinalFacingProperty::South, r#type: ChestTypeProperty::Right, waterlogged: false}),
      12 => Some(Self {facing: CardinalFacingProperty::West, r#type: ChestTypeProperty::Single, waterlogged: true}),
      13 => Some(Self {facing: CardinalFacingProperty::West, r#type: ChestTypeProperty::Single, waterlogged: false}),
      14 => Some(Self {facing: CardinalFacingProperty::West, r#type: ChestTypeProperty::Left, waterlogged: true}),
      15 => Some(Self {facing: CardinalFacingProperty::West, r#type: ChestTypeProperty::Left, waterlogged: false}),
      16 => Some(Self {facing: CardinalFacingProperty::West, r#type: ChestTypeProperty::Right, waterlogged: true}),
      17 => Some(Self {facing: CardinalFacingProperty::West, r#type: ChestTypeProperty::Right, waterlogged: false}),
      18 => Some(Self {facing: CardinalFacingProperty::East, r#type: ChestTypeProperty::Single, waterlogged: true}),
      19 => Some(Self {facing: CardinalFacingProperty::East, r#type: ChestTypeProperty::Single, waterlogged: false}),
      20 => Some(Self {facing: CardinalFacingProperty::East, r#type: ChestTypeProperty::Left, waterlogged: true}),
      21 => Some(Self {facing: CardinalFacingProperty::East, r#type: ChestTypeProperty::Left, waterlogged: false}),
      22 => Some(Self {facing: CardinalFacingProperty::East, r#type: ChestTypeProperty::Right, waterlogged: true}),
      23 => Some(Self {facing: CardinalFacingProperty::East, r#type: ChestTypeProperty::Right, waterlogged: false}),
      _ => None,
    }
  }
  pub fn to_offset(self) -> usize {
    match self.facing {
      CardinalFacingProperty::North => match self.r#type {
        ChestTypeProperty::Single => match self.waterlogged {
          true => 0,
          false => 1,
        },
        ChestTypeProperty::Left => match self.waterlogged {
          true => 2,
          false => 3,
        },
        ChestTypeProperty::Right => match self.waterlogged {
          true => 4,
          false => 5,
        },
      },
      CardinalFacingProperty::South => match self.r#type {
        ChestTypeProperty::Single => match self.waterlogged {
          true => 6,
          false => 7,
        },
        ChestTypeProperty::Left => match self.waterlogged {
          true => 8,
          false => 9,
        },
        ChestTypeProperty::Right => match self.waterlogged {
          true => 10,
          false => 11,
        },
      },
      CardinalFacingProperty::West => match self.r#type {
        ChestTypeProperty::Single => match self.waterlogged {
          true => 12,
          false => 13,
        },
        ChestTypeProperty::Left => match self.waterlogged {
          true => 14,
          false => 15,
        },
        ChestTypeProperty::Right => match self.waterlogged {
          true => 16,
          false => 17,
        },
      },
      CardinalFacingProperty::East => match self.r#type {
        ChestTypeProperty::Single => match self.waterlogged {
          true => 18,
          false => 19,
        },
        ChestTypeProperty::Left => match self.waterlogged {
          true => 20,
          false => 21,
        },
        ChestTypeProperty::Right => match self.waterlogged {
          true => 22,
          false => 23,
        },
      },
    }
  }
}
impl Default for TrappedChestData {
  fn default() -> Self {
    Self {facing: CardinalFacingProperty::North, r#type: ChestTypeProperty::Single, waterlogged: false}
  }
}
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]
pub struct LightWeightedPressurePlateData {
  pub power: NumberFrom0To15Property,
}
impl LightWeightedPressurePlateData {
  pub fn from_offset(offset: usize) -> Option<Self> {
    match offset {
      0 => Some(Self {power: NumberFrom0To15Property::new(0)}),
      1 => Some(Self {power: NumberFrom0To15Property::new(1)}),
      2 => Some(Self {power: NumberFrom0To15Property::new(2)}),
      3 => Some(Self {power: NumberFrom0To15Property::new(3)}),
      4 => Some(Self {power: NumberFrom0To15Property::new(4)}),
      5 => Some(Self {power: NumberFrom0To15Property::new(5)}),
      6 => Some(Self {power: NumberFrom0To15Property::new(6)}),
      7 => Some(Self {power: NumberFrom0To15Property::new(7)}),
      8 => Some(Self {power: NumberFrom0To15Property::new(8)}),
      9 => Some(Self {power: NumberFrom0To15Property::new(9)}),
      10 => Some(Self {power: NumberFrom0To15Property::new(10)}),
      11 => Some(Self {power: NumberFrom0To15Property::new(11)}),
      12 => Some(Self {power: NumberFrom0To15Property::new(12)}),
      13 => Some(Self {power: NumberFrom0To15Property::new(13)}),
      14 => Some(Self {power: NumberFrom0To15Property::new(14)}),
      15 => Some(Self {power: NumberFrom0To15Property::new(15)}),
      _ => None,
    }
  }
  pub fn to_offset(self) -> usize {
    match self.power.value() {
      0 => 0,
      1 => 1,
      2 => 2,
      3 => 3,
      4 => 4,
      5 => 5,
      6 => 6,
      7 => 7,
      8 => 8,
      9 => 9,
      10 => 10,
      11 => 11,
      12 => 12,
      13 => 13,
      14 => 14,
      15 => 15,
      _ => panic!("Illegal Block State"),
    }
  }
}
impl Default for LightWeightedPressurePlateData {
  fn default() -> Self {
    Self {power: NumberFrom0To15Property::new(0)}
  }
}
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]
pub struct HeavyWeightedPressurePlateData {
  pub power: NumberFrom0To15Property,
}
impl HeavyWeightedPressurePlateData {
  pub fn from_offset(offset: usize) -> Option<Self> {
    match offset {
      0 => Some(Self {power: NumberFrom0To15Property::new(0)}),
      1 => Some(Self {power: NumberFrom0To15Property::new(1)}),
      2 => Some(Self {power: NumberFrom0To15Property::new(2)}),
      3 => Some(Self {power: NumberFrom0To15Property::new(3)}),
      4 => Some(Self {power: NumberFrom0To15Property::new(4)}),
      5 => Some(Self {power: NumberFrom0To15Property::new(5)}),
      6 => Some(Self {power: NumberFrom0To15Property::new(6)}),
      7 => Some(Self {power: NumberFrom0To15Property::new(7)}),
      8 => Some(Self {power: NumberFrom0To15Property::new(8)}),
      9 => Some(Self {power: NumberFrom0To15Property::new(9)}),
      10 => Some(Self {power: NumberFrom0To15Property::new(10)}),
      11 => Some(Self {power: NumberFrom0To15Property::new(11)}),
      12 => Some(Self {power: NumberFrom0To15Property::new(12)}),
      13 => Some(Self {power: NumberFrom0To15Property::new(13)}),
      14 => Some(Self {power: NumberFrom0To15Property::new(14)}),
      15 => Some(Self {power: NumberFrom0To15Property::new(15)}),
      _ => None,
    }
  }
  pub fn to_offset(self) -> usize {
    match self.power.value() {
      0 => 0,
      1 => 1,
      2 => 2,
      3 => 3,
      4 => 4,
      5 => 5,
      6 => 6,
      7 => 7,
      8 => 8,
      9 => 9,
      10 => 10,
      11 => 11,
      12 => 12,
      13 => 13,
      14 => 14,
      15 => 15,
      _ => panic!("Illegal Block State"),
    }
  }
}
impl Default for HeavyWeightedPressurePlateData {
  fn default() -> Self {
    Self {power: NumberFrom0To15Property::new(0)}
  }
}
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]
pub struct ComparatorData {
  pub facing: CardinalFacingProperty,
  pub mode: ComparatorModeProperty,
  pub powered: bool,
}
impl ComparatorData {
  pub fn from_offset(offset: usize) -> Option<Self> {
    match offset {
      0 => Some(Self {facing: CardinalFacingProperty::North, mode: ComparatorModeProperty::Compare, powered: true}),
      1 => Some(Self {facing: CardinalFacingProperty::North, mode: ComparatorModeProperty::Compare, powered: false}),
      2 => Some(Self {facing: CardinalFacingProperty::North, mode: ComparatorModeProperty::Subtract, powered: true}),
      3 => Some(Self {facing: CardinalFacingProperty::North, mode: ComparatorModeProperty::Subtract, powered: false}),
      4 => Some(Self {facing: CardinalFacingProperty::South, mode: ComparatorModeProperty::Compare, powered: true}),
      5 => Some(Self {facing: CardinalFacingProperty::South, mode: ComparatorModeProperty::Compare, powered: false}),
      6 => Some(Self {facing: CardinalFacingProperty::South, mode: ComparatorModeProperty::Subtract, powered: true}),
      7 => Some(Self {facing: CardinalFacingProperty::South, mode: ComparatorModeProperty::Subtract, powered: false}),
      8 => Some(Self {facing: CardinalFacingProperty::West, mode: ComparatorModeProperty::Compare, powered: true}),
      9 => Some(Self {facing: CardinalFacingProperty::West, mode: ComparatorModeProperty::Compare, powered: false}),
      10 => Some(Self {facing: CardinalFacingProperty::West, mode: ComparatorModeProperty::Subtract, powered: true}),
      11 => Some(Self {facing: CardinalFacingProperty::West, mode: ComparatorModeProperty::Subtract, powered: false}),
      12 => Some(Self {facing: CardinalFacingProperty::East, mode: ComparatorModeProperty::Compare, powered: true}),
      13 => Some(Self {facing: CardinalFacingProperty::East, mode: ComparatorModeProperty::Compare, powered: false}),
      14 => Some(Self {facing: CardinalFacingProperty::East, mode: ComparatorModeProperty::Subtract, powered: true}),
      15 => Some(Self {facing: CardinalFacingProperty::East, mode: ComparatorModeProperty::Subtract, powered: false}),
      _ => None,
    }
  }
  pub fn to_offset(self) -> usize {
    match self.facing {
      CardinalFacingProperty::North => match self.mode {
        ComparatorModeProperty::Compare => match self.powered {
          true => 0,
          false => 1,
        },
        ComparatorModeProperty::Subtract => match self.powered {
          true => 2,
          false => 3,
        },
      },
      CardinalFacingProperty::South => match self.mode {
        ComparatorModeProperty::Compare => match self.powered {
          true => 4,
          false => 5,
        },
        ComparatorModeProperty::Subtract => match self.powered {
          true => 6,
          false => 7,
        },
      },
      CardinalFacingProperty::West => match self.mode {
        ComparatorModeProperty::Compare => match self.powered {
          true => 8,
          false => 9,
        },
        ComparatorModeProperty::Subtract => match self.powered {
          true => 10,
          false => 11,
        },
      },
      CardinalFacingProperty::East => match self.mode {
        ComparatorModeProperty::Compare => match self.powered {
          true => 12,
          false => 13,
        },
        ComparatorModeProperty::Subtract => match self.powered {
          true => 14,
          false => 15,
        },
      },
    }
  }
}
impl Default for ComparatorData {
  fn default() -> Self {
    Self {facing: CardinalFacingProperty::North, mode: ComparatorModeProperty::Compare, powered: false}
  }
}
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]
pub struct DaylightDetectorData {
  pub inverted: bool,
  pub power: NumberFrom0To15Property,
}
impl DaylightDetectorData {
  pub fn from_offset(offset: usize) -> Option<Self> {
    match offset {
      0 => Some(Self {inverted: true, power: NumberFrom0To15Property::new(0)}),
      1 => Some(Self {inverted: true, power: NumberFrom0To15Property::new(1)}),
      2 => Some(Self {inverted: true, power: NumberFrom0To15Property::new(2)}),
      3 => Some(Self {inverted: true, power: NumberFrom0To15Property::new(3)}),
      4 => Some(Self {inverted: true, power: NumberFrom0To15Property::new(4)}),
      5 => Some(Self {inverted: true, power: NumberFrom0To15Property::new(5)}),
      6 => Some(Self {inverted: true, power: NumberFrom0To15Property::new(6)}),
      7 => Some(Self {inverted: true, power: NumberFrom0To15Property::new(7)}),
      8 => Some(Self {inverted: true, power: NumberFrom0To15Property::new(8)}),
      9 => Some(Self {inverted: true, power: NumberFrom0To15Property::new(9)}),
      10 => Some(Self {inverted: true, power: NumberFrom0To15Property::new(10)}),
      11 => Some(Self {inverted: true, power: NumberFrom0To15Property::new(11)}),
      12 => Some(Self {inverted: true, power: NumberFrom0To15Property::new(12)}),
      13 => Some(Self {inverted: true, power: NumberFrom0To15Property::new(13)}),
      14 => Some(Self {inverted: true, power: NumberFrom0To15Property::new(14)}),
      15 => Some(Self {inverted: true, power: NumberFrom0To15Property::new(15)}),
      16 => Some(Self {inverted: false, power: NumberFrom0To15Property::new(0)}),
      17 => Some(Self {inverted: false, power: NumberFrom0To15Property::new(1)}),
      18 => Some(Self {inverted: false, power: NumberFrom0To15Property::new(2)}),
      19 => Some(Self {inverted: false, power: NumberFrom0To15Property::new(3)}),
      20 => Some(Self {inverted: false, power: NumberFrom0To15Property::new(4)}),
      21 => Some(Self {inverted: false, power: NumberFrom0To15Property::new(5)}),
      22 => Some(Self {inverted: false, power: NumberFrom0To15Property::new(6)}),
      23 => Some(Self {inverted: false, power: NumberFrom0To15Property::new(7)}),
      24 => Some(Self {inverted: false, power: NumberFrom0To15Property::new(8)}),
      25 => Some(Self {inverted: false, power: NumberFrom0To15Property::new(9)}),
      26 => Some(Self {inverted: false, power: NumberFrom0To15Property::new(10)}),
      27 => Some(Self {inverted: false, power: NumberFrom0To15Property::new(11)}),
      28 => Some(Self {inverted: false, power: NumberFrom0To15Property::new(12)}),
      29 => Some(Self {inverted: false, power: NumberFrom0To15Property::new(13)}),
      30 => Some(Self {inverted: false, power: NumberFrom0To15Property::new(14)}),
      31 => Some(Self {inverted: false, power: NumberFrom0To15Property::new(15)}),
      _ => None,
    }
  }
  pub fn to_offset(self) -> usize {
    match self.inverted {
      true => match self.power.value() {
        0 => 0,
        1 => 1,
        2 => 2,
        3 => 3,
        4 => 4,
        5 => 5,
        6 => 6,
        7 => 7,
        8 => 8,
        9 => 9,
        10 => 10,
        11 => 11,
        12 => 12,
        13 => 13,
        14 => 14,
        15 => 15,
        _ => panic!("Illegal Block State"),
      },
      false => match self.power.value() {
        0 => 16,
        1 => 17,
        2 => 18,
        3 => 19,
        4 => 20,
        5 => 21,
        6 => 22,
        7 => 23,
        8 => 24,
        9 => 25,
        10 => 26,
        11 => 27,
        12 => 28,
        13 => 29,
        14 => 30,
        15 => 31,
        _ => panic!("Illegal Block State"),
      },
    }
  }
}
impl Default for DaylightDetectorData {
  fn default() -> Self {
    Self {inverted: false, power: NumberFrom0To15Property::new(0)}
  }
}
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]
pub struct HopperData {
  pub enabled: bool,
  pub facing: HopperFacingProperty,
}
impl HopperData {
  pub fn from_offset(offset: usize) -> Option<Self> {
    match offset {
      0 => Some(Self {enabled: true, facing: HopperFacingProperty::Down}),
      1 => Some(Self {enabled: true, facing: HopperFacingProperty::North}),
      2 => Some(Self {enabled: true, facing: HopperFacingProperty::South}),
      3 => Some(Self {enabled: true, facing: HopperFacingProperty::West}),
      4 => Some(Self {enabled: true, facing: HopperFacingProperty::East}),
      5 => Some(Self {enabled: false, facing: HopperFacingProperty::Down}),
      6 => Some(Self {enabled: false, facing: HopperFacingProperty::North}),
      7 => Some(Self {enabled: false, facing: HopperFacingProperty::South}),
      8 => Some(Self {enabled: false, facing: HopperFacingProperty::West}),
      9 => Some(Self {enabled: false, facing: HopperFacingProperty::East}),
      _ => None,
    }
  }
  pub fn to_offset(self) -> usize {
    match self.enabled {
      true => match self.facing {
        HopperFacingProperty::Down => 0,
        HopperFacingProperty::North => 1,
        HopperFacingProperty::South => 2,
        HopperFacingProperty::West => 3,
        HopperFacingProperty::East => 4,
      },
      false => match self.facing {
        HopperFacingProperty::Down => 5,
        HopperFacingProperty::North => 6,
        HopperFacingProperty::South => 7,
        HopperFacingProperty::West => 8,
        HopperFacingProperty::East => 9,
      },
    }
  }
}
impl Default for HopperData {
  fn default() -> Self {
    Self {enabled: true, facing: HopperFacingProperty::Down}
  }
}
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]
pub struct ActivatorRailData {
  pub powered: bool,
  pub shape: ActivatorRailShapeProperty,
}
impl ActivatorRailData {
  pub fn from_offset(offset: usize) -> Option<Self> {
    match offset {
      0 => Some(Self {powered: true, shape: ActivatorRailShapeProperty::NorthSouth}),
      1 => Some(Self {powered: true, shape: ActivatorRailShapeProperty::EastWest}),
      2 => Some(Self {powered: true, shape: ActivatorRailShapeProperty::AscendingEast}),
      3 => Some(Self {powered: true, shape: ActivatorRailShapeProperty::AscendingWest}),
      4 => Some(Self {powered: true, shape: ActivatorRailShapeProperty::AscendingNorth}),
      5 => Some(Self {powered: true, shape: ActivatorRailShapeProperty::AscendingSouth}),
      6 => Some(Self {powered: false, shape: ActivatorRailShapeProperty::NorthSouth}),
      7 => Some(Self {powered: false, shape: ActivatorRailShapeProperty::EastWest}),
      8 => Some(Self {powered: false, shape: ActivatorRailShapeProperty::AscendingEast}),
      9 => Some(Self {powered: false, shape: ActivatorRailShapeProperty::AscendingWest}),
      10 => Some(Self {powered: false, shape: ActivatorRailShapeProperty::AscendingNorth}),
      11 => Some(Self {powered: false, shape: ActivatorRailShapeProperty::AscendingSouth}),
      _ => None,
    }
  }
  pub fn to_offset(self) -> usize {
    match self.powered {
      true => match self.shape {
        ActivatorRailShapeProperty::NorthSouth => 0,
        ActivatorRailShapeProperty::EastWest => 1,
        ActivatorRailShapeProperty::AscendingEast => 2,
        ActivatorRailShapeProperty::AscendingWest => 3,
        ActivatorRailShapeProperty::AscendingNorth => 4,
        ActivatorRailShapeProperty::AscendingSouth => 5,
      },
      false => match self.shape {
        ActivatorRailShapeProperty::NorthSouth => 6,
        ActivatorRailShapeProperty::EastWest => 7,
        ActivatorRailShapeProperty::AscendingEast => 8,
        ActivatorRailShapeProperty::AscendingWest => 9,
        ActivatorRailShapeProperty::AscendingNorth => 10,
        ActivatorRailShapeProperty::AscendingSouth => 11,
      },
    }
  }
}
impl Default for ActivatorRailData {
  fn default() -> Self {
    Self {powered: false, shape: ActivatorRailShapeProperty::NorthSouth}
  }
}
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]
pub struct DropperData {
  pub facing: BlockFacingProperty,
  pub triggered: bool,
}
impl DropperData {
  pub fn from_offset(offset: usize) -> Option<Self> {
    match offset {
      0 => Some(Self {facing: BlockFacingProperty::North, triggered: true}),
      1 => Some(Self {facing: BlockFacingProperty::North, triggered: false}),
      2 => Some(Self {facing: BlockFacingProperty::East, triggered: true}),
      3 => Some(Self {facing: BlockFacingProperty::East, triggered: false}),
      4 => Some(Self {facing: BlockFacingProperty::South, triggered: true}),
      5 => Some(Self {facing: BlockFacingProperty::South, triggered: false}),
      6 => Some(Self {facing: BlockFacingProperty::West, triggered: true}),
      7 => Some(Self {facing: BlockFacingProperty::West, triggered: false}),
      8 => Some(Self {facing: BlockFacingProperty::Up, triggered: true}),
      9 => Some(Self {facing: BlockFacingProperty::Up, triggered: false}),
      10 => Some(Self {facing: BlockFacingProperty::Down, triggered: true}),
      11 => Some(Self {facing: BlockFacingProperty::Down, triggered: false}),
      _ => None,
    }
  }
  pub fn to_offset(self) -> usize {
    match self.facing {
      BlockFacingProperty::North => match self.triggered {
        true => 0,
        false => 1,
      },
      BlockFacingProperty::East => match self.triggered {
        true => 2,
        false => 3,
      },
      BlockFacingProperty::South => match self.triggered {
        true => 4,
        false => 5,
      },
      BlockFacingProperty::West => match self.triggered {
        true => 6,
        false => 7,
      },
      BlockFacingProperty::Up => match self.triggered {
        true => 8,
        false => 9,
      },
      BlockFacingProperty::Down => match self.triggered {
        true => 10,
        false => 11,
      },
    }
  }
}
impl Default for DropperData {
  fn default() -> Self {
    Self {facing: BlockFacingProperty::North, triggered: false}
  }
}
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]
pub struct IronTrapdoorData {
  pub facing: CardinalFacingProperty,
  pub half: IronTrapdoorHalfProperty,
  pub open: bool,
  pub powered: bool,
  pub waterlogged: bool,
}
impl IronTrapdoorData {
  pub fn from_offset(offset: usize) -> Option<Self> {
    match offset {
      0 => Some(Self {facing: CardinalFacingProperty::North, half: IronTrapdoorHalfProperty::Top, open: true, powered: true, waterlogged: true}),
      1 => Some(Self {facing: CardinalFacingProperty::North, half: IronTrapdoorHalfProperty::Top, open: true, powered: true, waterlogged: false}),
      2 => Some(Self {facing: CardinalFacingProperty::North, half: IronTrapdoorHalfProperty::Top, open: true, powered: false, waterlogged: true}),
      3 => Some(Self {facing: CardinalFacingProperty::North, half: IronTrapdoorHalfProperty::Top, open: true, powered: false, waterlogged: false}),
      4 => Some(Self {facing: CardinalFacingProperty::North, half: IronTrapdoorHalfProperty::Top, open: false, powered: true, waterlogged: true}),
      5 => Some(Self {facing: CardinalFacingProperty::North, half: IronTrapdoorHalfProperty::Top, open: false, powered: true, waterlogged: false}),
      6 => Some(Self {facing: CardinalFacingProperty::North, half: IronTrapdoorHalfProperty::Top, open: false, powered: false, waterlogged: true}),
      7 => Some(Self {facing: CardinalFacingProperty::North, half: IronTrapdoorHalfProperty::Top, open: false, powered: false, waterlogged: false}),
      8 => Some(Self {facing: CardinalFacingProperty::North, half: IronTrapdoorHalfProperty::Bottom, open: true, powered: true, waterlogged: true}),
      9 => Some(Self {facing: CardinalFacingProperty::North, half: IronTrapdoorHalfProperty::Bottom, open: true, powered: true, waterlogged: false}),
      10 => Some(Self {facing: CardinalFacingProperty::North, half: IronTrapdoorHalfProperty::Bottom, open: true, powered: false, waterlogged: true}),
      11 => Some(Self {facing: CardinalFacingProperty::North, half: IronTrapdoorHalfProperty::Bottom, open: true, powered: false, waterlogged: false}),
      12 => Some(Self {facing: CardinalFacingProperty::North, half: IronTrapdoorHalfProperty::Bottom, open: false, powered: true, waterlogged: true}),
      13 => Some(Self {facing: CardinalFacingProperty::North, half: IronTrapdoorHalfProperty::Bottom, open: false, powered: true, waterlogged: false}),
      14 => Some(Self {facing: CardinalFacingProperty::North, half: IronTrapdoorHalfProperty::Bottom, open: false, powered: false, waterlogged: true}),
      15 => Some(Self {facing: CardinalFacingProperty::North, half: IronTrapdoorHalfProperty::Bottom, open: false, powered: false, waterlogged: false}),
      16 => Some(Self {facing: CardinalFacingProperty::South, half: IronTrapdoorHalfProperty::Top, open: true, powered: true, waterlogged: true}),
      17 => Some(Self {facing: CardinalFacingProperty::South, half: IronTrapdoorHalfProperty::Top, open: true, powered: true, waterlogged: false}),
      18 => Some(Self {facing: CardinalFacingProperty::South, half: IronTrapdoorHalfProperty::Top, open: true, powered: false, waterlogged: true}),
      19 => Some(Self {facing: CardinalFacingProperty::South, half: IronTrapdoorHalfProperty::Top, open: true, powered: false, waterlogged: false}),
      20 => Some(Self {facing: CardinalFacingProperty::South, half: IronTrapdoorHalfProperty::Top, open: false, powered: true, waterlogged: true}),
      21 => Some(Self {facing: CardinalFacingProperty::South, half: IronTrapdoorHalfProperty::Top, open: false, powered: true, waterlogged: false}),
      22 => Some(Self {facing: CardinalFacingProperty::South, half: IronTrapdoorHalfProperty::Top, open: false, powered: false, waterlogged: true}),
      23 => Some(Self {facing: CardinalFacingProperty::South, half: IronTrapdoorHalfProperty::Top, open: false, powered: false, waterlogged: false}),
      24 => Some(Self {facing: CardinalFacingProperty::South, half: IronTrapdoorHalfProperty::Bottom, open: true, powered: true, waterlogged: true}),
      25 => Some(Self {facing: CardinalFacingProperty::South, half: IronTrapdoorHalfProperty::Bottom, open: true, powered: true, waterlogged: false}),
      26 => Some(Self {facing: CardinalFacingProperty::South, half: IronTrapdoorHalfProperty::Bottom, open: true, powered: false, waterlogged: true}),
      27 => Some(Self {facing: CardinalFacingProperty::South, half: IronTrapdoorHalfProperty::Bottom, open: true, powered: false, waterlogged: false}),
      28 => Some(Self {facing: CardinalFacingProperty::South, half: IronTrapdoorHalfProperty::Bottom, open: false, powered: true, waterlogged: true}),
      29 => Some(Self {facing: CardinalFacingProperty::South, half: IronTrapdoorHalfProperty::Bottom, open: false, powered: true, waterlogged: false}),
      30 => Some(Self {facing: CardinalFacingProperty::South, half: IronTrapdoorHalfProperty::Bottom, open: false, powered: false, waterlogged: true}),
      31 => Some(Self {facing: CardinalFacingProperty::South, half: IronTrapdoorHalfProperty::Bottom, open: false, powered: false, waterlogged: false}),
      32 => Some(Self {facing: CardinalFacingProperty::West, half: IronTrapdoorHalfProperty::Top, open: true, powered: true, waterlogged: true}),
      33 => Some(Self {facing: CardinalFacingProperty::West, half: IronTrapdoorHalfProperty::Top, open: true, powered: true, waterlogged: false}),
      34 => Some(Self {facing: CardinalFacingProperty::West, half: IronTrapdoorHalfProperty::Top, open: true, powered: false, waterlogged: true}),
      35 => Some(Self {facing: CardinalFacingProperty::West, half: IronTrapdoorHalfProperty::Top, open: true, powered: false, waterlogged: false}),
      36 => Some(Self {facing: CardinalFacingProperty::West, half: IronTrapdoorHalfProperty::Top, open: false, powered: true, waterlogged: true}),
      37 => Some(Self {facing: CardinalFacingProperty::West, half: IronTrapdoorHalfProperty::Top, open: false, powered: true, waterlogged: false}),
      38 => Some(Self {facing: CardinalFacingProperty::West, half: IronTrapdoorHalfProperty::Top, open: false, powered: false, waterlogged: true}),
      39 => Some(Self {facing: CardinalFacingProperty::West, half: IronTrapdoorHalfProperty::Top, open: false, powered: false, waterlogged: false}),
      40 => Some(Self {facing: CardinalFacingProperty::West, half: IronTrapdoorHalfProperty::Bottom, open: true, powered: true, waterlogged: true}),
      41 => Some(Self {facing: CardinalFacingProperty::West, half: IronTrapdoorHalfProperty::Bottom, open: true, powered: true, waterlogged: false}),
      42 => Some(Self {facing: CardinalFacingProperty::West, half: IronTrapdoorHalfProperty::Bottom, open: true, powered: false, waterlogged: true}),
      43 => Some(Self {facing: CardinalFacingProperty::West, half: IronTrapdoorHalfProperty::Bottom, open: true, powered: false, waterlogged: false}),
      44 => Some(Self {facing: CardinalFacingProperty::West, half: IronTrapdoorHalfProperty::Bottom, open: false, powered: true, waterlogged: true}),
      45 => Some(Self {facing: CardinalFacingProperty::West, half: IronTrapdoorHalfProperty::Bottom, open: false, powered: true, waterlogged: false}),
      46 => Some(Self {facing: CardinalFacingProperty::West, half: IronTrapdoorHalfProperty::Bottom, open: false, powered: false, waterlogged: true}),
      47 => Some(Self {facing: CardinalFacingProperty::West, half: IronTrapdoorHalfProperty::Bottom, open: false, powered: false, waterlogged: false}),
      48 => Some(Self {facing: CardinalFacingProperty::East, half: IronTrapdoorHalfProperty::Top, open: true, powered: true, waterlogged: true}),
      49 => Some(Self {facing: CardinalFacingProperty::East, half: IronTrapdoorHalfProperty::Top, open: true, powered: true, waterlogged: false}),
      50 => Some(Self {facing: CardinalFacingProperty::East, half: IronTrapdoorHalfProperty::Top, open: true, powered: false, waterlogged: true}),
      51 => Some(Self {facing: CardinalFacingProperty::East, half: IronTrapdoorHalfProperty::Top, open: true, powered: false, waterlogged: false}),
      52 => Some(Self {facing: CardinalFacingProperty::East, half: IronTrapdoorHalfProperty::Top, open: false, powered: true, waterlogged: true}),
      53 => Some(Self {facing: CardinalFacingProperty::East, half: IronTrapdoorHalfProperty::Top, open: false, powered: true, waterlogged: false}),
      54 => Some(Self {facing: CardinalFacingProperty::East, half: IronTrapdoorHalfProperty::Top, open: false, powered: false, waterlogged: true}),
      55 => Some(Self {facing: CardinalFacingProperty::East, half: IronTrapdoorHalfProperty::Top, open: false, powered: false, waterlogged: false}),
      56 => Some(Self {facing: CardinalFacingProperty::East, half: IronTrapdoorHalfProperty::Bottom, open: true, powered: true, waterlogged: true}),
      57 => Some(Self {facing: CardinalFacingProperty::East, half: IronTrapdoorHalfProperty::Bottom, open: true, powered: true, waterlogged: false}),
      58 => Some(Self {facing: CardinalFacingProperty::East, half: IronTrapdoorHalfProperty::Bottom, open: true, powered: false, waterlogged: true}),
      59 => Some(Self {facing: CardinalFacingProperty::East, half: IronTrapdoorHalfProperty::Bottom, open: true, powered: false, waterlogged: false}),
      60 => Some(Self {facing: CardinalFacingProperty::East, half: IronTrapdoorHalfProperty::Bottom, open: false, powered: true, waterlogged: true}),
      61 => Some(Self {facing: CardinalFacingProperty::East, half: IronTrapdoorHalfProperty::Bottom, open: false, powered: true, waterlogged: false}),
      62 => Some(Self {facing: CardinalFacingProperty::East, half: IronTrapdoorHalfProperty::Bottom, open: false, powered: false, waterlogged: true}),
      63 => Some(Self {facing: CardinalFacingProperty::East, half: IronTrapdoorHalfProperty::Bottom, open: false, powered: false, waterlogged: false}),
      _ => None,
    }
  }
  pub fn to_offset(self) -> usize {
    match self.facing {
      CardinalFacingProperty::North => match self.half {
        IronTrapdoorHalfProperty::Top => match self.open {
          true => match self.powered {
            true => match self.waterlogged {
              true => 0,
              false => 1,
            },
            false => match self.waterlogged {
              true => 2,
              false => 3,
            },
          },
          false => match self.powered {
            true => match self.waterlogged {
              true => 4,
              false => 5,
            },
            false => match self.waterlogged {
              true => 6,
              false => 7,
            },
          },
        },
        IronTrapdoorHalfProperty::Bottom => match self.open {
          true => match self.powered {
            true => match self.waterlogged {
              true => 8,
              false => 9,
            },
            false => match self.waterlogged {
              true => 10,
              false => 11,
            },
          },
          false => match self.powered {
            true => match self.waterlogged {
              true => 12,
              false => 13,
            },
            false => match self.waterlogged {
              true => 14,
              false => 15,
            },
          },
        },
      },
      CardinalFacingProperty::South => match self.half {
        IronTrapdoorHalfProperty::Top => match self.open {
          true => match self.powered {
            true => match self.waterlogged {
              true => 16,
              false => 17,
            },
            false => match self.waterlogged {
              true => 18,
              false => 19,
            },
          },
          false => match self.powered {
            true => match self.waterlogged {
              true => 20,
              false => 21,
            },
            false => match self.waterlogged {
              true => 22,
              false => 23,
            },
          },
        },
        IronTrapdoorHalfProperty::Bottom => match self.open {
          true => match self.powered {
            true => match self.waterlogged {
              true => 24,
              false => 25,
            },
            false => match self.waterlogged {
              true => 26,
              false => 27,
            },
          },
          false => match self.powered {
            true => match self.waterlogged {
              true => 28,
              false => 29,
            },
            false => match self.waterlogged {
              true => 30,
              false => 31,
            },
          },
        },
      },
      CardinalFacingProperty::West => match self.half {
        IronTrapdoorHalfProperty::Top => match self.open {
          true => match self.powered {
            true => match self.waterlogged {
              true => 32,
              false => 33,
            },
            false => match self.waterlogged {
              true => 34,
              false => 35,
            },
          },
          false => match self.powered {
            true => match self.waterlogged {
              true => 36,
              false => 37,
            },
            false => match self.waterlogged {
              true => 38,
              false => 39,
            },
          },
        },
        IronTrapdoorHalfProperty::Bottom => match self.open {
          true => match self.powered {
            true => match self.waterlogged {
              true => 40,
              false => 41,
            },
            false => match self.waterlogged {
              true => 42,
              false => 43,
            },
          },
          false => match self.powered {
            true => match self.waterlogged {
              true => 44,
              false => 45,
            },
            false => match self.waterlogged {
              true => 46,
              false => 47,
            },
          },
        },
      },
      CardinalFacingProperty::East => match self.half {
        IronTrapdoorHalfProperty::Top => match self.open {
          true => match self.powered {
            true => match self.waterlogged {
              true => 48,
              false => 49,
            },
            false => match self.waterlogged {
              true => 50,
              false => 51,
            },
          },
          false => match self.powered {
            true => match self.waterlogged {
              true => 52,
              false => 53,
            },
            false => match self.waterlogged {
              true => 54,
              false => 55,
            },
          },
        },
        IronTrapdoorHalfProperty::Bottom => match self.open {
          true => match self.powered {
            true => match self.waterlogged {
              true => 56,
              false => 57,
            },
            false => match self.waterlogged {
              true => 58,
              false => 59,
            },
          },
          false => match self.powered {
            true => match self.waterlogged {
              true => 60,
              false => 61,
            },
            false => match self.waterlogged {
              true => 62,
              false => 63,
            },
          },
        },
      },
    }
  }
}
impl Default for IronTrapdoorData {
  fn default() -> Self {
    Self {facing: CardinalFacingProperty::North, half: IronTrapdoorHalfProperty::Bottom, open: false, powered: false, waterlogged: false}
  }
}
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]
pub struct SlabData {
  pub r#type: SlabTypeProperty,
  pub waterlogged: bool,
}
impl SlabData {
  pub fn from_offset(offset: usize) -> Option<Self> {
    match offset {
      0 => Some(Self {r#type: SlabTypeProperty::Top, waterlogged: true}),
      1 => Some(Self {r#type: SlabTypeProperty::Top, waterlogged: false}),
      2 => Some(Self {r#type: SlabTypeProperty::Bottom, waterlogged: true}),
      3 => Some(Self {r#type: SlabTypeProperty::Bottom, waterlogged: false}),
      4 => Some(Self {r#type: SlabTypeProperty::Double, waterlogged: true}),
      5 => Some(Self {r#type: SlabTypeProperty::Double, waterlogged: false}),
      _ => None,
    }
  }
  pub fn to_offset(self) -> usize {
    match self.r#type {
      SlabTypeProperty::Top => match self.waterlogged {
        true => 0,
        false => 1,
      },
      SlabTypeProperty::Bottom => match self.waterlogged {
        true => 2,
        false => 3,
      },
      SlabTypeProperty::Double => match self.waterlogged {
        true => 4,
        false => 5,
      },
    }
  }
}
impl Default for SlabData {
  fn default() -> Self {
    Self {r#type: SlabTypeProperty::Bottom, waterlogged: false}
  }
}
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]
pub struct SunflowerData {
  pub half: SunflowerHalfProperty,
}
impl SunflowerData {
  pub fn from_offset(offset: usize) -> Option<Self> {
    match offset {
      0 => Some(Self {half: SunflowerHalfProperty::Upper}),
      1 => Some(Self {half: SunflowerHalfProperty::Lower}),
      _ => None,
    }
  }
  pub fn to_offset(self) -> usize {
    match self.half {
      SunflowerHalfProperty::Upper => 0,
      SunflowerHalfProperty::Lower => 1,
    }
  }
}
impl Default for SunflowerData {
  fn default() -> Self {
    Self {half: SunflowerHalfProperty::Lower}
  }
}
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]
pub struct LilacData {
  pub half: LilacHalfProperty,
}
impl LilacData {
  pub fn from_offset(offset: usize) -> Option<Self> {
    match offset {
      0 => Some(Self {half: LilacHalfProperty::Upper}),
      1 => Some(Self {half: LilacHalfProperty::Lower}),
      _ => None,
    }
  }
  pub fn to_offset(self) -> usize {
    match self.half {
      LilacHalfProperty::Upper => 0,
      LilacHalfProperty::Lower => 1,
    }
  }
}
impl Default for LilacData {
  fn default() -> Self {
    Self {half: LilacHalfProperty::Lower}
  }
}
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]
pub struct RoseBushData {
  pub half: RoseBushHalfProperty,
}
impl RoseBushData {
  pub fn from_offset(offset: usize) -> Option<Self> {
    match offset {
      0 => Some(Self {half: RoseBushHalfProperty::Upper}),
      1 => Some(Self {half: RoseBushHalfProperty::Lower}),
      _ => None,
    }
  }
  pub fn to_offset(self) -> usize {
    match self.half {
      RoseBushHalfProperty::Upper => 0,
      RoseBushHalfProperty::Lower => 1,
    }
  }
}
impl Default for RoseBushData {
  fn default() -> Self {
    Self {half: RoseBushHalfProperty::Lower}
  }
}
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]
pub struct PeonyData {
  pub half: PeonyHalfProperty,
}
impl PeonyData {
  pub fn from_offset(offset: usize) -> Option<Self> {
    match offset {
      0 => Some(Self {half: PeonyHalfProperty::Upper}),
      1 => Some(Self {half: PeonyHalfProperty::Lower}),
      _ => None,
    }
  }
  pub fn to_offset(self) -> usize {
    match self.half {
      PeonyHalfProperty::Upper => 0,
      PeonyHalfProperty::Lower => 1,
    }
  }
}
impl Default for PeonyData {
  fn default() -> Self {
    Self {half: PeonyHalfProperty::Lower}
  }
}
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]
pub struct TallGrassData {
  pub half: TallGrassHalfProperty,
}
impl TallGrassData {
  pub fn from_offset(offset: usize) -> Option<Self> {
    match offset {
      0 => Some(Self {half: TallGrassHalfProperty::Upper}),
      1 => Some(Self {half: TallGrassHalfProperty::Lower}),
      _ => None,
    }
  }
  pub fn to_offset(self) -> usize {
    match self.half {
      TallGrassHalfProperty::Upper => 0,
      TallGrassHalfProperty::Lower => 1,
    }
  }
}
impl Default for TallGrassData {
  fn default() -> Self {
    Self {half: TallGrassHalfProperty::Lower}
  }
}
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]
pub struct LargeFernData {
  pub half: LargeFernHalfProperty,
}
impl LargeFernData {
  pub fn from_offset(offset: usize) -> Option<Self> {
    match offset {
      0 => Some(Self {half: LargeFernHalfProperty::Upper}),
      1 => Some(Self {half: LargeFernHalfProperty::Lower}),
      _ => None,
    }
  }
  pub fn to_offset(self) -> usize {
    match self.half {
      LargeFernHalfProperty::Upper => 0,
      LargeFernHalfProperty::Lower => 1,
    }
  }
}
impl Default for LargeFernData {
  fn default() -> Self {
    Self {half: LargeFernHalfProperty::Lower}
  }
}
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]
pub struct BannerData {
  pub rotation: NumberFrom0To15Property,
}
impl BannerData {
  pub fn from_offset(offset: usize) -> Option<Self> {
    match offset {
      0 => Some(Self {rotation: NumberFrom0To15Property::new(0)}),
      1 => Some(Self {rotation: NumberFrom0To15Property::new(1)}),
      2 => Some(Self {rotation: NumberFrom0To15Property::new(2)}),
      3 => Some(Self {rotation: NumberFrom0To15Property::new(3)}),
      4 => Some(Self {rotation: NumberFrom0To15Property::new(4)}),
      5 => Some(Self {rotation: NumberFrom0To15Property::new(5)}),
      6 => Some(Self {rotation: NumberFrom0To15Property::new(6)}),
      7 => Some(Self {rotation: NumberFrom0To15Property::new(7)}),
      8 => Some(Self {rotation: NumberFrom0To15Property::new(8)}),
      9 => Some(Self {rotation: NumberFrom0To15Property::new(9)}),
      10 => Some(Self {rotation: NumberFrom0To15Property::new(10)}),
      11 => Some(Self {rotation: NumberFrom0To15Property::new(11)}),
      12 => Some(Self {rotation: NumberFrom0To15Property::new(12)}),
      13 => Some(Self {rotation: NumberFrom0To15Property::new(13)}),
      14 => Some(Self {rotation: NumberFrom0To15Property::new(14)}),
      15 => Some(Self {rotation: NumberFrom0To15Property::new(15)}),
      _ => None,
    }
  }
  pub fn to_offset(self) -> usize {
    match self.rotation.value() {
      0 => 0,
      1 => 1,
      2 => 2,
      3 => 3,
      4 => 4,
      5 => 5,
      6 => 6,
      7 => 7,
      8 => 8,
      9 => 9,
      10 => 10,
      11 => 11,
      12 => 12,
      13 => 13,
      14 => 14,
      15 => 15,
      _ => panic!("Illegal Block State"),
    }
  }
}
impl Default for BannerData {
  fn default() -> Self {
    Self {rotation: NumberFrom0To15Property::new(0)}
  }
}
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]
pub struct BlockFaceData {
  pub facing: BlockFacingProperty,
}
impl BlockFaceData {
  pub fn from_offset(offset: usize) -> Option<Self> {
    match offset {
      0 => Some(Self {facing: BlockFacingProperty::North}),
      1 => Some(Self {facing: BlockFacingProperty::East}),
      2 => Some(Self {facing: BlockFacingProperty::South}),
      3 => Some(Self {facing: BlockFacingProperty::West}),
      4 => Some(Self {facing: BlockFacingProperty::Up}),
      5 => Some(Self {facing: BlockFacingProperty::Down}),
      _ => None,
    }
  }
  pub fn to_offset(self) -> usize {
    match self.facing {
      BlockFacingProperty::North => 0,
      BlockFacingProperty::East => 1,
      BlockFacingProperty::South => 2,
      BlockFacingProperty::West => 3,
      BlockFacingProperty::Up => 4,
      BlockFacingProperty::Down => 5,
    }
  }
}
impl Default for BlockFaceData {
  fn default() -> Self {
    Self {facing: BlockFacingProperty::Up}
  }
}
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]
pub struct ChorusPlantData {
  pub down: bool,
  pub east: bool,
  pub north: bool,
  pub south: bool,
  pub up: bool,
  pub west: bool,
}
impl ChorusPlantData {
  pub fn from_offset(offset: usize) -> Option<Self> {
    match offset {
      0 => Some(Self {down: true, east: true, north: true, south: true, up: true, west: true}),
      1 => Some(Self {down: true, east: true, north: true, south: true, up: true, west: false}),
      2 => Some(Self {down: true, east: true, north: true, south: true, up: false, west: true}),
      3 => Some(Self {down: true, east: true, north: true, south: true, up: false, west: false}),
      4 => Some(Self {down: true, east: true, north: true, south: false, up: true, west: true}),
      5 => Some(Self {down: true, east: true, north: true, south: false, up: true, west: false}),
      6 => Some(Self {down: true, east: true, north: true, south: false, up: false, west: true}),
      7 => Some(Self {down: true, east: true, north: true, south: false, up: false, west: false}),
      8 => Some(Self {down: true, east: true, north: false, south: true, up: true, west: true}),
      9 => Some(Self {down: true, east: true, north: false, south: true, up: true, west: false}),
      10 => Some(Self {down: true, east: true, north: false, south: true, up: false, west: true}),
      11 => Some(Self {down: true, east: true, north: false, south: true, up: false, west: false}),
      12 => Some(Self {down: true, east: true, north: false, south: false, up: true, west: true}),
      13 => Some(Self {down: true, east: true, north: false, south: false, up: true, west: false}),
      14 => Some(Self {down: true, east: true, north: false, south: false, up: false, west: true}),
      15 => Some(Self {down: true, east: true, north: false, south: false, up: false, west: false}),
      16 => Some(Self {down: true, east: false, north: true, south: true, up: true, west: true}),
      17 => Some(Self {down: true, east: false, north: true, south: true, up: true, west: false}),
      18 => Some(Self {down: true, east: false, north: true, south: true, up: false, west: true}),
      19 => Some(Self {down: true, east: false, north: true, south: true, up: false, west: false}),
      20 => Some(Self {down: true, east: false, north: true, south: false, up: true, west: true}),
      21 => Some(Self {down: true, east: false, north: true, south: false, up: true, west: false}),
      22 => Some(Self {down: true, east: false, north: true, south: false, up: false, west: true}),
      23 => Some(Self {down: true, east: false, north: true, south: false, up: false, west: false}),
      24 => Some(Self {down: true, east: false, north: false, south: true, up: true, west: true}),
      25 => Some(Self {down: true, east: false, north: false, south: true, up: true, west: false}),
      26 => Some(Self {down: true, east: false, north: false, south: true, up: false, west: true}),
      27 => Some(Self {down: true, east: false, north: false, south: true, up: false, west: false}),
      28 => Some(Self {down: true, east: false, north: false, south: false, up: true, west: true}),
      29 => Some(Self {down: true, east: false, north: false, south: false, up: true, west: false}),
      30 => Some(Self {down: true, east: false, north: false, south: false, up: false, west: true}),
      31 => Some(Self {down: true, east: false, north: false, south: false, up: false, west: false}),
      32 => Some(Self {down: false, east: true, north: true, south: true, up: true, west: true}),
      33 => Some(Self {down: false, east: true, north: true, south: true, up: true, west: false}),
      34 => Some(Self {down: false, east: true, north: true, south: true, up: false, west: true}),
      35 => Some(Self {down: false, east: true, north: true, south: true, up: false, west: false}),
      36 => Some(Self {down: false, east: true, north: true, south: false, up: true, west: true}),
      37 => Some(Self {down: false, east: true, north: true, south: false, up: true, west: false}),
      38 => Some(Self {down: false, east: true, north: true, south: false, up: false, west: true}),
      39 => Some(Self {down: false, east: true, north: true, south: false, up: false, west: false}),
      40 => Some(Self {down: false, east: true, north: false, south: true, up: true, west: true}),
      41 => Some(Self {down: false, east: true, north: false, south: true, up: true, west: false}),
      42 => Some(Self {down: false, east: true, north: false, south: true, up: false, west: true}),
      43 => Some(Self {down: false, east: true, north: false, south: true, up: false, west: false}),
      44 => Some(Self {down: false, east: true, north: false, south: false, up: true, west: true}),
      45 => Some(Self {down: false, east: true, north: false, south: false, up: true, west: false}),
      46 => Some(Self {down: false, east: true, north: false, south: false, up: false, west: true}),
      47 => Some(Self {down: false, east: true, north: false, south: false, up: false, west: false}),
      48 => Some(Self {down: false, east: false, north: true, south: true, up: true, west: true}),
      49 => Some(Self {down: false, east: false, north: true, south: true, up: true, west: false}),
      50 => Some(Self {down: false, east: false, north: true, south: true, up: false, west: true}),
      51 => Some(Self {down: false, east: false, north: true, south: true, up: false, west: false}),
      52 => Some(Self {down: false, east: false, north: true, south: false, up: true, west: true}),
      53 => Some(Self {down: false, east: false, north: true, south: false, up: true, west: false}),
      54 => Some(Self {down: false, east: false, north: true, south: false, up: false, west: true}),
      55 => Some(Self {down: false, east: false, north: true, south: false, up: false, west: false}),
      56 => Some(Self {down: false, east: false, north: false, south: true, up: true, west: true}),
      57 => Some(Self {down: false, east: false, north: false, south: true, up: true, west: false}),
      58 => Some(Self {down: false, east: false, north: false, south: true, up: false, west: true}),
      59 => Some(Self {down: false, east: false, north: false, south: true, up: false, west: false}),
      60 => Some(Self {down: false, east: false, north: false, south: false, up: true, west: true}),
      61 => Some(Self {down: false, east: false, north: false, south: false, up: true, west: false}),
      62 => Some(Self {down: false, east: false, north: false, south: false, up: false, west: true}),
      63 => Some(Self {down: false, east: false, north: false, south: false, up: false, west: false}),
      _ => None,
    }
  }
  pub fn to_offset(self) -> usize {
    match self.down {
      true => match self.east {
        true => match self.north {
          true => match self.south {
            true => match self.up {
              true => match self.west {
                true => 0,
                false => 1,
              },
              false => match self.west {
                true => 2,
                false => 3,
              },
            },
            false => match self.up {
              true => match self.west {
                true => 4,
                false => 5,
              },
              false => match self.west {
                true => 6,
                false => 7,
              },
            },
          },
          false => match self.south {
            true => match self.up {
              true => match self.west {
                true => 8,
                false => 9,
              },
              false => match self.west {
                true => 10,
                false => 11,
              },
            },
            false => match self.up {
              true => match self.west {
                true => 12,
                false => 13,
              },
              false => match self.west {
                true => 14,
                false => 15,
              },
            },
          },
        },
        false => match self.north {
          true => match self.south {
            true => match self.up {
              true => match self.west {
                true => 16,
                false => 17,
              },
              false => match self.west {
                true => 18,
                false => 19,
              },
            },
            false => match self.up {
              true => match self.west {
                true => 20,
                false => 21,
              },
              false => match self.west {
                true => 22,
                false => 23,
              },
            },
          },
          false => match self.south {
            true => match self.up {
              true => match self.west {
                true => 24,
                false => 25,
              },
              false => match self.west {
                true => 26,
                false => 27,
              },
            },
            false => match self.up {
              true => match self.west {
                true => 28,
                false => 29,
              },
              false => match self.west {
                true => 30,
                false => 31,
              },
            },
          },
        },
      },
      false => match self.east {
        true => match self.north {
          true => match self.south {
            true => match self.up {
              true => match self.west {
                true => 32,
                false => 33,
              },
              false => match self.west {
                true => 34,
                false => 35,
              },
            },
            false => match self.up {
              true => match self.west {
                true => 36,
                false => 37,
              },
              false => match self.west {
                true => 38,
                false => 39,
              },
            },
          },
          false => match self.south {
            true => match self.up {
              true => match self.west {
                true => 40,
                false => 41,
              },
              false => match self.west {
                true => 42,
                false => 43,
              },
            },
            false => match self.up {
              true => match self.west {
                true => 44,
                false => 45,
              },
              false => match self.west {
                true => 46,
                false => 47,
              },
            },
          },
        },
        false => match self.north {
          true => match self.south {
            true => match self.up {
              true => match self.west {
                true => 48,
                false => 49,
              },
              false => match self.west {
                true => 50,
                false => 51,
              },
            },
            false => match self.up {
              true => match self.west {
                true => 52,
                false => 53,
              },
              false => match self.west {
                true => 54,
                false => 55,
              },
            },
          },
          false => match self.south {
            true => match self.up {
              true => match self.west {
                true => 56,
                false => 57,
              },
              false => match self.west {
                true => 58,
                false => 59,
              },
            },
            false => match self.up {
              true => match self.west {
                true => 60,
                false => 61,
              },
              false => match self.west {
                true => 62,
                false => 63,
              },
            },
          },
        },
      },
    }
  }
}
impl Default for ChorusPlantData {
  fn default() -> Self {
    Self {down: false, east: false, north: false, south: false, up: false, west: false}
  }
}
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]
pub struct ChorusFlowerData {
  pub age: NumberFrom0To5Property,
}
impl ChorusFlowerData {
  pub fn from_offset(offset: usize) -> Option<Self> {
    match offset {
      0 => Some(Self {age: NumberFrom0To5Property::new(0)}),
      1 => Some(Self {age: NumberFrom0To5Property::new(1)}),
      2 => Some(Self {age: NumberFrom0To5Property::new(2)}),
      3 => Some(Self {age: NumberFrom0To5Property::new(3)}),
      4 => Some(Self {age: NumberFrom0To5Property::new(4)}),
      5 => Some(Self {age: NumberFrom0To5Property::new(5)}),
      _ => None,
    }
  }
  pub fn to_offset(self) -> usize {
    match self.age.value() {
      0 => 0,
      1 => 1,
      2 => 2,
      3 => 3,
      4 => 4,
      5 => 5,
      _ => panic!("Illegal Block State"),
    }
  }
}
impl Default for ChorusFlowerData {
  fn default() -> Self {
    Self {age: NumberFrom0To5Property::new(0)}
  }
}
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]
pub struct BeetrootsData {
  pub age: NumberFrom0To3Property,
}
impl BeetrootsData {
  pub fn from_offset(offset: usize) -> Option<Self> {
    match offset {
      0 => Some(Self {age: NumberFrom0To3Property::new(0)}),
      1 => Some(Self {age: NumberFrom0To3Property::new(1)}),
      2 => Some(Self {age: NumberFrom0To3Property::new(2)}),
      3 => Some(Self {age: NumberFrom0To3Property::new(3)}),
      _ => None,
    }
  }
  pub fn to_offset(self) -> usize {
    match self.age.value() {
      0 => 0,
      1 => 1,
      2 => 2,
      3 => 3,
      _ => panic!("Illegal Block State"),
    }
  }
}
impl Default for BeetrootsData {
  fn default() -> Self {
    Self {age: NumberFrom0To3Property::new(0)}
  }
}
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]
pub struct FrostedIceData {
  pub age: NumberFrom0To3Property,
}
impl FrostedIceData {
  pub fn from_offset(offset: usize) -> Option<Self> {
    match offset {
      0 => Some(Self {age: NumberFrom0To3Property::new(0)}),
      1 => Some(Self {age: NumberFrom0To3Property::new(1)}),
      2 => Some(Self {age: NumberFrom0To3Property::new(2)}),
      3 => Some(Self {age: NumberFrom0To3Property::new(3)}),
      _ => None,
    }
  }
  pub fn to_offset(self) -> usize {
    match self.age.value() {
      0 => 0,
      1 => 1,
      2 => 2,
      3 => 3,
      _ => panic!("Illegal Block State"),
    }
  }
}
impl Default for FrostedIceData {
  fn default() -> Self {
    Self {age: NumberFrom0To3Property::new(0)}
  }
}
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]
pub struct ObserverData {
  pub facing: BlockFacingProperty,
  pub powered: bool,
}
impl ObserverData {
  pub fn from_offset(offset: usize) -> Option<Self> {
    match offset {
      0 => Some(Self {facing: BlockFacingProperty::North, powered: true}),
      1 => Some(Self {facing: BlockFacingProperty::North, powered: false}),
      2 => Some(Self {facing: BlockFacingProperty::East, powered: true}),
      3 => Some(Self {facing: BlockFacingProperty::East, powered: false}),
      4 => Some(Self {facing: BlockFacingProperty::South, powered: true}),
      5 => Some(Self {facing: BlockFacingProperty::South, powered: false}),
      6 => Some(Self {facing: BlockFacingProperty::West, powered: true}),
      7 => Some(Self {facing: BlockFacingProperty::West, powered: false}),
      8 => Some(Self {facing: BlockFacingProperty::Up, powered: true}),
      9 => Some(Self {facing: BlockFacingProperty::Up, powered: false}),
      10 => Some(Self {facing: BlockFacingProperty::Down, powered: true}),
      11 => Some(Self {facing: BlockFacingProperty::Down, powered: false}),
      _ => None,
    }
  }
  pub fn to_offset(self) -> usize {
    match self.facing {
      BlockFacingProperty::North => match self.powered {
        true => 0,
        false => 1,
      },
      BlockFacingProperty::East => match self.powered {
        true => 2,
        false => 3,
      },
      BlockFacingProperty::South => match self.powered {
        true => 4,
        false => 5,
      },
      BlockFacingProperty::West => match self.powered {
        true => 6,
        false => 7,
      },
      BlockFacingProperty::Up => match self.powered {
        true => 8,
        false => 9,
      },
      BlockFacingProperty::Down => match self.powered {
        true => 10,
        false => 11,
      },
    }
  }
}
impl Default for ObserverData {
  fn default() -> Self {
    Self {facing: BlockFacingProperty::South, powered: false}
  }
}
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]
pub struct KelpData {
  pub age: NumberFrom0To25Property,
}
impl KelpData {
  pub fn from_offset(offset: usize) -> Option<Self> {
    match offset {
      0 => Some(Self {age: NumberFrom0To25Property::new(0)}),
      1 => Some(Self {age: NumberFrom0To25Property::new(1)}),
      2 => Some(Self {age: NumberFrom0To25Property::new(2)}),
      3 => Some(Self {age: NumberFrom0To25Property::new(3)}),
      4 => Some(Self {age: NumberFrom0To25Property::new(4)}),
      5 => Some(Self {age: NumberFrom0To25Property::new(5)}),
      6 => Some(Self {age: NumberFrom0To25Property::new(6)}),
      7 => Some(Self {age: NumberFrom0To25Property::new(7)}),
      8 => Some(Self {age: NumberFrom0To25Property::new(8)}),
      9 => Some(Self {age: NumberFrom0To25Property::new(9)}),
      10 => Some(Self {age: NumberFrom0To25Property::new(10)}),
      11 => Some(Self {age: NumberFrom0To25Property::new(11)}),
      12 => Some(Self {age: NumberFrom0To25Property::new(12)}),
      13 => Some(Self {age: NumberFrom0To25Property::new(13)}),
      14 => Some(Self {age: NumberFrom0To25Property::new(14)}),
      15 => Some(Self {age: NumberFrom0To25Property::new(15)}),
      16 => Some(Self {age: NumberFrom0To25Property::new(16)}),
      17 => Some(Self {age: NumberFrom0To25Property::new(17)}),
      18 => Some(Self {age: NumberFrom0To25Property::new(18)}),
      19 => Some(Self {age: NumberFrom0To25Property::new(19)}),
      20 => Some(Self {age: NumberFrom0To25Property::new(20)}),
      21 => Some(Self {age: NumberFrom0To25Property::new(21)}),
      22 => Some(Self {age: NumberFrom0To25Property::new(22)}),
      23 => Some(Self {age: NumberFrom0To25Property::new(23)}),
      24 => Some(Self {age: NumberFrom0To25Property::new(24)}),
      25 => Some(Self {age: NumberFrom0To25Property::new(25)}),
      _ => None,
    }
  }
  pub fn to_offset(self) -> usize {
    match self.age.value() {
      0 => 0,
      1 => 1,
      2 => 2,
      3 => 3,
      4 => 4,
      5 => 5,
      6 => 6,
      7 => 7,
      8 => 8,
      9 => 9,
      10 => 10,
      11 => 11,
      12 => 12,
      13 => 13,
      14 => 14,
      15 => 15,
      16 => 16,
      17 => 17,
      18 => 18,
      19 => 19,
      20 => 20,
      21 => 21,
      22 => 22,
      23 => 23,
      24 => 24,
      25 => 25,
      _ => panic!("Illegal Block State"),
    }
  }
}
impl Default for KelpData {
  fn default() -> Self {
    Self {age: NumberFrom0To25Property::new(0)}
  }
}
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]
pub struct TurtleEggData {
  pub eggs: NumberFrom1To4Property,
  pub hatch: NumberFrom0To2Property,
}
impl TurtleEggData {
  pub fn from_offset(offset: usize) -> Option<Self> {
    match offset {
      0 => Some(Self {eggs: NumberFrom1To4Property::new(1), hatch: NumberFrom0To2Property::new(0)}),
      1 => Some(Self {eggs: NumberFrom1To4Property::new(1), hatch: NumberFrom0To2Property::new(1)}),
      2 => Some(Self {eggs: NumberFrom1To4Property::new(1), hatch: NumberFrom0To2Property::new(2)}),
      3 => Some(Self {eggs: NumberFrom1To4Property::new(2), hatch: NumberFrom0To2Property::new(0)}),
      4 => Some(Self {eggs: NumberFrom1To4Property::new(2), hatch: NumberFrom0To2Property::new(1)}),
      5 => Some(Self {eggs: NumberFrom1To4Property::new(2), hatch: NumberFrom0To2Property::new(2)}),
      6 => Some(Self {eggs: NumberFrom1To4Property::new(3), hatch: NumberFrom0To2Property::new(0)}),
      7 => Some(Self {eggs: NumberFrom1To4Property::new(3), hatch: NumberFrom0To2Property::new(1)}),
      8 => Some(Self {eggs: NumberFrom1To4Property::new(3), hatch: NumberFrom0To2Property::new(2)}),
      9 => Some(Self {eggs: NumberFrom1To4Property::new(4), hatch: NumberFrom0To2Property::new(0)}),
      10 => Some(Self {eggs: NumberFrom1To4Property::new(4), hatch: NumberFrom0To2Property::new(1)}),
      11 => Some(Self {eggs: NumberFrom1To4Property::new(4), hatch: NumberFrom0To2Property::new(2)}),
      _ => None,
    }
  }
  pub fn to_offset(self) -> usize {
    match self.eggs.value() {
      1 => match self.hatch.value() {
        0 => 0,
        1 => 1,
        2 => 2,
        _ => panic!("Illegal Block State"),
      },
      2 => match self.hatch.value() {
        0 => 3,
        1 => 4,
        2 => 5,
        _ => panic!("Illegal Block State"),
      },
      3 => match self.hatch.value() {
        0 => 6,
        1 => 7,
        2 => 8,
        _ => panic!("Illegal Block State"),
      },
      4 => match self.hatch.value() {
        0 => 9,
        1 => 10,
        2 => 11,
        _ => panic!("Illegal Block State"),
      },
      _ => panic!("Illegal Block State"),
    }
  }
}
impl Default for TurtleEggData {
  fn default() -> Self {
    Self {eggs: NumberFrom1To4Property::new(1), hatch: NumberFrom0To2Property::new(0)}
  }
}
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]
pub struct WaterloggedData {
  pub waterlogged: bool,
}
impl WaterloggedData {
  pub fn from_offset(offset: usize) -> Option<Self> {
    match offset {
      0 => Some(Self {waterlogged: true}),
      1 => Some(Self {waterlogged: false}),
      _ => None,
    }
  }
  pub fn to_offset(self) -> usize {
    match self.waterlogged {
      true => 0,
      false => 1,
    }
  }
}
impl Default for WaterloggedData {
  fn default() -> Self {
    Self {waterlogged: true}
  }
}
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]
pub struct CoralWallFanData {
  pub facing: CardinalFacingProperty,
  pub waterlogged: bool,
}
impl CoralWallFanData {
  pub fn from_offset(offset: usize) -> Option<Self> {
    match offset {
      0 => Some(Self {facing: CardinalFacingProperty::North, waterlogged: true}),
      1 => Some(Self {facing: CardinalFacingProperty::North, waterlogged: false}),
      2 => Some(Self {facing: CardinalFacingProperty::South, waterlogged: true}),
      3 => Some(Self {facing: CardinalFacingProperty::South, waterlogged: false}),
      4 => Some(Self {facing: CardinalFacingProperty::West, waterlogged: true}),
      5 => Some(Self {facing: CardinalFacingProperty::West, waterlogged: false}),
      6 => Some(Self {facing: CardinalFacingProperty::East, waterlogged: true}),
      7 => Some(Self {facing: CardinalFacingProperty::East, waterlogged: false}),
      _ => None,
    }
  }
  pub fn to_offset(self) -> usize {
    match self.facing {
      CardinalFacingProperty::North => match self.waterlogged {
        true => 0,
        false => 1,
      },
      CardinalFacingProperty::South => match self.waterlogged {
        true => 2,
        false => 3,
      },
      CardinalFacingProperty::West => match self.waterlogged {
        true => 4,
        false => 5,
      },
      CardinalFacingProperty::East => match self.waterlogged {
        true => 6,
        false => 7,
      },
    }
  }
}
impl Default for CoralWallFanData {
  fn default() -> Self {
    Self {facing: CardinalFacingProperty::North, waterlogged: true}
  }
}
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]
pub struct SeaPickleData {
  pub pickles: NumberFrom1To4Property,
  pub waterlogged: bool,
}
impl SeaPickleData {
  pub fn from_offset(offset: usize) -> Option<Self> {
    match offset {
      0 => Some(Self {pickles: NumberFrom1To4Property::new(1), waterlogged: true}),
      1 => Some(Self {pickles: NumberFrom1To4Property::new(1), waterlogged: false}),
      2 => Some(Self {pickles: NumberFrom1To4Property::new(2), waterlogged: true}),
      3 => Some(Self {pickles: NumberFrom1To4Property::new(2), waterlogged: false}),
      4 => Some(Self {pickles: NumberFrom1To4Property::new(3), waterlogged: true}),
      5 => Some(Self {pickles: NumberFrom1To4Property::new(3), waterlogged: false}),
      6 => Some(Self {pickles: NumberFrom1To4Property::new(4), waterlogged: true}),
      7 => Some(Self {pickles: NumberFrom1To4Property::new(4), waterlogged: false}),
      _ => None,
    }
  }
  pub fn to_offset(self) -> usize {
    match self.pickles.value() {
      1 => match self.waterlogged {
        true => 0,
        false => 1,
      },
      2 => match self.waterlogged {
        true => 2,
        false => 3,
      },
      3 => match self.waterlogged {
        true => 4,
        false => 5,
      },
      4 => match self.waterlogged {
        true => 6,
        false => 7,
      },
      _ => panic!("Illegal Block State"),
    }
  }
}
impl Default for SeaPickleData {
  fn default() -> Self {
    Self {pickles: NumberFrom1To4Property::new(1), waterlogged: true}
  }
}
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]
pub struct BambooData {
  pub age: NumberFrom0To1Property,
  pub leaves: BambooLeavesProperty,
  pub stage: NumberFrom0To1Property,
}
impl BambooData {
  pub fn from_offset(offset: usize) -> Option<Self> {
    match offset {
      0 => Some(Self {age: NumberFrom0To1Property::new(0), leaves: BambooLeavesProperty::None, stage: NumberFrom0To1Property::new(0)}),
      1 => Some(Self {age: NumberFrom0To1Property::new(0), leaves: BambooLeavesProperty::None, stage: NumberFrom0To1Property::new(1)}),
      2 => Some(Self {age: NumberFrom0To1Property::new(0), leaves: BambooLeavesProperty::Small, stage: NumberFrom0To1Property::new(0)}),
      3 => Some(Self {age: NumberFrom0To1Property::new(0), leaves: BambooLeavesProperty::Small, stage: NumberFrom0To1Property::new(1)}),
      4 => Some(Self {age: NumberFrom0To1Property::new(0), leaves: BambooLeavesProperty::Large, stage: NumberFrom0To1Property::new(0)}),
      5 => Some(Self {age: NumberFrom0To1Property::new(0), leaves: BambooLeavesProperty::Large, stage: NumberFrom0To1Property::new(1)}),
      6 => Some(Self {age: NumberFrom0To1Property::new(1), leaves: BambooLeavesProperty::None, stage: NumberFrom0To1Property::new(0)}),
      7 => Some(Self {age: NumberFrom0To1Property::new(1), leaves: BambooLeavesProperty::None, stage: NumberFrom0To1Property::new(1)}),
      8 => Some(Self {age: NumberFrom0To1Property::new(1), leaves: BambooLeavesProperty::Small, stage: NumberFrom0To1Property::new(0)}),
      9 => Some(Self {age: NumberFrom0To1Property::new(1), leaves: BambooLeavesProperty::Small, stage: NumberFrom0To1Property::new(1)}),
      10 => Some(Self {age: NumberFrom0To1Property::new(1), leaves: BambooLeavesProperty::Large, stage: NumberFrom0To1Property::new(0)}),
      11 => Some(Self {age: NumberFrom0To1Property::new(1), leaves: BambooLeavesProperty::Large, stage: NumberFrom0To1Property::new(1)}),
      _ => None,
    }
  }
  pub fn to_offset(self) -> usize {
    match self.age.value() {
      0 => match self.leaves {
        BambooLeavesProperty::None => match self.stage.value() {
          0 => 0,
          1 => 1,
          _ => panic!("Illegal Block State"),
        },
        BambooLeavesProperty::Small => match self.stage.value() {
          0 => 2,
          1 => 3,
          _ => panic!("Illegal Block State"),
        },
        BambooLeavesProperty::Large => match self.stage.value() {
          0 => 4,
          1 => 5,
          _ => panic!("Illegal Block State"),
        },
      },
      1 => match self.leaves {
        BambooLeavesProperty::None => match self.stage.value() {
          0 => 6,
          1 => 7,
          _ => panic!("Illegal Block State"),
        },
        BambooLeavesProperty::Small => match self.stage.value() {
          0 => 8,
          1 => 9,
          _ => panic!("Illegal Block State"),
        },
        BambooLeavesProperty::Large => match self.stage.value() {
          0 => 10,
          1 => 11,
          _ => panic!("Illegal Block State"),
        },
      },
      _ => panic!("Illegal Block State"),
    }
  }
}
impl Default for BambooData {
  fn default() -> Self {
    Self {age: NumberFrom0To1Property::new(0), leaves: BambooLeavesProperty::None, stage: NumberFrom0To1Property::new(0)}
  }
}
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]
pub struct BubbleColumnData {
  pub drag: bool,
}
impl BubbleColumnData {
  pub fn from_offset(offset: usize) -> Option<Self> {
    match offset {
      0 => Some(Self {drag: true}),
      1 => Some(Self {drag: false}),
      _ => None,
    }
  }
  pub fn to_offset(self) -> usize {
    match self.drag {
      true => 0,
      false => 1,
    }
  }
}
impl Default for BubbleColumnData {
  fn default() -> Self {
    Self {drag: true}
  }
}
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]
pub struct ScaffoldingData {
  pub bottom: bool,
  pub distance: NumberFrom0To7Property,
  pub waterlogged: bool,
}
impl ScaffoldingData {
  pub fn from_offset(offset: usize) -> Option<Self> {
    match offset {
      0 => Some(Self {bottom: true, distance: NumberFrom0To7Property::new(0), waterlogged: true}),
      1 => Some(Self {bottom: true, distance: NumberFrom0To7Property::new(0), waterlogged: false}),
      2 => Some(Self {bottom: true, distance: NumberFrom0To7Property::new(1), waterlogged: true}),
      3 => Some(Self {bottom: true, distance: NumberFrom0To7Property::new(1), waterlogged: false}),
      4 => Some(Self {bottom: true, distance: NumberFrom0To7Property::new(2), waterlogged: true}),
      5 => Some(Self {bottom: true, distance: NumberFrom0To7Property::new(2), waterlogged: false}),
      6 => Some(Self {bottom: true, distance: NumberFrom0To7Property::new(3), waterlogged: true}),
      7 => Some(Self {bottom: true, distance: NumberFrom0To7Property::new(3), waterlogged: false}),
      8 => Some(Self {bottom: true, distance: NumberFrom0To7Property::new(4), waterlogged: true}),
      9 => Some(Self {bottom: true, distance: NumberFrom0To7Property::new(4), waterlogged: false}),
      10 => Some(Self {bottom: true, distance: NumberFrom0To7Property::new(5), waterlogged: true}),
      11 => Some(Self {bottom: true, distance: NumberFrom0To7Property::new(5), waterlogged: false}),
      12 => Some(Self {bottom: true, distance: NumberFrom0To7Property::new(6), waterlogged: true}),
      13 => Some(Self {bottom: true, distance: NumberFrom0To7Property::new(6), waterlogged: false}),
      14 => Some(Self {bottom: true, distance: NumberFrom0To7Property::new(7), waterlogged: true}),
      15 => Some(Self {bottom: true, distance: NumberFrom0To7Property::new(7), waterlogged: false}),
      16 => Some(Self {bottom: false, distance: NumberFrom0To7Property::new(0), waterlogged: true}),
      17 => Some(Self {bottom: false, distance: NumberFrom0To7Property::new(0), waterlogged: false}),
      18 => Some(Self {bottom: false, distance: NumberFrom0To7Property::new(1), waterlogged: true}),
      19 => Some(Self {bottom: false, distance: NumberFrom0To7Property::new(1), waterlogged: false}),
      20 => Some(Self {bottom: false, distance: NumberFrom0To7Property::new(2), waterlogged: true}),
      21 => Some(Self {bottom: false, distance: NumberFrom0To7Property::new(2), waterlogged: false}),
      22 => Some(Self {bottom: false, distance: NumberFrom0To7Property::new(3), waterlogged: true}),
      23 => Some(Self {bottom: false, distance: NumberFrom0To7Property::new(3), waterlogged: false}),
      24 => Some(Self {bottom: false, distance: NumberFrom0To7Property::new(4), waterlogged: true}),
      25 => Some(Self {bottom: false, distance: NumberFrom0To7Property::new(4), waterlogged: false}),
      26 => Some(Self {bottom: false, distance: NumberFrom0To7Property::new(5), waterlogged: true}),
      27 => Some(Self {bottom: false, distance: NumberFrom0To7Property::new(5), waterlogged: false}),
      28 => Some(Self {bottom: false, distance: NumberFrom0To7Property::new(6), waterlogged: true}),
      29 => Some(Self {bottom: false, distance: NumberFrom0To7Property::new(6), waterlogged: false}),
      30 => Some(Self {bottom: false, distance: NumberFrom0To7Property::new(7), waterlogged: true}),
      31 => Some(Self {bottom: false, distance: NumberFrom0To7Property::new(7), waterlogged: false}),
      _ => None,
    }
  }
  pub fn to_offset(self) -> usize {
    match self.bottom {
      true => match self.distance.value() {
        0 => match self.waterlogged {
          true => 0,
          false => 1,
        },
        1 => match self.waterlogged {
          true => 2,
          false => 3,
        },
        2 => match self.waterlogged {
          true => 4,
          false => 5,
        },
        3 => match self.waterlogged {
          true => 6,
          false => 7,
        },
        4 => match self.waterlogged {
          true => 8,
          false => 9,
        },
        5 => match self.waterlogged {
          true => 10,
          false => 11,
        },
        6 => match self.waterlogged {
          true => 12,
          false => 13,
        },
        7 => match self.waterlogged {
          true => 14,
          false => 15,
        },
        _ => panic!("Illegal Block State"),
      },
      false => match self.distance.value() {
        0 => match self.waterlogged {
          true => 16,
          false => 17,
        },
        1 => match self.waterlogged {
          true => 18,
          false => 19,
        },
        2 => match self.waterlogged {
          true => 20,
          false => 21,
        },
        3 => match self.waterlogged {
          true => 22,
          false => 23,
        },
        4 => match self.waterlogged {
          true => 24,
          false => 25,
        },
        5 => match self.waterlogged {
          true => 26,
          false => 27,
        },
        6 => match self.waterlogged {
          true => 28,
          false => 29,
        },
        7 => match self.waterlogged {
          true => 30,
          false => 31,
        },
        _ => panic!("Illegal Block State"),
      },
    }
  }
}
impl Default for ScaffoldingData {
  fn default() -> Self {
    Self {bottom: false, distance: NumberFrom0To7Property::new(7), waterlogged: false}
  }
}
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]
pub struct BarrelData {
  pub facing: BlockFacingProperty,
  pub open: bool,
}
impl BarrelData {
  pub fn from_offset(offset: usize) -> Option<Self> {
    match offset {
      0 => Some(Self {facing: BlockFacingProperty::North, open: true}),
      1 => Some(Self {facing: BlockFacingProperty::North, open: false}),
      2 => Some(Self {facing: BlockFacingProperty::East, open: true}),
      3 => Some(Self {facing: BlockFacingProperty::East, open: false}),
      4 => Some(Self {facing: BlockFacingProperty::South, open: true}),
      5 => Some(Self {facing: BlockFacingProperty::South, open: false}),
      6 => Some(Self {facing: BlockFacingProperty::West, open: true}),
      7 => Some(Self {facing: BlockFacingProperty::West, open: false}),
      8 => Some(Self {facing: BlockFacingProperty::Up, open: true}),
      9 => Some(Self {facing: BlockFacingProperty::Up, open: false}),
      10 => Some(Self {facing: BlockFacingProperty::Down, open: true}),
      11 => Some(Self {facing: BlockFacingProperty::Down, open: false}),
      _ => None,
    }
  }
  pub fn to_offset(self) -> usize {
    match self.facing {
      BlockFacingProperty::North => match self.open {
        true => 0,
        false => 1,
      },
      BlockFacingProperty::East => match self.open {
        true => 2,
        false => 3,
      },
      BlockFacingProperty::South => match self.open {
        true => 4,
        false => 5,
      },
      BlockFacingProperty::West => match self.open {
        true => 6,
        false => 7,
      },
      BlockFacingProperty::Up => match self.open {
        true => 8,
        false => 9,
      },
      BlockFacingProperty::Down => match self.open {
        true => 10,
        false => 11,
      },
    }
  }
}
impl Default for BarrelData {
  fn default() -> Self {
    Self {facing: BlockFacingProperty::North, open: false}
  }
}
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]
pub struct GrindstoneData {
  pub face: FaceProperty,
  pub facing: CardinalFacingProperty,
}
impl GrindstoneData {
  pub fn from_offset(offset: usize) -> Option<Self> {
    match offset {
      0 => Some(Self {face: FaceProperty::Floor, facing: CardinalFacingProperty::North}),
      1 => Some(Self {face: FaceProperty::Floor, facing: CardinalFacingProperty::South}),
      2 => Some(Self {face: FaceProperty::Floor, facing: CardinalFacingProperty::West}),
      3 => Some(Self {face: FaceProperty::Floor, facing: CardinalFacingProperty::East}),
      4 => Some(Self {face: FaceProperty::Wall, facing: CardinalFacingProperty::North}),
      5 => Some(Self {face: FaceProperty::Wall, facing: CardinalFacingProperty::South}),
      6 => Some(Self {face: FaceProperty::Wall, facing: CardinalFacingProperty::West}),
      7 => Some(Self {face: FaceProperty::Wall, facing: CardinalFacingProperty::East}),
      8 => Some(Self {face: FaceProperty::Ceiling, facing: CardinalFacingProperty::North}),
      9 => Some(Self {face: FaceProperty::Ceiling, facing: CardinalFacingProperty::South}),
      10 => Some(Self {face: FaceProperty::Ceiling, facing: CardinalFacingProperty::West}),
      11 => Some(Self {face: FaceProperty::Ceiling, facing: CardinalFacingProperty::East}),
      _ => None,
    }
  }
  pub fn to_offset(self) -> usize {
    match self.face {
      FaceProperty::Floor => match self.facing {
        CardinalFacingProperty::North => 0,
        CardinalFacingProperty::South => 1,
        CardinalFacingProperty::West => 2,
        CardinalFacingProperty::East => 3,
      },
      FaceProperty::Wall => match self.facing {
        CardinalFacingProperty::North => 4,
        CardinalFacingProperty::South => 5,
        CardinalFacingProperty::West => 6,
        CardinalFacingProperty::East => 7,
      },
      FaceProperty::Ceiling => match self.facing {
        CardinalFacingProperty::North => 8,
        CardinalFacingProperty::South => 9,
        CardinalFacingProperty::West => 10,
        CardinalFacingProperty::East => 11,
      },
    }
  }
}
impl Default for GrindstoneData {
  fn default() -> Self {
    Self {face: FaceProperty::Wall, facing: CardinalFacingProperty::North}
  }
}
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]
pub struct LecternData {
  pub facing: CardinalFacingProperty,
  pub has_book: bool,
  pub powered: bool,
}
impl LecternData {
  pub fn from_offset(offset: usize) -> Option<Self> {
    match offset {
      0 => Some(Self {facing: CardinalFacingProperty::North, has_book: true, powered: true}),
      1 => Some(Self {facing: CardinalFacingProperty::North, has_book: true, powered: false}),
      2 => Some(Self {facing: CardinalFacingProperty::North, has_book: false, powered: true}),
      3 => Some(Self {facing: CardinalFacingProperty::North, has_book: false, powered: false}),
      4 => Some(Self {facing: CardinalFacingProperty::South, has_book: true, powered: true}),
      5 => Some(Self {facing: CardinalFacingProperty::South, has_book: true, powered: false}),
      6 => Some(Self {facing: CardinalFacingProperty::South, has_book: false, powered: true}),
      7 => Some(Self {facing: CardinalFacingProperty::South, has_book: false, powered: false}),
      8 => Some(Self {facing: CardinalFacingProperty::West, has_book: true, powered: true}),
      9 => Some(Self {facing: CardinalFacingProperty::West, has_book: true, powered: false}),
      10 => Some(Self {facing: CardinalFacingProperty::West, has_book: false, powered: true}),
      11 => Some(Self {facing: CardinalFacingProperty::West, has_book: false, powered: false}),
      12 => Some(Self {facing: CardinalFacingProperty::East, has_book: true, powered: true}),
      13 => Some(Self {facing: CardinalFacingProperty::East, has_book: true, powered: false}),
      14 => Some(Self {facing: CardinalFacingProperty::East, has_book: false, powered: true}),
      15 => Some(Self {facing: CardinalFacingProperty::East, has_book: false, powered: false}),
      _ => None,
    }
  }
  pub fn to_offset(self) -> usize {
    match self.facing {
      CardinalFacingProperty::North => match self.has_book {
        true => match self.powered {
          true => 0,
          false => 1,
        },
        false => match self.powered {
          true => 2,
          false => 3,
        },
      },
      CardinalFacingProperty::South => match self.has_book {
        true => match self.powered {
          true => 4,
          false => 5,
        },
        false => match self.powered {
          true => 6,
          false => 7,
        },
      },
      CardinalFacingProperty::West => match self.has_book {
        true => match self.powered {
          true => 8,
          false => 9,
        },
        false => match self.powered {
          true => 10,
          false => 11,
        },
      },
      CardinalFacingProperty::East => match self.has_book {
        true => match self.powered {
          true => 12,
          false => 13,
        },
        false => match self.powered {
          true => 14,
          false => 15,
        },
      },
    }
  }
}
impl Default for LecternData {
  fn default() -> Self {
    Self {facing: CardinalFacingProperty::North, has_book: false, powered: false}
  }
}
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]
pub struct BellData {
  pub attachment: BellAttachmentProperty,
  pub facing: CardinalFacingProperty,
  pub powered: bool,
}
impl BellData {
  pub fn from_offset(offset: usize) -> Option<Self> {
    match offset {
      0 => Some(Self {attachment: BellAttachmentProperty::Floor, facing: CardinalFacingProperty::North, powered: true}),
      1 => Some(Self {attachment: BellAttachmentProperty::Floor, facing: CardinalFacingProperty::North, powered: false}),
      2 => Some(Self {attachment: BellAttachmentProperty::Floor, facing: CardinalFacingProperty::South, powered: true}),
      3 => Some(Self {attachment: BellAttachmentProperty::Floor, facing: CardinalFacingProperty::South, powered: false}),
      4 => Some(Self {attachment: BellAttachmentProperty::Floor, facing: CardinalFacingProperty::West, powered: true}),
      5 => Some(Self {attachment: BellAttachmentProperty::Floor, facing: CardinalFacingProperty::West, powered: false}),
      6 => Some(Self {attachment: BellAttachmentProperty::Floor, facing: CardinalFacingProperty::East, powered: true}),
      7 => Some(Self {attachment: BellAttachmentProperty::Floor, facing: CardinalFacingProperty::East, powered: false}),
      8 => Some(Self {attachment: BellAttachmentProperty::Ceiling, facing: CardinalFacingProperty::North, powered: true}),
      9 => Some(Self {attachment: BellAttachmentProperty::Ceiling, facing: CardinalFacingProperty::North, powered: false}),
      10 => Some(Self {attachment: BellAttachmentProperty::Ceiling, facing: CardinalFacingProperty::South, powered: true}),
      11 => Some(Self {attachment: BellAttachmentProperty::Ceiling, facing: CardinalFacingProperty::South, powered: false}),
      12 => Some(Self {attachment: BellAttachmentProperty::Ceiling, facing: CardinalFacingProperty::West, powered: true}),
      13 => Some(Self {attachment: BellAttachmentProperty::Ceiling, facing: CardinalFacingProperty::West, powered: false}),
      14 => Some(Self {attachment: BellAttachmentProperty::Ceiling, facing: CardinalFacingProperty::East, powered: true}),
      15 => Some(Self {attachment: BellAttachmentProperty::Ceiling, facing: CardinalFacingProperty::East, powered: false}),
      16 => Some(Self {attachment: BellAttachmentProperty::SingleWall, facing: CardinalFacingProperty::North, powered: true}),
      17 => Some(Self {attachment: BellAttachmentProperty::SingleWall, facing: CardinalFacingProperty::North, powered: false}),
      18 => Some(Self {attachment: BellAttachmentProperty::SingleWall, facing: CardinalFacingProperty::South, powered: true}),
      19 => Some(Self {attachment: BellAttachmentProperty::SingleWall, facing: CardinalFacingProperty::South, powered: false}),
      20 => Some(Self {attachment: BellAttachmentProperty::SingleWall, facing: CardinalFacingProperty::West, powered: true}),
      21 => Some(Self {attachment: BellAttachmentProperty::SingleWall, facing: CardinalFacingProperty::West, powered: false}),
      22 => Some(Self {attachment: BellAttachmentProperty::SingleWall, facing: CardinalFacingProperty::East, powered: true}),
      23 => Some(Self {attachment: BellAttachmentProperty::SingleWall, facing: CardinalFacingProperty::East, powered: false}),
      24 => Some(Self {attachment: BellAttachmentProperty::DoubleWall, facing: CardinalFacingProperty::North, powered: true}),
      25 => Some(Self {attachment: BellAttachmentProperty::DoubleWall, facing: CardinalFacingProperty::North, powered: false}),
      26 => Some(Self {attachment: BellAttachmentProperty::DoubleWall, facing: CardinalFacingProperty::South, powered: true}),
      27 => Some(Self {attachment: BellAttachmentProperty::DoubleWall, facing: CardinalFacingProperty::South, powered: false}),
      28 => Some(Self {attachment: BellAttachmentProperty::DoubleWall, facing: CardinalFacingProperty::West, powered: true}),
      29 => Some(Self {attachment: BellAttachmentProperty::DoubleWall, facing: CardinalFacingProperty::West, powered: false}),
      30 => Some(Self {attachment: BellAttachmentProperty::DoubleWall, facing: CardinalFacingProperty::East, powered: true}),
      31 => Some(Self {attachment: BellAttachmentProperty::DoubleWall, facing: CardinalFacingProperty::East, powered: false}),
      _ => None,
    }
  }
  pub fn to_offset(self) -> usize {
    match self.attachment {
      BellAttachmentProperty::Floor => match self.facing {
        CardinalFacingProperty::North => match self.powered {
          true => 0,
          false => 1,
        },
        CardinalFacingProperty::South => match self.powered {
          true => 2,
          false => 3,
        },
        CardinalFacingProperty::West => match self.powered {
          true => 4,
          false => 5,
        },
        CardinalFacingProperty::East => match self.powered {
          true => 6,
          false => 7,
        },
      },
      BellAttachmentProperty::Ceiling => match self.facing {
        CardinalFacingProperty::North => match self.powered {
          true => 8,
          false => 9,
        },
        CardinalFacingProperty::South => match self.powered {
          true => 10,
          false => 11,
        },
        CardinalFacingProperty::West => match self.powered {
          true => 12,
          false => 13,
        },
        CardinalFacingProperty::East => match self.powered {
          true => 14,
          false => 15,
        },
      },
      BellAttachmentProperty::SingleWall => match self.facing {
        CardinalFacingProperty::North => match self.powered {
          true => 16,
          false => 17,
        },
        CardinalFacingProperty::South => match self.powered {
          true => 18,
          false => 19,
        },
        CardinalFacingProperty::West => match self.powered {
          true => 20,
          false => 21,
        },
        CardinalFacingProperty::East => match self.powered {
          true => 22,
          false => 23,
        },
      },
      BellAttachmentProperty::DoubleWall => match self.facing {
        CardinalFacingProperty::North => match self.powered {
          true => 24,
          false => 25,
        },
        CardinalFacingProperty::South => match self.powered {
          true => 26,
          false => 27,
        },
        CardinalFacingProperty::West => match self.powered {
          true => 28,
          false => 29,
        },
        CardinalFacingProperty::East => match self.powered {
          true => 30,
          false => 31,
        },
      },
    }
  }
}
impl Default for BellData {
  fn default() -> Self {
    Self {attachment: BellAttachmentProperty::Floor, facing: CardinalFacingProperty::North, powered: false}
  }
}
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]
pub struct LanternData {
  pub hanging: bool,
}
impl LanternData {
  pub fn from_offset(offset: usize) -> Option<Self> {
    match offset {
      0 => Some(Self {hanging: true}),
      1 => Some(Self {hanging: false}),
      _ => None,
    }
  }
  pub fn to_offset(self) -> usize {
    match self.hanging {
      true => 0,
      false => 1,
    }
  }
}
impl Default for LanternData {
  fn default() -> Self {
    Self {hanging: false}
  }
}
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]
pub struct CampfireData {
  pub facing: CardinalFacingProperty,
  pub lit: bool,
  pub signal_fire: bool,
  pub waterlogged: bool,
}
impl CampfireData {
  pub fn from_offset(offset: usize) -> Option<Self> {
    match offset {
      0 => Some(Self {facing: CardinalFacingProperty::North, lit: true, signal_fire: true, waterlogged: true}),
      1 => Some(Self {facing: CardinalFacingProperty::North, lit: true, signal_fire: true, waterlogged: false}),
      2 => Some(Self {facing: CardinalFacingProperty::North, lit: true, signal_fire: false, waterlogged: true}),
      3 => Some(Self {facing: CardinalFacingProperty::North, lit: true, signal_fire: false, waterlogged: false}),
      4 => Some(Self {facing: CardinalFacingProperty::North, lit: false, signal_fire: true, waterlogged: true}),
      5 => Some(Self {facing: CardinalFacingProperty::North, lit: false, signal_fire: true, waterlogged: false}),
      6 => Some(Self {facing: CardinalFacingProperty::North, lit: false, signal_fire: false, waterlogged: true}),
      7 => Some(Self {facing: CardinalFacingProperty::North, lit: false, signal_fire: false, waterlogged: false}),
      8 => Some(Self {facing: CardinalFacingProperty::South, lit: true, signal_fire: true, waterlogged: true}),
      9 => Some(Self {facing: CardinalFacingProperty::South, lit: true, signal_fire: true, waterlogged: false}),
      10 => Some(Self {facing: CardinalFacingProperty::South, lit: true, signal_fire: false, waterlogged: true}),
      11 => Some(Self {facing: CardinalFacingProperty::South, lit: true, signal_fire: false, waterlogged: false}),
      12 => Some(Self {facing: CardinalFacingProperty::South, lit: false, signal_fire: true, waterlogged: true}),
      13 => Some(Self {facing: CardinalFacingProperty::South, lit: false, signal_fire: true, waterlogged: false}),
      14 => Some(Self {facing: CardinalFacingProperty::South, lit: false, signal_fire: false, waterlogged: true}),
      15 => Some(Self {facing: CardinalFacingProperty::South, lit: false, signal_fire: false, waterlogged: false}),
      16 => Some(Self {facing: CardinalFacingProperty::West, lit: true, signal_fire: true, waterlogged: true}),
      17 => Some(Self {facing: CardinalFacingProperty::West, lit: true, signal_fire: true, waterlogged: false}),
      18 => Some(Self {facing: CardinalFacingProperty::West, lit: true, signal_fire: false, waterlogged: true}),
      19 => Some(Self {facing: CardinalFacingProperty::West, lit: true, signal_fire: false, waterlogged: false}),
      20 => Some(Self {facing: CardinalFacingProperty::West, lit: false, signal_fire: true, waterlogged: true}),
      21 => Some(Self {facing: CardinalFacingProperty::West, lit: false, signal_fire: true, waterlogged: false}),
      22 => Some(Self {facing: CardinalFacingProperty::West, lit: false, signal_fire: false, waterlogged: true}),
      23 => Some(Self {facing: CardinalFacingProperty::West, lit: false, signal_fire: false, waterlogged: false}),
      24 => Some(Self {facing: CardinalFacingProperty::East, lit: true, signal_fire: true, waterlogged: true}),
      25 => Some(Self {facing: CardinalFacingProperty::East, lit: true, signal_fire: true, waterlogged: false}),
      26 => Some(Self {facing: CardinalFacingProperty::East, lit: true, signal_fire: false, waterlogged: true}),
      27 => Some(Self {facing: CardinalFacingProperty::East, lit: true, signal_fire: false, waterlogged: false}),
      28 => Some(Self {facing: CardinalFacingProperty::East, lit: false, signal_fire: true, waterlogged: true}),
      29 => Some(Self {facing: CardinalFacingProperty::East, lit: false, signal_fire: true, waterlogged: false}),
      30 => Some(Self {facing: CardinalFacingProperty::East, lit: false, signal_fire: false, waterlogged: true}),
      31 => Some(Self {facing: CardinalFacingProperty::East, lit: false, signal_fire: false, waterlogged: false}),
      _ => None,
    }
  }
  pub fn to_offset(self) -> usize {
    match self.facing {
      CardinalFacingProperty::North => match self.lit {
        true => match self.signal_fire {
          true => match self.waterlogged {
            true => 0,
            false => 1,
          },
          false => match self.waterlogged {
            true => 2,
            false => 3,
          },
        },
        false => match self.signal_fire {
          true => match self.waterlogged {
            true => 4,
            false => 5,
          },
          false => match self.waterlogged {
            true => 6,
            false => 7,
          },
        },
      },
      CardinalFacingProperty::South => match self.lit {
        true => match self.signal_fire {
          true => match self.waterlogged {
            true => 8,
            false => 9,
          },
          false => match self.waterlogged {
            true => 10,
            false => 11,
          },
        },
        false => match self.signal_fire {
          true => match self.waterlogged {
            true => 12,
            false => 13,
          },
          false => match self.waterlogged {
            true => 14,
            false => 15,
          },
        },
      },
      CardinalFacingProperty::West => match self.lit {
        true => match self.signal_fire {
          true => match self.waterlogged {
            true => 16,
            false => 17,
          },
          false => match self.waterlogged {
            true => 18,
            false => 19,
          },
        },
        false => match self.signal_fire {
          true => match self.waterlogged {
            true => 20,
            false => 21,
          },
          false => match self.waterlogged {
            true => 22,
            false => 23,
          },
        },
      },
      CardinalFacingProperty::East => match self.lit {
        true => match self.signal_fire {
          true => match self.waterlogged {
            true => 24,
            false => 25,
          },
          false => match self.waterlogged {
            true => 26,
            false => 27,
          },
        },
        false => match self.signal_fire {
          true => match self.waterlogged {
            true => 28,
            false => 29,
          },
          false => match self.waterlogged {
            true => 30,
            false => 31,
          },
        },
      },
    }
  }
}
impl Default for CampfireData {
  fn default() -> Self {
    Self {facing: CardinalFacingProperty::North, lit: true, signal_fire: false, waterlogged: false}
  }
}
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]
pub struct SweetBerryBushData {
  pub age: NumberFrom0To3Property,
}
impl SweetBerryBushData {
  pub fn from_offset(offset: usize) -> Option<Self> {
    match offset {
      0 => Some(Self {age: NumberFrom0To3Property::new(0)}),
      1 => Some(Self {age: NumberFrom0To3Property::new(1)}),
      2 => Some(Self {age: NumberFrom0To3Property::new(2)}),
      3 => Some(Self {age: NumberFrom0To3Property::new(3)}),
      _ => None,
    }
  }
  pub fn to_offset(self) -> usize {
    match self.age.value() {
      0 => 0,
      1 => 1,
      2 => 2,
      3 => 3,
      _ => panic!("Illegal Block State"),
    }
  }
}
impl Default for SweetBerryBushData {
  fn default() -> Self {
    Self {age: NumberFrom0To3Property::new(0)}
  }
}
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]
pub struct StructureBlockData {
  pub mode: StructureBlockModeProperty,
}
impl StructureBlockData {
  pub fn from_offset(offset: usize) -> Option<Self> {
    match offset {
      0 => Some(Self {mode: StructureBlockModeProperty::Save}),
      1 => Some(Self {mode: StructureBlockModeProperty::Load}),
      2 => Some(Self {mode: StructureBlockModeProperty::Corner}),
      3 => Some(Self {mode: StructureBlockModeProperty::Data}),
      _ => None,
    }
  }
  pub fn to_offset(self) -> usize {
    match self.mode {
      StructureBlockModeProperty::Save => 0,
      StructureBlockModeProperty::Load => 1,
      StructureBlockModeProperty::Corner => 2,
      StructureBlockModeProperty::Data => 3,
    }
  }
}
impl Default for StructureBlockData {
  fn default() -> Self {
    Self {mode: StructureBlockModeProperty::Save}
  }
}
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]
pub struct ComposterData {
  pub level: NumberFrom0To8Property,
}
impl ComposterData {
  pub fn from_offset(offset: usize) -> Option<Self> {
    match offset {
      0 => Some(Self {level: NumberFrom0To8Property::new(0)}),
      1 => Some(Self {level: NumberFrom0To8Property::new(1)}),
      2 => Some(Self {level: NumberFrom0To8Property::new(2)}),
      3 => Some(Self {level: NumberFrom0To8Property::new(3)}),
      4 => Some(Self {level: NumberFrom0To8Property::new(4)}),
      5 => Some(Self {level: NumberFrom0To8Property::new(5)}),
      6 => Some(Self {level: NumberFrom0To8Property::new(6)}),
      7 => Some(Self {level: NumberFrom0To8Property::new(7)}),
      8 => Some(Self {level: NumberFrom0To8Property::new(8)}),
      _ => None,
    }
  }
  pub fn to_offset(self) -> usize {
    match self.level.value() {
      0 => 0,
      1 => 1,
      2 => 2,
      3 => 3,
      4 => 4,
      5 => 5,
      6 => 6,
      7 => 7,
      8 => 8,
      _ => panic!("Illegal Block State"),
    }
  }
}
impl Default for ComposterData {
  fn default() -> Self {
    Self {level: NumberFrom0To8Property::new(0)}
  }
}
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]
pub struct BeeNestData {
  pub facing: CardinalFacingProperty,
  pub honey_level: NumberFrom0To5Property,
}
impl BeeNestData {
  pub fn from_offset(offset: usize) -> Option<Self> {
    match offset {
      0 => Some(Self {facing: CardinalFacingProperty::North, honey_level: NumberFrom0To5Property::new(0)}),
      1 => Some(Self {facing: CardinalFacingProperty::North, honey_level: NumberFrom0To5Property::new(1)}),
      2 => Some(Self {facing: CardinalFacingProperty::North, honey_level: NumberFrom0To5Property::new(2)}),
      3 => Some(Self {facing: CardinalFacingProperty::North, honey_level: NumberFrom0To5Property::new(3)}),
      4 => Some(Self {facing: CardinalFacingProperty::North, honey_level: NumberFrom0To5Property::new(4)}),
      5 => Some(Self {facing: CardinalFacingProperty::North, honey_level: NumberFrom0To5Property::new(5)}),
      6 => Some(Self {facing: CardinalFacingProperty::South, honey_level: NumberFrom0To5Property::new(0)}),
      7 => Some(Self {facing: CardinalFacingProperty::South, honey_level: NumberFrom0To5Property::new(1)}),
      8 => Some(Self {facing: CardinalFacingProperty::South, honey_level: NumberFrom0To5Property::new(2)}),
      9 => Some(Self {facing: CardinalFacingProperty::South, honey_level: NumberFrom0To5Property::new(3)}),
      10 => Some(Self {facing: CardinalFacingProperty::South, honey_level: NumberFrom0To5Property::new(4)}),
      11 => Some(Self {facing: CardinalFacingProperty::South, honey_level: NumberFrom0To5Property::new(5)}),
      12 => Some(Self {facing: CardinalFacingProperty::West, honey_level: NumberFrom0To5Property::new(0)}),
      13 => Some(Self {facing: CardinalFacingProperty::West, honey_level: NumberFrom0To5Property::new(1)}),
      14 => Some(Self {facing: CardinalFacingProperty::West, honey_level: NumberFrom0To5Property::new(2)}),
      15 => Some(Self {facing: CardinalFacingProperty::West, honey_level: NumberFrom0To5Property::new(3)}),
      16 => Some(Self {facing: CardinalFacingProperty::West, honey_level: NumberFrom0To5Property::new(4)}),
      17 => Some(Self {facing: CardinalFacingProperty::West, honey_level: NumberFrom0To5Property::new(5)}),
      18 => Some(Self {facing: CardinalFacingProperty::East, honey_level: NumberFrom0To5Property::new(0)}),
      19 => Some(Self {facing: CardinalFacingProperty::East, honey_level: NumberFrom0To5Property::new(1)}),
      20 => Some(Self {facing: CardinalFacingProperty::East, honey_level: NumberFrom0To5Property::new(2)}),
      21 => Some(Self {facing: CardinalFacingProperty::East, honey_level: NumberFrom0To5Property::new(3)}),
      22 => Some(Self {facing: CardinalFacingProperty::East, honey_level: NumberFrom0To5Property::new(4)}),
      23 => Some(Self {facing: CardinalFacingProperty::East, honey_level: NumberFrom0To5Property::new(5)}),
      _ => None,
    }
  }
  pub fn to_offset(self) -> usize {
    match self.facing {
      CardinalFacingProperty::North => match self.honey_level.value() {
        0 => 0,
        1 => 1,
        2 => 2,
        3 => 3,
        4 => 4,
        5 => 5,
        _ => panic!("Illegal Block State"),
      },
      CardinalFacingProperty::South => match self.honey_level.value() {
        0 => 6,
        1 => 7,
        2 => 8,
        3 => 9,
        4 => 10,
        5 => 11,
        _ => panic!("Illegal Block State"),
      },
      CardinalFacingProperty::West => match self.honey_level.value() {
        0 => 12,
        1 => 13,
        2 => 14,
        3 => 15,
        4 => 16,
        5 => 17,
        _ => panic!("Illegal Block State"),
      },
      CardinalFacingProperty::East => match self.honey_level.value() {
        0 => 18,
        1 => 19,
        2 => 20,
        3 => 21,
        4 => 22,
        5 => 23,
        _ => panic!("Illegal Block State"),
      },
    }
  }
}
impl Default for BeeNestData {
  fn default() -> Self {
    Self {facing: CardinalFacingProperty::North, honey_level: NumberFrom0To5Property::new(0)}
  }
}
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]
pub struct BeehiveData {
  pub facing: CardinalFacingProperty,
  pub honey_level: NumberFrom0To5Property,
}
impl BeehiveData {
  pub fn from_offset(offset: usize) -> Option<Self> {
    match offset {
      0 => Some(Self {facing: CardinalFacingProperty::North, honey_level: NumberFrom0To5Property::new(0)}),
      1 => Some(Self {facing: CardinalFacingProperty::North, honey_level: NumberFrom0To5Property::new(1)}),
      2 => Some(Self {facing: CardinalFacingProperty::North, honey_level: NumberFrom0To5Property::new(2)}),
      3 => Some(Self {facing: CardinalFacingProperty::North, honey_level: NumberFrom0To5Property::new(3)}),
      4 => Some(Self {facing: CardinalFacingProperty::North, honey_level: NumberFrom0To5Property::new(4)}),
      5 => Some(Self {facing: CardinalFacingProperty::North, honey_level: NumberFrom0To5Property::new(5)}),
      6 => Some(Self {facing: CardinalFacingProperty::South, honey_level: NumberFrom0To5Property::new(0)}),
      7 => Some(Self {facing: CardinalFacingProperty::South, honey_level: NumberFrom0To5Property::new(1)}),
      8 => Some(Self {facing: CardinalFacingProperty::South, honey_level: NumberFrom0To5Property::new(2)}),
      9 => Some(Self {facing: CardinalFacingProperty::South, honey_level: NumberFrom0To5Property::new(3)}),
      10 => Some(Self {facing: CardinalFacingProperty::South, honey_level: NumberFrom0To5Property::new(4)}),
      11 => Some(Self {facing: CardinalFacingProperty::South, honey_level: NumberFrom0To5Property::new(5)}),
      12 => Some(Self {facing: CardinalFacingProperty::West, honey_level: NumberFrom0To5Property::new(0)}),
      13 => Some(Self {facing: CardinalFacingProperty::West, honey_level: NumberFrom0To5Property::new(1)}),
      14 => Some(Self {facing: CardinalFacingProperty::West, honey_level: NumberFrom0To5Property::new(2)}),
      15 => Some(Self {facing: CardinalFacingProperty::West, honey_level: NumberFrom0To5Property::new(3)}),
      16 => Some(Self {facing: CardinalFacingProperty::West, honey_level: NumberFrom0To5Property::new(4)}),
      17 => Some(Self {facing: CardinalFacingProperty::West, honey_level: NumberFrom0To5Property::new(5)}),
      18 => Some(Self {facing: CardinalFacingProperty::East, honey_level: NumberFrom0To5Property::new(0)}),
      19 => Some(Self {facing: CardinalFacingProperty::East, honey_level: NumberFrom0To5Property::new(1)}),
      20 => Some(Self {facing: CardinalFacingProperty::East, honey_level: NumberFrom0To5Property::new(2)}),
      21 => Some(Self {facing: CardinalFacingProperty::East, honey_level: NumberFrom0To5Property::new(3)}),
      22 => Some(Self {facing: CardinalFacingProperty::East, honey_level: NumberFrom0To5Property::new(4)}),
      23 => Some(Self {facing: CardinalFacingProperty::East, honey_level: NumberFrom0To5Property::new(5)}),
      _ => None,
    }
  }
  pub fn to_offset(self) -> usize {
    match self.facing {
      CardinalFacingProperty::North => match self.honey_level.value() {
        0 => 0,
        1 => 1,
        2 => 2,
        3 => 3,
        4 => 4,
        5 => 5,
        _ => panic!("Illegal Block State"),
      },
      CardinalFacingProperty::South => match self.honey_level.value() {
        0 => 6,
        1 => 7,
        2 => 8,
        3 => 9,
        4 => 10,
        5 => 11,
        _ => panic!("Illegal Block State"),
      },
      CardinalFacingProperty::West => match self.honey_level.value() {
        0 => 12,
        1 => 13,
        2 => 14,
        3 => 15,
        4 => 16,
        5 => 17,
        _ => panic!("Illegal Block State"),
      },
      CardinalFacingProperty::East => match self.honey_level.value() {
        0 => 18,
        1 => 19,
        2 => 20,
        3 => 21,
        4 => 22,
        5 => 23,
        _ => panic!("Illegal Block State"),
      },
    }
  }
}
impl Default for BeehiveData {
  fn default() -> Self {
    Self {facing: CardinalFacingProperty::North, honey_level: NumberFrom0To5Property::new(0)}
  }
}

// Block state data property structures

#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]
pub struct NumberFrom0To1Property {
  value: u8,
}
impl NumberFrom0To1Property {
  pub const MIN_VALUE: u8 = 0;
  pub const MAX_VALUE: u8 = 1;
  pub fn new(value: u8) -> Self {
    assert!(value >= Self::MIN_VALUE, "Value {} is smaller than {}", value, Self::MIN_VALUE);
    assert!(value <= Self::MAX_VALUE, "Value {} is greater than {}", value, Self::MAX_VALUE);
    Self {value}
  }
  pub fn value(&self) -> u8 {
    self.value
  }
  pub fn set(&mut self, new_value: u8) {
    assert!(new_value >= Self::MIN_VALUE, "New value {} is smaller than {}", new_value, Self::MIN_VALUE);
    assert!(new_value <= Self::MAX_VALUE, "New value {} is greater than {}", new_value, Self::MAX_VALUE);
    self.value = new_value;
  }
}
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]
pub struct NumberFrom0To15Property {
  value: u8,
}
impl NumberFrom0To15Property {
  pub const MIN_VALUE: u8 = 0;
  pub const MAX_VALUE: u8 = 15;
  pub fn new(value: u8) -> Self {
    assert!(value >= Self::MIN_VALUE, "Value {} is smaller than {}", value, Self::MIN_VALUE);
    assert!(value <= Self::MAX_VALUE, "Value {} is greater than {}", value, Self::MAX_VALUE);
    Self {value}
  }
  pub fn value(&self) -> u8 {
    self.value
  }
  pub fn set(&mut self, new_value: u8) {
    assert!(new_value >= Self::MIN_VALUE, "New value {} is smaller than {}", new_value, Self::MIN_VALUE);
    assert!(new_value <= Self::MAX_VALUE, "New value {} is greater than {}", new_value, Self::MAX_VALUE);
    self.value = new_value;
  }
}
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]
pub enum AxisProperty {
  X,
  Y,
  Z,
}
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]
pub struct NumberFrom1To7Property {
  value: u8,
}
impl NumberFrom1To7Property {
  pub const MIN_VALUE: u8 = 1;
  pub const MAX_VALUE: u8 = 7;
  pub fn new(value: u8) -> Self {
    assert!(value >= Self::MIN_VALUE, "Value {} is smaller than {}", value, Self::MIN_VALUE);
    assert!(value <= Self::MAX_VALUE, "Value {} is greater than {}", value, Self::MAX_VALUE);
    Self {value}
  }
  pub fn value(&self) -> u8 {
    self.value
  }
  pub fn set(&mut self, new_value: u8) {
    assert!(new_value >= Self::MIN_VALUE, "New value {} is smaller than {}", new_value, Self::MIN_VALUE);
    assert!(new_value <= Self::MAX_VALUE, "New value {} is greater than {}", new_value, Self::MAX_VALUE);
    self.value = new_value;
  }
}
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]
pub enum BlockFacingProperty {
  North,
  South,
  West,
  East,
  Up,
  Down,
}
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]
pub enum NoteBlockInstrumentProperty {
  Banjo,
  Basedrum,
  Bass,
  Bell,
  Bit,
  Chime,
  CowBell,
  Didgeridoo,
  Flute,
  Guitar,
  Harp,
  Hat,
  IronXylophone,
  Pling,
  Snare,
  Xylophone,
}
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]
pub struct NumberFrom0To24Property {
  value: u8,
}
impl NumberFrom0To24Property {
  pub const MIN_VALUE: u8 = 0;
  pub const MAX_VALUE: u8 = 24;
  pub fn new(value: u8) -> Self {
    assert!(value >= Self::MIN_VALUE, "Value {} is smaller than {}", value, Self::MIN_VALUE);
    assert!(value <= Self::MAX_VALUE, "Value {} is greater than {}", value, Self::MAX_VALUE);
    Self {value}
  }
  pub fn value(&self) -> u8 {
    self.value
  }
  pub fn set(&mut self, new_value: u8) {
    assert!(new_value >= Self::MIN_VALUE, "New value {} is smaller than {}", new_value, Self::MIN_VALUE);
    assert!(new_value <= Self::MAX_VALUE, "New value {} is greater than {}", new_value, Self::MAX_VALUE);
    self.value = new_value;
  }
}
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]
pub enum CardinalFacingProperty {
  North,
  South,
  West,
  East,
}
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]
pub enum BedPartProperty {
  Head,
  Foot,
}
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]
pub enum PoweredRailShapeProperty {
  AscendingEast,
  AscendingNorth,
  AscendingSouth,
  AscendingWest,
  EastWest,
  NorthSouth,
}
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]
pub enum DetectorRailShapeProperty {
  AscendingEast,
  AscendingNorth,
  AscendingSouth,
  AscendingWest,
  EastWest,
  NorthSouth,
}
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]
pub enum TallSeagrassHalfProperty {
  Lower,
  Upper,
}
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]
pub enum PistonHeadTypeProperty {
  Normal,
  Sticky,
}
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]
pub enum StairsHalfProperty {
  Bottom,
  Top,
}
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]
pub enum StairsShapeProperty {
  Straight,
  InnerLeft,
  InnerRight,
  OuterLeft,
  OuterRight,
}
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]
pub enum ChestTypeProperty {
  Single,
  Left,
  Right,
}
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]
pub enum RedstoneWireConnectionProperty {
  Up,
  Side,
  None,
}
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]
pub struct NumberFrom0To7Property {
  value: u8,
}
impl NumberFrom0To7Property {
  pub const MIN_VALUE: u8 = 0;
  pub const MAX_VALUE: u8 = 7;
  pub fn new(value: u8) -> Self {
    assert!(value >= Self::MIN_VALUE, "Value {} is smaller than {}", value, Self::MIN_VALUE);
    assert!(value <= Self::MAX_VALUE, "Value {} is greater than {}", value, Self::MAX_VALUE);
    Self {value}
  }
  pub fn value(&self) -> u8 {
    self.value
  }
  pub fn set(&mut self, new_value: u8) {
    assert!(new_value >= Self::MIN_VALUE, "New value {} is smaller than {}", new_value, Self::MIN_VALUE);
    assert!(new_value <= Self::MAX_VALUE, "New value {} is greater than {}", new_value, Self::MAX_VALUE);
    self.value = new_value;
  }
}
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]
pub enum DoorHalfProperty {
  Lower,
  Upper,
}
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]
pub enum DoorHingeProperty {
  Left,
  Right,
}
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]
pub enum RailShapeProperty {
  NorthSouth,
  EastWest,
  AscendingEast,
  AscendingWest,
  AscendingNorth,
  AscendingSouth,
  SouthEast,
  SouthWest,
  NorthWest,
  NorthEast,
}
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]
pub enum FaceProperty {
  Floor,
  Wall,
  Ceiling,
}
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]
pub enum IronDoorHalfProperty {
  Lower,
  Upper,
}
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]
pub enum IronDoorHingeProperty {
  Left,
  Right,
}
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]
pub struct NumberFrom1To8Property {
  value: u8,
}
impl NumberFrom1To8Property {
  pub const MIN_VALUE: u8 = 1;
  pub const MAX_VALUE: u8 = 8;
  pub fn new(value: u8) -> Self {
    assert!(value >= Self::MIN_VALUE, "Value {} is smaller than {}", value, Self::MIN_VALUE);
    assert!(value <= Self::MAX_VALUE, "Value {} is greater than {}", value, Self::MAX_VALUE);
    Self {value}
  }
  pub fn value(&self) -> u8 {
    self.value
  }
  pub fn set(&mut self, new_value: u8) {
    assert!(new_value >= Self::MIN_VALUE, "New value {} is smaller than {}", new_value, Self::MIN_VALUE);
    assert!(new_value <= Self::MAX_VALUE, "New value {} is greater than {}", new_value, Self::MAX_VALUE);
    self.value = new_value;
  }
}
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]
pub enum NetherPortalAxisProperty {
  X,
  Z,
}
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]
pub struct NumberFrom0To6Property {
  value: u8,
}
impl NumberFrom0To6Property {
  pub const MIN_VALUE: u8 = 0;
  pub const MAX_VALUE: u8 = 6;
  pub fn new(value: u8) -> Self {
    assert!(value >= Self::MIN_VALUE, "Value {} is smaller than {}", value, Self::MIN_VALUE);
    assert!(value <= Self::MAX_VALUE, "Value {} is greater than {}", value, Self::MAX_VALUE);
    Self {value}
  }
  pub fn value(&self) -> u8 {
    self.value
  }
  pub fn set(&mut self, new_value: u8) {
    assert!(new_value >= Self::MIN_VALUE, "New value {} is smaller than {}", new_value, Self::MIN_VALUE);
    assert!(new_value <= Self::MAX_VALUE, "New value {} is greater than {}", new_value, Self::MAX_VALUE);
    self.value = new_value;
  }
}
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]
pub struct NumberFrom1To4Property {
  value: u8,
}
impl NumberFrom1To4Property {
  pub const MIN_VALUE: u8 = 1;
  pub const MAX_VALUE: u8 = 4;
  pub fn new(value: u8) -> Self {
    assert!(value >= Self::MIN_VALUE, "Value {} is smaller than {}", value, Self::MIN_VALUE);
    assert!(value <= Self::MAX_VALUE, "Value {} is greater than {}", value, Self::MAX_VALUE);
    Self {value}
  }
  pub fn value(&self) -> u8 {
    self.value
  }
  pub fn set(&mut self, new_value: u8) {
    assert!(new_value >= Self::MIN_VALUE, "New value {} is smaller than {}", new_value, Self::MIN_VALUE);
    assert!(new_value <= Self::MAX_VALUE, "New value {} is greater than {}", new_value, Self::MAX_VALUE);
    self.value = new_value;
  }
}
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]
pub enum TrapdoorHalfProperty {
  Bottom,
  Top,
}
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]
pub struct NumberFrom0To3Property {
  value: u8,
}
impl NumberFrom0To3Property {
  pub const MIN_VALUE: u8 = 0;
  pub const MAX_VALUE: u8 = 3;
  pub fn new(value: u8) -> Self {
    assert!(value >= Self::MIN_VALUE, "Value {} is smaller than {}", value, Self::MIN_VALUE);
    assert!(value <= Self::MAX_VALUE, "Value {} is greater than {}", value, Self::MAX_VALUE);
    Self {value}
  }
  pub fn value(&self) -> u8 {
    self.value
  }
  pub fn set(&mut self, new_value: u8) {
    assert!(new_value >= Self::MIN_VALUE, "New value {} is smaller than {}", new_value, Self::MIN_VALUE);
    assert!(new_value <= Self::MAX_VALUE, "New value {} is greater than {}", new_value, Self::MAX_VALUE);
    self.value = new_value;
  }
}
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]
pub struct NumberFrom0To2Property {
  value: u8,
}
impl NumberFrom0To2Property {
  pub const MIN_VALUE: u8 = 0;
  pub const MAX_VALUE: u8 = 2;
  pub fn new(value: u8) -> Self {
    assert!(value >= Self::MIN_VALUE, "Value {} is smaller than {}", value, Self::MIN_VALUE);
    assert!(value <= Self::MAX_VALUE, "Value {} is greater than {}", value, Self::MAX_VALUE);
    Self {value}
  }
  pub fn value(&self) -> u8 {
    self.value
  }
  pub fn set(&mut self, new_value: u8) {
    assert!(new_value >= Self::MIN_VALUE, "New value {} is smaller than {}", new_value, Self::MIN_VALUE);
    assert!(new_value <= Self::MAX_VALUE, "New value {} is greater than {}", new_value, Self::MAX_VALUE);
    self.value = new_value;
  }
}
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]
pub enum ComparatorModeProperty {
  Compare,
  Subtract,
}
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]
pub enum HopperFacingProperty {
  Down,
  North,
  South,
  West,
  East,
}
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]
pub enum ActivatorRailShapeProperty {
  AscendingEast,
  AscendingNorth,
  AscendingSouth,
  AscendingWest,
  EastWest,
  NorthSouth,
}
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]
pub enum IronTrapdoorHalfProperty {
  Bottom,
  Top,
}
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]
pub enum SlabTypeProperty {
  Bottom,
  Double,
  Top,
}
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]
pub enum SunflowerHalfProperty {
  Lower,
  Upper,
}
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]
pub enum LilacHalfProperty {
  Lower,
  Upper,
}
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]
pub enum RoseBushHalfProperty {
  Lower,
  Upper,
}
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]
pub enum PeonyHalfProperty {
  Lower,
  Upper,
}
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]
pub enum TallGrassHalfProperty {
  Lower,
  Upper,
}
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]
pub enum LargeFernHalfProperty {
  Lower,
  Upper,
}
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]
pub struct NumberFrom0To5Property {
  value: u8,
}
impl NumberFrom0To5Property {
  pub const MIN_VALUE: u8 = 0;
  pub const MAX_VALUE: u8 = 5;
  pub fn new(value: u8) -> Self {
    assert!(value >= Self::MIN_VALUE, "Value {} is smaller than {}", value, Self::MIN_VALUE);
    assert!(value <= Self::MAX_VALUE, "Value {} is greater than {}", value, Self::MAX_VALUE);
    Self {value}
  }
  pub fn value(&self) -> u8 {
    self.value
  }
  pub fn set(&mut self, new_value: u8) {
    assert!(new_value >= Self::MIN_VALUE, "New value {} is smaller than {}", new_value, Self::MIN_VALUE);
    assert!(new_value <= Self::MAX_VALUE, "New value {} is greater than {}", new_value, Self::MAX_VALUE);
    self.value = new_value;
  }
}
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]
pub struct NumberFrom0To25Property {
  value: u8,
}
impl NumberFrom0To25Property {
  pub const MIN_VALUE: u8 = 0;
  pub const MAX_VALUE: u8 = 25;
  pub fn new(value: u8) -> Self {
    assert!(value >= Self::MIN_VALUE, "Value {} is smaller than {}", value, Self::MIN_VALUE);
    assert!(value <= Self::MAX_VALUE, "Value {} is greater than {}", value, Self::MAX_VALUE);
    Self {value}
  }
  pub fn value(&self) -> u8 {
    self.value
  }
  pub fn set(&mut self, new_value: u8) {
    assert!(new_value >= Self::MIN_VALUE, "New value {} is smaller than {}", new_value, Self::MIN_VALUE);
    assert!(new_value <= Self::MAX_VALUE, "New value {} is greater than {}", new_value, Self::MAX_VALUE);
    self.value = new_value;
  }
}
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]
pub enum BambooLeavesProperty {
  Large,
  None,
  Small,
}
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]
pub enum BellAttachmentProperty {
  Ceiling,
  DoubleWall,
  Floor,
  SingleWall,
}
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]
pub enum StructureBlockModeProperty {
  Corner,
  Data,
  Load,
  Save,
}
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]
pub struct NumberFrom0To8Property {
  value: u8,
}
impl NumberFrom0To8Property {
  pub const MIN_VALUE: u8 = 0;
  pub const MAX_VALUE: u8 = 8;
  pub fn new(value: u8) -> Self {
    assert!(value >= Self::MIN_VALUE, "Value {} is smaller than {}", value, Self::MIN_VALUE);
    assert!(value <= Self::MAX_VALUE, "Value {} is greater than {}", value, Self::MAX_VALUE);
    Self {value}
  }
  pub fn value(&self) -> u8 {
    self.value
  }
  pub fn set(&mut self, new_value: u8) {
    assert!(new_value >= Self::MIN_VALUE, "New value {} is smaller than {}", new_value, Self::MIN_VALUE);
    assert!(new_value <= Self::MAX_VALUE, "New value {} is greater than {}", new_value, Self::MAX_VALUE);
    self.value = new_value;
  }
}
